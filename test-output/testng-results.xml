<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="141" passed="66" failed="16" skipped="59">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-22T18:35:10Z" name="Suite" finished-at="2025-05-22T18:35:32Z" duration-ms="22006">
    <groups>
    </groups>
    <test started-at="2025-05-22T18:35:10Z" name="MenuMitra API Tests" finished-at="2025-05-22T18:35:32Z" duration-ms="22006">
      <class name="com.menumitratCommonAPITestScript.verifyOTPTestScript">
        <test-method is-config="true" signature="verifyOTPSetup()[pri:0, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7a362b6b]" started-at="2025-05-23T00:05:17Z" name="verifyOTPSetup" finished-at="2025-05-23T00:05:17Z" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPSetup -->
        <test-method signature="verifyOTPUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7a362b6b]" started-at="2025-05-23T00:05:17Z" name="verifyOTPUsingValidInputData" data-provider="getVerifyOTPPositiveData" finished-at="2025-05-23T00:05:17Z" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify OTP with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "6264335759", "otp": "1234", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_id": 2,
    "name": "Heena",
    "role": "owner",
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyIiwiZXhwIjoxNzQ2NTMxOTEyLCJpYXQiOjE3NDU5MjcxMTIsImp0aSI6Ijc5NzRmYzkwLTY1MDAtNGQ2OS1iMWRmLWQwNmIzOWFiNGZiZSIsInJvbGUiOiJvd25lciIsImRldmljZSI6Ijg5NzQ1NjEyMzR8TGFwdG9wIDEyMiJ9.bQ2RYiEhNDHHW6ZAx3CqKkLu3QVdAyIm6Qz49eE9BCA",
    "expires_at": "06 May 2025"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Error during verify OTP test: JSONObject["mobile_number"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Error during verify OTP test: JSONObject["mobile_number"] not found.
	at com.menumitratCommonAPITestScript.verifyOTPTestScript.verifyOTPUsingValidInputData(verifyOTPTestScript.java:163)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.verifyOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.OrderViewTestScript">
        <test-method is-config="true" signature="orderViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@6cce16f4]" started-at="2025-05-23T00:05:15Z" name="orderViewSetUp" finished-at="2025-05-23T00:05:15Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in order view setup: Error in getting order view URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in order view setup: Error in getting order view URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.OrderViewTestScript.orderViewSetUp(OrderViewTestScript.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewSetUp -->
        <test-method signature="verifyOrderView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@6cce16f4]" started-at="2025-05-23T00:05:16Z" name="verifyOrderView" data-provider="getOrderViewData" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting order view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting order view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting order view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.OrderViewTestScript.getOrderViewData(OrderViewTestScript.java:168)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderView -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@1869fbd2]" started-at="2025-05-23T00:05:15Z" name="setup" finished-at="2025-05-23T00:05:16Z" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@1869fbd2]" started-at="2025-05-23T00:05:16Z" name="deleteChef" data-provider="getChefDeleteData" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading chef delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because "com.menumitra.utilityclass.DataDriven.cell" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading chef delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because "com.menumitra.utilityclass.DataDriven.cell" is null
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading chef delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because "com.menumitra.utilityclass.DataDriven.cell" is null
	at com.menumitratCommonAPITestScript.ChefDeleteTestScript.getChefDeleteData(ChefDeleteTestScript.java:105)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterUpdateTestScript">
        <test-method is-config="true" signature="waiterUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@265adfad]" started-at="2025-05-23T00:05:20Z" name="waiterUpdateSetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update setup: Error in getWaiterUpdateUrl: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update setup: Error in getWaiterUpdateUrl: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateSetUp(WaiterUpdateTestScript.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateSetUp -->
        <test-method signature="updateWaiter(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@265adfad]" started-at="2025-05-23T00:05:21Z" name="updateWaiter" data-provider="getWaiterUpdateData" finished-at="2025-05-23T00:05:21Z" duration-ms="5" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"15",
 "outlet_id":"1",
 "name":"Waiter ram",
 "mobile":"6146340038",
 "address":"satara",
 "aadhar_number":"343332322328",
 "dob":"12 Jan 2023",
 "email":"waiter@gmail.com"


}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter updated successfully",
    "data": {
        "user_id": 10,
        "name": "waitvaibhav"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWaiter -->
        <test-method signature="updateWaiter(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@265adfad]" started-at="2025-05-23T00:05:21Z" name="updateWaiter" data-provider="getWaiterUpdateData" finished-at="2025-05-23T00:05:21Z" duration-ms="3" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"15",
 "outlet_id":"1",
 "name":"Waiter ram",
 "mobile":"6146340038",
 "address":"satara",
 "aadhar_number":"343332322328",
 "dob":"12 Jan 2023",
 "email":"h@gmail"


}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter updated successfully",
    "data": {
        "user_id": 10,
        "name": "waitvaibhav"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateWaiter -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript">
        <test-method is-config="true" signature="orderListViewCdskdsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e461e41]" started-at="2025-05-23T00:05:21Z" name="orderListViewCdskdsSetUp" finished-at="2025-05-23T00:05:21Z" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsSetUp -->
        <test-method signature="orderListViewCdskdsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e461e41]" started-at="2025-05-23T00:05:22Z" name="orderListViewCdskdsNegativeTest" data-provider="getOrderListViewCdskdsNegativeData" finished-at="2025-05-23T00:05:22Z" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds using special character in outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "outlet_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsNegativeTest -->
        <test-method signature="orderListViewCdskdsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e461e41]" started-at="2025-05-23T00:05:22Z" name="orderListViewCdskdsTest" data-provider="getOrderListViewCdskdsData" finished-at="2025-05-23T00:05:22Z" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in order list view cdskds test: JSONObject["order_status"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in order list view cdskds test: JSONObject["order_status"] not found.
	at com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript.orderListViewCdskdsTest(OrderListViewCdskdsTestScript.java:367)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffListWithRole">
        <test-method is-config="true" signature="getStaffListWithRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@3daf7722]" started-at="2025-05-23T00:05:10Z" name="getStaffListWithRoleSetUp" finished-at="2025-05-23T00:05:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff list with role setup: Error in getting staff list with role URL: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff list with role setup: Error in getting staff list with role URL: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
	at com.menumitratCommonAPITestScript.GetStaffListWithRole.getStaffListWithRoleSetUp(GetStaffListWithRole.java:88)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleSetUp -->
        <test-method signature="getStaffListWithRoleTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@3daf7722]" started-at="2025-05-23T00:05:14Z" name="getStaffListWithRoleTest" data-provider="getStaffListWithRoleData" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting staff list with role test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting staff list with role test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting staff list with role test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetStaffListWithRole.getStaffListWithRoleData(GetStaffListWithRole.java:168)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffListWithRole -->
      <class name="com.menumitratCommonAPITestScript.StaffViewTestScript">
        <test-method is-config="true" signature="staffviewsetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@6ccdb29f]" started-at="2025-05-23T00:05:19Z" name="staffviewsetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffviewsetUp -->
        <test-method signature="verifyStaffView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@6ccdb29f]" started-at="2025-05-23T00:05:20Z" name="verifyStaffView" data-provider="getstaffviewValidData" finished-at="2025-05-23T00:05:20Z" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff view using valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "staff_id": 1,
    "outlet_id": 1
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffView -->
        <test-method signature="verifyStaffViewNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@6ccdb29f]" started-at="2025-05-23T00:05:20Z" name="verifyStaffViewNegative" data-provider="getstaffviewNegativeData" finished-at="2025-05-23T00:05:20Z" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid staff view with missing data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "staff_id": "", "outlet_id": 1}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"staff_id is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffViewNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetVegOrNonVegList">
        <test-method is-config="true" signature="getVegOrNonVegListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@1c93f6e1]" started-at="2025-05-23T00:05:18Z" name="getVegOrNonVegListSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVegOrNonVegListSetUp -->
        <test-method signature="verifyVegOrNonVegList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@1c93f6e1]" started-at="2025-05-23T00:05:18Z" name="verifyVegOrNonVegList" data-provider="getVegOrNonVegListData" finished-at="2025-05-23T00:05:18Z" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getvegornonveglist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getvegornonveglist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Veg or non veg list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyVegOrNonVegList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetVegOrNonVegList -->
      <class name="com.menumitratCommonAPITestScript.UpdateTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@78641d23]" started-at="2025-05-23T00:05:10Z" name="setup" finished-at="2025-05-23T00:05:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Update Templates API endpoint data from Excel sheet]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Update Templates API endpoint data from Excel sheet
	at com.menumitratCommonAPITestScript.UpdateTemplatesTestScript.setup(UpdateTemplatesTestScript.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@78641d23]" started-at="2025-05-23T00:05:14Z" name="updateTemplatesUsingValidInputData" data-provider="getUpdateTemplatesData" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading update templates test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading update templates test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading update templates test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.UpdateTemplatesTestScript.getUpdateTemplatesData(UpdateTemplatesTestScript.java:99)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@78641d23]" started-at="2025-05-23T00:05:14Z" name="tearDown" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterCreateTestScript">
        <test-method is-config="true" signature="waiterCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@146dfe6]" started-at="2025-05-23T00:05:14Z" name="waiterCreateSetUp" finished-at="2025-05-23T00:05:15Z" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateSetUp -->
        <test-method signature="verifyWaiterCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@146dfe6]" started-at="2025-05-23T00:05:15Z" name="verifyWaiterCreate" data-provider="getWaiterCreateData" finished-at="2025-05-23T00:05:15Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getWaiterCreateData: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getWaiterCreateData: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getWaiterCreateData: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.getWaiterCreateData(WaiterCreateTestScript.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterCreate -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ActivityLogTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@6c2c1385]" started-at="2025-05-23T00:05:10Z" name="setup" finished-at="2025-05-23T00:05:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Activity Log API endpoint data from Excel sheet]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Activity Log API endpoint data from Excel sheet
	at com.menumitratCommonAPITestScript.ActivityLogTestScript.setup(ActivityLogTestScript.java:152)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="activityLogTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@6c2c1385]" started-at="2025-05-23T00:05:14Z" name="activityLogTest" data-provider="getActivityLogData" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading activity log test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading activity log test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading activity log test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.ActivityLogTestScript.getActivityLogData(ActivityLogTestScript.java:104)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityLogTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ActivityLogTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@77102b91]" started-at="2025-05-23T00:05:28Z" name="setup" finished-at="2025-05-23T00:05:28Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuCategoryUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@77102b91]" started-at="2025-05-23T00:05:28Z" name="createMenuCategoryUsingValidInputData" data-provider="getMenuCategoryCreateData" finished-at="2025-05-23T00:05:29Z" duration-ms="1156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"category_name":"south Indian",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": "2"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "success"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuCategoryUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@77102b91]" started-at="2025-05-23T00:05:29Z" name="tearDown" finished-at="2025-05-23T00:05:29Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@60df60da]" started-at="2025-05-23T00:05:17Z" name="setup" finished-at="2025-05-23T00:05:17Z" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@60df60da]" started-at="2025-05-23T00:05:17Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-05-23T00:05:18Z" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid menu_cat_id with missing or incorrect fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"",
"user_id":"2",
"category_name":"Gujrati",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@60df60da]" started-at="2025-05-23T00:05:18Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-05-23T00:05:18Z" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[category_name ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"demo",
"user_id":"",
"category_name":"",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@60df60da]" started-at="2025-05-23T00:05:18Z" name="tearDown" finished-at="2025-05-23T00:05:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.TicketViewTestScript">
        <test-method is-config="true" signature="ticketViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@22f31dec]" started-at="2025-05-23T00:05:26Z" name="ticketViewSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewSetUp -->
        <test-method signature="ticketViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@22f31dec]" started-at="2025-05-23T00:05:26Z" name="ticketViewTest" data-provider="getTicketViewData" finished-at="2025-05-23T00:05:27Z" duration-ms="853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verfiy Ticket View]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id":"4"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket details of ticket ID: 2",
    "ticket": {
        "ticket_number": null,
        "title": "Issue with system",
        "description": "The system was not working.",
        "status": "wip",
        "created_on": "02 May 2025 05:40 PM",
        "user_name": "Heena",
        "user_role": "owner",
        "attachment_1": "uploads/tickets/2_1746187816_1.jpg",
        "attachment_2": "uploads/tickets/2_1746187816_2.jpg"
    },
    "chat": [
        {
            "ticket_chat_id": 2,
            "message": "Hello, How can I help you!",
            "flag": "1",
            "created_on": "02-05-2025 05:40 PM",
            "user_name": "Admin",
            "user_role": "admin"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateOrderTestScript">
        <test-method is-config="true" signature="createOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:30Z" name="createOrderSetUp" finished-at="2025-05-23T00:05:30Z" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderSetUp -->
        <test-method signature="createDineInOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:30Z" name="createDineInOrder" data-provider="getDineInOrderData" finished-at="2025-05-23T00:05:31Z" duration-ms="493" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderdineIn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order dine-in]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "tables": [78],
  "section_id": "17",
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in create Dine-In order test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in create Dine-In order test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createDineInOrder(CreateOrderTestScript.java:366)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDineInOrder -->
        <test-method signature="createDeliveryOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:31Z" name="createDeliveryOrder" data-provider="getDeliveryOrderData" finished-at="2025-05-23T00:05:31Z" duration-ms="565" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[deliveryorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order delivery]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "delivery",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in create Delivery order test: Status code mismatch - Expected: 200, Actual: 201]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in create Delivery order test: Status code mismatch - Expected: 200, Actual: 201
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createDeliveryOrder(CreateOrderTestScript.java:475)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDeliveryOrder -->
        <test-method signature="createParcelOrderString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:31Z" name="createParcelOrderString" data-provider="getParcelOrderData" finished-at="2025-05-23T00:05:32Z" duration-ms="328" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderparcel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order parcel]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "parcel",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in create Parcel order test: Status code mismatch - Expected: 200, Actual: 201]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in create Parcel order test: Status code mismatch - Expected: 200, Actual: 201
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createParcelOrderString(CreateOrderTestScript.java:564)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createParcelOrderString -->
        <test-method signature="createDriveThroughOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:32Z" name="createDriveThroughOrder" data-provider="getDriveThroughOrderData" finished-at="2025-05-23T00:05:32Z" duration-ms="234" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createorderdrivethrough]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order drive-through]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
  
  "order_type": "drive-through",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in create Drive-Through order test: Status code mismatch - Expected: 200, Actual: 201]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in create Drive-Through order test: Status code mismatch - Expected: 200, Actual: 201
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createDriveThroughOrder(CreateOrderTestScript.java:653)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDriveThroughOrder -->
        <test-method signature="createCounterOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.menumitratCommonAPITestScript.CreateOrderTestScript@61fe30]" started-at="2025-05-23T00:05:32Z" name="createCounterOrder" data-provider="getCounterOrderData" finished-at="2025-05-23T00:05:32Z" duration-ms="81" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createordercounter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createorder_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify create order counter]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  
  "order_type": "counter",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 21,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in create Counter order test: Status code mismatch - Expected: 200, Actual: 201]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in create Counter order test: Status code mismatch - Expected: 200, Actual: 201
	at com.menumitratCommonAPITestScript.CreateOrderTestScript.createCounterOrder(CreateOrderTestScript.java:732)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCounterOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@3899782c]" started-at="2025-05-23T00:05:21Z" name="setup" finished-at="2025-05-23T00:05:22Z" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createSupplier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@3899782c]" started-at="2025-05-23T00:05:22Z" name="createSupplier" data-provider="getSupplierCreateData" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.Exception: Error while reading supplier create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.Exception: Error while reading supplier create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.Exception: Error while reading supplier create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.getSupplierCreateData(SupplierCreateTestScript.java:103)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSupplier -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@3899782c]" started-at="2025-05-23T00:05:22Z" name="tearDown" finished-at="2025-05-23T00:05:22Z" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SendQRLinkTestScript">
        <test-method is-config="true" signature="sendQRLinkSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@2f67b837]" started-at="2025-05-23T00:05:14Z" name="sendQRLinkSetUp" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in send QR link setup: Error in getting send QR link URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in send QR link setup: Error in getting send QR link URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.SendQRLinkTestScript.sendQRLinkSetUp(SendQRLinkTestScript.java:87)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkSetUp -->
        <test-method signature="sendQRLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@2f67b837]" started-at="2025-05-23T00:05:15Z" name="sendQRLinkTest" data-provider="getSendQRLinkData" finished-at="2025-05-23T00:05:15Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[sendqrlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sendqrlink_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify send QR Link]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "table_id":"82"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_app_url": "https://menumitra-testing.netlify.app/user_app/",
    "outlet_code": "9001",
    "section_id": 17,
    "table_number": 77
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SendQRLinkTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainViewTestScript">
        <test-method is-config="true" signature="captainViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@56928307]" started-at="2025-05-23T00:05:21Z" name="captainViewSetUp" finished-at="2025-05-23T00:05:22Z" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewSetUp -->
        <test-method signature="captainViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@56928307]" started-at="2025-05-23T00:05:22Z" name="captainViewTest" data-provider="getCaptainViewData" finished-at="2025-05-23T00:05:22Z" duration-ms="85" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": "2",
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved captain details",
    "data": {
        "outlet_id": 1,
        "user_id": 11,
        "name": "ramucaptain",
        "mobile": "6936343434",
        "aadhar_number": "343332322321",
        "address": "satara",
        "dob": "12 Jan 2023",
        "email": "h@gmaom",
        "is_active": true,
        "created_by": "owner",
        "updated_by": null,
        "created_on": "02 May 2025 05:02:08 PM",
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewTest(CaptainViewTestScript.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@67545b57]" started-at="2025-05-23T00:05:10Z" name="setup" finished-at="2025-05-23T00:05:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Setup failed: Error while reading Table List View API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Setup failed: Error while reading Table List View API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
	at com.menumitratCommonAPITestScript.TableListViewTestScript.setup(TableListViewTestScript.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@67545b57]" started-at="2025-05-23T00:05:14Z" name="verifyTableListView" data-provider="getTableListViewData" finished-at="2025-05-23T00:05:14Z" duration-ms="4" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_name": "Roof Top",
            "section_id": 17,
            "tables": [
                {
                    "table_id": 81,
                    "table_number": 76,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 82,
                    "table_number": 77,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 83,
                    "table_number": 78,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 84,
                    "table_number": 79,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 85,
                    "table_number": 80,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 124,
                    "table_number": 118,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:08:32 PM",
                    "grand_total": 3870.36,
                    "order_id": 3,
                    "order_number": "3",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "upi",
                    "is_reserved": false
                },
                {
                    "table_id": 125,
                    "table_number": 119,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 126,
                    "table_number": 120,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 127,
                    "table_number": 121,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 128,
                    "table_number": 122,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 129,
                    "table_number": 123,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 130,
                    "table_number": 124,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 131,
                    "table_number": 125,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 132,
                    "table_number": 126,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 133,
                    "table_number": 127,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        },
        {
            "section_name": "Front-Top",
            "section_id": 18,
            "tables": [
                {
                    "table_id": 86,
                    "table_number": 81,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 87,
                    "table_number": 82,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 88,
                    "table_number": 83,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 89,
                    "table_number": 84,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 90,
                    "table_number": 85,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 91,
                    "table_number": 86,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 92,
                    "table_number": 87,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 93,
                    "table_number": 88,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 94,
                    "table_number": 89,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 95,
                    "table_number": 90,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 96,
                    "table_number": 91,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 97,
                    "table_number": 92,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 98,
                    "table_number": 93,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 99,
                    "table_number": 94,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 100,
                    "table_number": 95,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 104,
                    "table_number": 98,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 105,
                    "table_number": 99,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 106,
                    "table_number": 100,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 107,
                    "table_number": 101,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 108,
                    "table_number": 102,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 109,
                    "table_number": 103,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 110,
                    "table_number": 104,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 111,
                    "table_number": 105,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 112,
                    "table_number": 106,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 113,
                    "table_number": 107,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 114,
                    "table_number": 108,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 115,
                    "table_number": 109,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 116,
                    "table_number": 110,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 117,
                    "table_number": 111,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 118,
                    "table_number": 112,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 119,
                    "table_number": 113,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 120,
                    "table_number": 114,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 121,
                    "table_number": 115,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 122,
                    "table_number": 116,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 123,
                    "table_number": 117,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        }
    ],
    "today_total_sales": 2952.28,
    "live_sales": 11611.08,
    "total_tables": 50
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewTemplatesTestScript">
        <test-method is-config="true" signature="viewTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@35432107]" started-at="2025-05-23T00:05:20Z" name="viewTemplatesSetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view templates setup: Error in getting view templates URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view templates setup: Error in getting view templates URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.ViewTemplatesTestScript.viewTemplatesSetUp(ViewTemplatesTestScript.java:89)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesSetUp -->
        <test-method signature="viewTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@35432107]" started-at="2025-05-23T00:05:21Z" name="viewTemplatesTest" data-provider="getViewTemplatesData" finished-at="2025-05-23T00:05:21Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting view templates test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting view templates test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting view templates test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.ViewTemplatesTestScript.getViewTemplatesData(ViewTemplatesTestScript.java:169)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierListViewTestScript">
        <test-method is-config="true" signature="supplierListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@1800a575]" started-at="2025-05-23T00:05:18Z" name="supplierListViewSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListViewSetUp -->
        <test-method signature="verifySupplierListViewUsingPositiveData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@1800a575]" started-at="2025-05-23T00:05:18Z" name="verifySupplierListViewUsingPositiveData" data-provider="getSupplierListViewPositiveData" finished-at="2025-05-23T00:05:18Z" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[
    {
        "supplier_id": 8,
        "name": "vaibhav",
        "supplier_code": "607502",
        "mobile_number1": "9837375656",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 7,
        "name": "C Supplier",
        "supplier_code": "493227",
        "mobile_number1": "9076543312",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 6,
        "name": "heena Supplier",
        "supplier_code": "949715",
        "mobile_number1": "9076543370",
        "mobile_number2": "9076543317",
        "supplier_status": true
    },
    {
        "supplier_id": 5,
        "name": "heena Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543379",
        "mobile_number2": "9076543310",
        "supplier_status": true
    },
    {
        "supplier_id": 4,
        "name": "C Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543319",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 2,
        "name": "B Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543217",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 1,
        "name": "Balaji",
        "supplier_code": null,
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "supplier_status": true
    }
]]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierListViewUsingPositiveData -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterViewTestScript">
        <test-method is-config="true" signature="waiterViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6af9fcb2]" started-at="2025-05-23T00:05:15Z" name="waiterViewSetUp" finished-at="2025-05-23T00:05:15Z" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterViewSetUp -->
        <test-method signature="verifyWaiterView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6af9fcb2]" started-at="2025-05-23T00:05:16Z" name="verifyWaiterView" data-provider="getWaiterViewData" finished-at="2025-05-23T00:05:16Z" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
   "user_id":"15"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved waiter details",
    "data": {
        "outlet_id": 1,
        "user_id": 10,
        "name": "waitvaibhav",
        "mobile": "6146340039",
        "aadhar_number": "343332322328",
        "address": "satara",
        "dob": "12 Jan 2023",
        "email": "h@gmail",
        "is_active": true,
        "created_by": "owner",
        "updated_by": "owner",
        "created_on": "02 May 2025 04:36:09 PM",
        "updated_on": "02 May 2025 04:47:49 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterView -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@c94fd30]" started-at="2025-05-23T00:05:26Z" name="setup" finished-at="2025-05-23T00:05:27Z" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="inventoryDeleteTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@c94fd30]" started-at="2025-05-23T00:05:27Z" name="inventoryDeleteTest" data-provider="getInventoryDeleteData" finished-at="2025-05-23T00:05:27Z" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Inventory Delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
   "inventory_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Inventory item deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryDeleteTest -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryDeleteTestScript -->
      <class name="com.menumitra.superclass.APIBase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.menumitra.superclass.APIBase@7582ff54]" started-at="2025-05-23T00:05:10Z" name="setUp" finished-at="2025-05-23T00:05:10Z" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitra.superclass.APIBase@7582ff54]" started-at="2025-05-23T00:05:33Z" name="tearDown" finished-at="2025-05-23T00:05:33Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitra.superclass.APIBase -->
      <class name="com.menumitratCommonAPITestScript.MenuUpdate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@4716be8b]" started-at="2025-05-23T00:05:14Z" name="setup" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Menu Update API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Menu Update API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.MenuUpdate.setup(MenuUpdate.java:266)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@4716be8b]" started-at="2025-05-23T00:05:15Z" name="updateMenu" data-provider="getMenuUpdateData" finished-at="2025-05-23T00:05:15Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading menu update test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading menu update test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading menu update test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.MenuUpdate.getMenuUpdateData(MenuUpdate.java:214)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuUpdate -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript">
        <test-method is-config="true" signature="menuCategoryListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@545b995e]" started-at="2025-05-23T00:05:27Z" name="menuCategoryListViewSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListViewSetUp -->
        <test-method signature="verifyMenuCategoryListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@545b995e]" started-at="2025-05-23T00:05:28Z" name="verifyMenuCategoryListView" data-provider="getMenuCategoryListViewData" finished-at="2025-05-23T00:05:28Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuListView">
        <test-method is-config="true" signature="menuListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:20Z" name="menuListViewSetUp" finished-at="2025-05-23T00:05:21Z" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewSetUp -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:21Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-05-23T00:05:21Z" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for special character in outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:21Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-05-23T00:05:21Z" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for empty outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:21Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-05-23T00:05:21Z" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for numeric-only string outlet_id not matching any real ID]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "9999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID is incorrect"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:21Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-05-23T00:05:21Z" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for non-numeric outlet_id when numeric expected]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="verifyMenuListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@a3d9978]" started-at="2025-05-23T00:05:21Z" name="verifyMenuListView" data-provider="getMenuListViewData" finished-at="2025-05-23T00:05:21Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getMenuListViewData: No valid menu list view test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getMenuListViewData: No valid menu list view test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getMenuListViewData: No valid menu list view test data found after filtering
	at com.menumitratCommonAPITestScript.MenuListView.getMenuListViewData(MenuListView.java:185)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuListView -->
      <class name="com.menumitratCommonAPITestScript.JoinTablesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@c9d0d6]" started-at="2025-05-23T00:05:19Z" name="setup" finished-at="2025-05-23T00:05:20Z" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="joinTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@c9d0d6]" started-at="2025-05-23T00:05:20Z" name="joinTables" data-provider="getJoinTablesData" finished-at="2025-05-23T00:05:20Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading join tables test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading join tables test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading join tables test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.JoinTablesTestScript.getJoinTablesData(JoinTablesTestScript.java:99)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTables -->
      </class> <!-- com.menumitratCommonAPITestScript.JoinTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryViewTestScript">
        <test-method is-config="true" signature="inventoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@7f0d96f2]" started-at="2025-05-23T00:05:27Z" name="inventoryViewSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryViewSetUp -->
        <test-method signature="inventoryViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@7f0d96f2]" started-at="2025-05-23T00:05:28Z" name="inventoryViewTest" data-provider="getInventoryViewData" finished-at="2025-05-23T00:05:28Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getInventoryViewData: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getInventoryViewData: Error reading the Excel file: Failed to read zip entry source
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getInventoryViewData: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.InventoryViewTestScript.getInventoryViewData(InventoryViewTestScript.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetOutletListTestScript">
        <test-method is-config="true" signature="getOutletListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@7b420819]" started-at="2025-05-23T00:05:20Z" name="getOutletListSetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get outlet list setup: Error in getting outlet list URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get outlet list setup: Error in getting outlet list URL: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.GetOutletListTestScript.getOutletListSetUp(GetOutletListTestScript.java:87)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListSetUp -->
        <test-method signature="getOutletListNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@7b420819]" started-at="2025-05-23T00:05:21Z" name="getOutletListNegativeTest" data-provider="getOutletListNegativeData" finished-at="2025-05-23T00:05:21Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetOutletList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GetOutletList_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "owner_id": "@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "owner_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListNegativeTest -->
        <test-method signature="getOutletListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@7b420819]" started-at="2025-05-23T00:05:21Z" name="getOutletListTest" data-provider="getOutletListData" finished-at="2025-05-23T00:05:21Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting outlet list test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting outlet list test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting outlet list test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetOutletListTestScript.getOutletListData(GetOutletListTestScript.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetOutletListTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetRatingList">
        <test-method is-config="true" signature="getRatingListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@5a2d131d]" started-at="2025-05-23T00:05:17Z" name="getRatingListSetUp" finished-at="2025-05-23T00:05:17Z" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRatingListSetUp -->
        <test-method signature="verifyRatingList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@5a2d131d]" started-at="2025-05-23T00:05:18Z" name="verifyRatingList" data-provider="getRatingListData" finished-at="2025-05-23T00:05:18Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getRatingListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getRatingListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getRatingListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetRatingList.getRatingListData(GetRatingList.java:181)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRatingList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetRatingList -->
      <class name="com.menumitratCommonAPITestScript.sectionListViewTestScript">
        <test-method is-config="true" signature="sectionListViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@3adcc812]" started-at="2025-05-23T00:05:30Z" name="sectionListViewSetup" finished-at="2025-05-23T00:05:30Z" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionListViewSetup -->
        <test-method signature="verifySectionListViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@3adcc812]" started-at="2025-05-23T00:05:30Z" name="verifySectionListViewUsingValidInputData" data-provider="getSectionListViewPositiveInputData" finished-at="2025-05-23T00:05:32Z" duration-ms="1487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_id": 16,
            "section_name": "Family",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 17,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 18,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 19,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 20,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionListViewUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryCreate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@602e0143]" started-at="2025-05-23T00:05:26Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventoryCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@602e0143]" started-at="2025-05-23T00:05:26Z" name="createInventoryCategory" data-provider="getInventoryCategoryCreateData" finished-at="2025-05-23T00:05:27Z" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "name":"Raw material",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"success":"Inventory Category Created Successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventoryCategory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryCreate -->
      <class name="com.menumitratCommonAPITestScript.GetAllMenuListByCategory">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@2c07545f]" started-at="2025-05-23T00:05:26Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllMenuListByCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@2c07545f]" started-at="2025-05-23T00:05:26Z" name="getAllMenuListByCategory" data-provider="getAllMenuListByCategoryData" finished-at="2025-05-23T00:05:26Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading getAllMenuListByCategory test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading getAllMenuListByCategory test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading getAllMenuListByCategory test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetAllMenuListByCategory.getAllMenuListByCategoryData(GetAllMenuListByCategory.java:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMenuListByCategory -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAllMenuListByCategory -->
      <class name="com.menumitratCommonAPITestScript.OwnerDetailsTestScript">
        <test-method is-config="true" signature="ownerDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@32c4e8b2]" started-at="2025-05-23T00:05:25Z" name="ownerDetailsSetUp" finished-at="2025-05-23T00:05:25Z" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsSetUp -->
        <test-method signature="ownerDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@32c4e8b2]" started-at="2025-05-23T00:05:25Z" name="ownerDetailsTest" data-provider="getOwnerDetailsData" finished-at="2025-05-23T00:05:25Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting owner details test data: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting owner details test data: Error reading the Excel file: Failed to read zip entry source
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting owner details test data: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.OwnerDetailsTestScript.getOwnerDetailsData(OwnerDetailsTestScript.java:170)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OwnerDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffDeleteTestScript">
        <test-method is-config="true" signature="staffDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@64bce832]" started-at="2025-05-23T00:05:25Z" name="staffDeleteSetUp" finished-at="2025-05-23T00:05:25Z" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffDeleteSetUp -->
        <test-method signature="staffDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@64bce832]" started-at="2025-05-23T00:05:25Z" name="staffDeleteNegativeTest" data-provider="getStaffDeleteNegativeData" finished-at="2025-05-23T00:05:25Z" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffdelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid staff ID for deletion]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id":2, "outlet_id":1,"staff_id":999}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "staff_id is incorrect or staff does not belong to this outlet" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffDeleteNegativeTest -->
        <test-method signature="testStaffDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@64bce832]" started-at="2025-05-23T00:05:26Z" name="testStaffDelete" data-provider="getStaffDeleteData" finished-at="2025-05-23T00:05:26Z" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "outlet_id":1,
    "staff_id":9
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Staff deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStaffDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@1603cd68]" started-at="2025-05-23T00:05:22Z" name="setup" finished-at="2025-05-23T00:05:22Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createQRTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@1603cd68]" started-at="2025-05-23T00:05:22Z" name="createQRTemplatesUsingValidInputData" data-provider="getCreateQRTemplatesData" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading create QR templates test scenario data: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading create QR templates test scenario data: Error reading the Excel file: Failed to read zip entry source
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading create QR templates test scenario data: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript.getCreateQRTemplatesData(CreateQRTemplatesTestScript.java:99)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createQRTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@1603cd68]" started-at="2025-05-23T00:05:22Z" name="tearDown" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.ResendOTPTestScript">
        <test-method is-config="true" signature="setupResendOTP()[pri:0, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@32c726ee]" started-at="2025-05-23T00:05:30Z" name="setupResendOTP" finished-at="2025-05-23T00:05:30Z" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupResendOTP -->
        <test-method signature="verifyRessendOTPUSingPositiveInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@32c726ee]" started-at="2025-05-23T00:05:30Z" name="verifyRessendOTPUSingPositiveInputData" data-provider="getPositiveinputData" finished-at="2025-05-23T00:05:30Z" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid mobile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"6264335759"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"role":"owner"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRessendOTPUSingPositiveInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.ResendOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.SearchMenu">
        <test-method is-config="true" signature="searchMenuSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@4ae9cfc1]" started-at="2025-05-23T00:05:17Z" name="searchMenuSetUp" finished-at="2025-05-23T00:05:17Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in search menu setup: Error in getSearchMenuUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in search menu setup: Error in getSearchMenuUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.SearchMenu.searchMenuSetUp(SearchMenu.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMenuSetUp -->
        <test-method signature="verifySearchMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@4ae9cfc1]" started-at="2025-05-23T00:05:18Z" name="verifySearchMenu" data-provider="getSearchMenuData" finished-at="2025-05-23T00:05:18Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[searchmenu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[searchmenu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify search menu]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "keyword":"Anda Biryani"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "menu_list": [
        {
            "menu_id": 18,
            "menu_name": "Anda Biryani",
            "menu_food_type": "veg",
            "outlet_id": 1,
            "outlet_veg_nonveg": "veg",
            "menu_cat_id": 3,
            "category_name": "Rice",
            "spicy_index": "2",
            "price": 180,
            "rating": "5.0",
            "offer": 40,
            "is_special": false,
            "image": "http://men4u.xyz/media/Images/4e8e71420d0d48ebbd1252fe465fa2a9.jpg",
            "is_favourite": 0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.SearchMenu -->
      <class name="com.menumitratCommonAPITestScript.OutletSettingsViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@5505ae1a]" started-at="2025-05-23T00:05:16Z" name="setup" finished-at="2025-05-23T00:05:17Z" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="outletSettingsView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@5505ae1a]" started-at="2025-05-23T00:05:17Z" name="outletSettingsView" data-provider="getOutletSettingsViewData" finished-at="2025-05-23T00:05:17Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading outlet settings view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading outlet settings view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading outlet settings view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.OutletSettingsViewTestScript.getOutletSettingsViewData(OutletSettingsViewTestScript.java:106)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletSettingsView -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletSettingsViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@2bb3058]" started-at="2025-05-23T00:05:17Z" name="setup" finished-at="2025-05-23T00:05:17Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier credit rating choices setup: Error while reading Supplier Credit Rating Choices API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier credit rating choices setup: Error while reading Supplier Credit Rating Choices API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript.setup(SupplierCreditRatingChoicesTestScript.java:162)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierCreditRatingChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@2bb3058]" started-at="2025-05-23T00:05:17Z" name="testSupplierCreditRatingChoices" data-provider="getSupplierCreditRatingChoicesData" finished-at="2025-05-23T00:05:17Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[suppliercreditratinchoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[suppliercreditratinchoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier credit ratin choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "credit_rating_choices": {
        "excellent": "excellent",
        "good": "good",
        "bad": "bad",
        "very_bad": "very_bad",
        "not_rated": "not_rated"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierCreditRatingChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetSpicyIndexList">
        <test-method is-config="true" signature="getSpicyIndexListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@484094a5]" started-at="2025-05-23T00:05:26Z" name="getSpicyIndexListSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpicyIndexListSetUp -->
        <test-method signature="verifySpicyIndexList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@484094a5]" started-at="2025-05-23T00:05:26Z" name="verifySpicyIndexList" data-provider="getSpicyIndexListData" finished-at="2025-05-23T00:05:26Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getspicyindexlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getspicyindexlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Spicy Index list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpicyIndexList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSpicyIndexList -->
      <class name="com.menumitratCommonAPITestScript.ViewProfileTestScript">
        <test-method is-config="true" signature="viewProfileSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@7ae42ce3]" started-at="2025-05-23T00:05:26Z" name="viewProfileSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view profile setup: Error in getViewProfileUrl: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view profile setup: Error in getViewProfileUrl: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.ViewProfileTestScript.viewProfileSetUp(ViewProfileTestScript.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfileSetUp -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@7ae42ce3]" started-at="2025-05-23T00:05:26Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-05-23T00:05:26Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@7ae42ce3]" started-at="2025-05-23T00:05:26Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-05-23T00:05:26Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewProfileTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuView">
        <test-method is-config="true" signature="menuViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@5d066c7d]" started-at="2025-05-23T00:05:21Z" name="menuViewSetUp" finished-at="2025-05-23T00:05:21Z" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewSetUp -->
        <test-method signature="verifyMenuView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@5d066c7d]" started-at="2025-05-23T00:05:22Z" name="verifyMenuView" data-provider="getMenuViewData" finished-at="2025-05-23T00:05:22Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "menu_id": "18"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuView -->
      <class name="com.menumitratCommonAPITestScript.loginTestScript">
        <test-method is-config="true" signature="LoginAPiTestSetup()[pri:0, instance:com.menumitratCommonAPITestScript.loginTestScript@5ddf0d24]" started-at="2025-05-23T00:05:29Z" name="LoginAPiTestSetup" finished-at="2025-05-23T00:05:29Z" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPiTestSetup -->
        <test-method signature="verifyloginUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.loginTestScript@5ddf0d24]" started-at="2025-05-23T00:05:30Z" name="verifyloginUsingValidInputData" data-provider="getPositiveInputData" finished-at="2025-05-23T00:05:30Z" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid login]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"6264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Your OTP is sent successfully.",
    "role": "owner"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyloginUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.loginTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@3fed2870]" started-at="2025-05-23T00:05:24Z" name="setup" finished-at="2025-05-23T00:05:24Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier status choices setup: Error while reading Supplier Status Choices API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier status choices setup: Error while reading Supplier Status Choices API endpoint data from Excel sheet: Unexpected error occurred while reading excel sheet: null
	at com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript.setup(SupplierStatusChoicesTestScript.java:165)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierStatusChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@3fed2870]" started-at="2025-05-23T00:05:25Z" name="testSupplierStatusChoices" data-provider="getSupplierStatusChoicesData" finished-at="2025-05-23T00:05:25Z" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierstatuschoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierstatuschoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier status choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "supplier_status_choices": {
        "active": "active",
        "inactive": "inactive"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierStatusChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryListViewTestScript">
        <test-method is-config="true" signature="inventoryListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@38089a5a]" started-at="2025-05-23T00:05:22Z" name="inventoryListSetUp" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory list setup: no protocol: positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory list setup: no protocol: positive
	at com.menumitratCommonAPITestScript.InventoryListViewTestScript.inventoryListSetUp(InventoryListViewTestScript.java:94)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryListSetUp -->
        <test-method signature="inventoryListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@38089a5a]" started-at="2025-05-23T00:05:23Z" name="inventoryListViewTest" data-provider="getInventoryListData" finished-at="2025-05-23T00:05:23Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getInventoryListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getInventoryListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getInventoryListData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.InventoryListViewTestScript.getInventoryListData(InventoryListViewTestScript.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplatesListTestScript">
        <test-method is-config="true" signature="getTemplatesListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@66c61024]" started-at="2025-05-23T00:05:19Z" name="getTemplatesListSetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesListSetUp -->
        <test-method signature="verifyTemplatesList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@66c61024]" started-at="2025-05-23T00:05:20Z" name="verifyTemplatesList" data-provider="getTemplatesListData" finished-at="2025-05-23T00:05:20Z" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettemplateslist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettemplateslist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Template List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplatesList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplatesListTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategorysTestScript">
        <test-method is-config="true" signature="menuCategorysSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@764faa6]" started-at="2025-05-23T00:05:25Z" name="menuCategorysSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategorysSetUp -->
        <test-method signature="verifyMenuCategorys(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@764faa6]" started-at="2025-05-23T00:05:26Z" name="verifyMenuCategorys" data-provider="getMenuCategorysData" finished-at="2025-05-23T00:05:26Z" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorys]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorys_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu categorys]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "categorys_list": {
        "indian": 2,
        "Italian": 4
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategorys -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategorysTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateTableTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@a4add54]" started-at="2025-05-23T00:05:18Z" name="setup" finished-at="2025-05-23T00:05:19Z" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTableUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@a4add54]" started-at="2025-05-23T00:05:19Z" name="updateTableUsingValidInputData" data-provider="getUpdateTableData" finished-at="2025-05-23T00:05:19Z" duration-ms="205" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatetable_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Table]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    
    "table_number": "77",
    "new_table_number": "78",
    "section_id": "17",
    "outlet_id": "1",
    "order_id": "6",
    "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during update table test execution: Table update failed with status code: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during update table test execution: Table update failed with status code: 400
	at com.menumitratCommonAPITestScript.UpdateTableTestScript.updateTableUsingValidInputData(UpdateTableTestScript.java:205)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@a4add54]" started-at="2025-05-23T00:05:19Z" name="tearDown" finished-at="2025-05-23T00:05:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTableTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainCreateTestScript">
        <test-method is-config="true" signature="captainCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@2fd953a6]" started-at="2025-05-23T00:05:18Z" name="captainCreateSetUp" finished-at="2025-05-23T00:05:19Z" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateSetUp -->
        <test-method signature="captainCreateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@2fd953a6]" started-at="2025-05-23T00:05:19Z" name="captainCreateTest" data-provider="getCaptainCreateData" finished-at="2025-05-23T00:05:19Z" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "outlet_id":"1",
 "user_id":"2",
 "name":"captain Raj",
 "mobile":"6936344567",
 "address":"",
 "aadhar_number":"343332322321",
 "dob":"",
 "email":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Captain created successfully",
    "data": {
        "captain_id": 12,
        "name": "captain A"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.orderListViewSetUp">
        <test-method is-config="true" signature="orderListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@1fc32e4f]" started-at="2025-05-23T00:05:14Z" name="orderListViewSetUp" finished-at="2025-05-23T00:05:15Z" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewSetUp -->
        <test-method signature="orderListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@1fc32e4f]" started-at="2025-05-23T00:05:15Z" name="orderListViewTest" data-provider="getOrderListViewData" finished-at="2025-05-23T00:05:15Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting order list view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting order list view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting order list view test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.orderListViewSetUp.getOrderListViewData(orderListViewSetUp.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.orderListViewSetUp -->
      <class name="com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@5f9be66c]" started-at="2025-05-23T00:05:19Z" name="setup" finished-at="2025-05-23T00:05:20Z" duration-ms="818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkIfTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@5f9be66c]" started-at="2025-05-23T00:05:20Z" name="checkIfTableIsReserved" data-provider="getCheckTableIsReservedData" finished-at="2025-05-23T00:05:20Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading check table is reserved test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading check table is reserved test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading check table is reserved test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript.getCheckTableIsReservedData(CheckTableIsReservedTestScript.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfTableIsReserved -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@6ce86ce1]" started-at="2025-05-23T00:05:24Z" name="setup" finished-at="2025-05-23T00:05:24Z" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="setTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@6ce86ce1]" started-at="2025-05-23T00:05:24Z" name="setTableIsReserved" data-provider="getTableIsReservedData" finished-at="2025-05-23T00:05:25Z" duration-ms="647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Table is Reserved]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":81,
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"2",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "table_id": 81,
    "table_number": 76,
    "is_reserved": true,
    "detail": "Table reservation status updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTableIsReserved -->
      </class> <!-- com.menumitratCommonAPITestScript.TableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInventoryCategoryList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@416c58f5]" started-at="2025-05-23T00:05:16Z" name="setup" finished-at="2025-05-23T00:05:16Z" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@416c58f5]" started-at="2025-05-23T00:05:16Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListData" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading inventory category list test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading inventory category list test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading inventory category list test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.GetInventoryCategoryList.getInventoryCategoryListData(GetInventoryCategoryList.java:100)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInventoryCategoryList -->
      <class name="com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript">
        <test-method is-config="true" signature="orderMenuDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@5a755cc1]" started-at="2025-05-23T00:05:25Z" name="orderMenuDetailsSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderMenuDetailsSetUp -->
        <test-method signature="verifyOrderMenuDetails(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@5a755cc1]" started-at="2025-05-23T00:05:26Z" name="verifyOrderMenuDetails" data-provider="getOrderMenuDetailsData" finished-at="2025-05-23T00:05:26Z" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ordermenudetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ordermenudetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Order Menu Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderMenuDetails -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuDelete">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@77128536]" started-at="2025-05-23T00:05:24Z" name="setup" finished-at="2025-05-23T00:05:25Z" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@77128536]" started-at="2025-05-23T00:05:25Z" name="deleteMenu" data-provider="getMenuDeleteData" finished-at="2025-05-23T00:05:25Z" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_id":"19",
    "user_id":"2"
}
  ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuDelete -->
      <class name="com.menumitratCommonAPITestScript.SupplierDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@49ff7d8c]" started-at="2025-05-23T00:05:28Z" name="setup" finished-at="2025-05-23T00:05:28Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier delete setup: [EXCEPTION] Error during login API execution: JSONObject["access_token"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier delete setup: [EXCEPTION] Error during login API execution: JSONObject["access_token"] not found.
	at com.menumitratCommonAPITestScript.SupplierDeleteTestScript.setup(SupplierDeleteTestScript.java:172)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@49ff7d8c]" started-at="2025-05-23T00:05:28Z" name="testSupplierDelete" data-provider="getSupplierDeleteData" finished-at="2025-05-23T00:05:28Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier delete ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "user_id":"2",
    "supplier_id":"4"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier deleted successfully."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@6581dc0a]" started-at="2025-05-23T00:05:24Z" name="setup" finished-at="2025-05-23T00:05:24Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Chef Update API endpoint data from Excel sheet]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Chef Update API endpoint data from Excel sheet
	at com.menumitratCommonAPITestScript.ChefUpdateTestScript.setup(ChefUpdateTestScript.java:147)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@6581dc0a]" started-at="2025-05-23T00:05:24Z" name="updateChef" data-provider="getChefUpdateData" finished-at="2025-05-23T00:05:24Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading chef update test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading chef update test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading chef update test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.ChefUpdateTestScript.getChefUpdateData(ChefUpdateTestScript.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ListViewOutletTestScript">
        <test-method is-config="true" signature="listViewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@39de3d36]" started-at="2025-05-23T00:05:24Z" name="listViewOutletSetUp" finished-at="2025-05-23T00:05:24Z" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listViewOutletSetUp -->
        <test-method signature="verifyListViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@39de3d36]" started-at="2025-05-23T00:05:24Z" name="verifyListViewOutlet" data-provider="getListViewOutletData" finished-at="2025-05-23T00:05:24Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at com.menumitratCommonAPITestScript.ListViewOutletTestScript.getListViewOutletData(ListViewOutletTestScript.java:187)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListViewOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.ListViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInorOutList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@3b96c42e]" started-at="2025-05-23T00:05:21Z" name="setup" finished-at="2025-05-23T00:05:21Z" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInOrOutList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@3b96c42e]" started-at="2025-05-23T00:05:21Z" name="testInOrOutList" data-provider="getInOrOutListData" finished-at="2025-05-23T00:05:21Z" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getinoroutlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getinoroutlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Int or Out list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInOrOutList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInorOutList -->
      <class name="com.menumitratCommonAPITestScript.ChangeSettingsTestScript">
        <test-method is-config="true" signature="changeSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@1e097d59]" started-at="2025-05-23T00:05:24Z" name="changeSettingsSetUp" finished-at="2025-05-23T00:05:24Z" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsSetUp -->
        <test-method signature="changeSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@1e097d59]" started-at="2025-05-23T00:05:24Z" name="changeSettingsTest" data-provider="getChangeSettingsData" finished-at="2025-05-23T00:05:25Z" duration-ms="720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify changes settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
    "type":"settle",
    "value":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Settings updated successfully",
    "data": {
        "style": "blue",
        "has_dine_in": true,
        "has_parcel": true,
        "has_drive_through": false,
        "has_counter": true,
        "has_delivery": true,
        "print_and_save": true,
        "KOT_and_save": true,
        "settle": false,
        "reserve_table": true,
        "cancel": true,
        "POS_show_menu_image": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChangeSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@598bd2ba]" started-at="2025-05-23T00:05:25Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteWaiter(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@598bd2ba]" started-at="2025-05-23T00:05:26Z" name="deleteWaiter" data-provider="getWaiterDeleteData" finished-at="2025-05-23T00:05:26Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "outlet_id":"1",
    "user_id":"19"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "(pymysql.err.IntegrityError) (1048, \"Column 'user_id' cannot be null\")\n[SQL: UPDATE user_settings SET user_id=%(user_id)s WHERE user_settings.user_settings_id = %(user_settings_user_settings_id)s]\n[parameters: {'user_id': None, 'user_settings_user_settings_id': 2}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWaiter -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.AddMenusToOrder">
        <test-method is-config="true" signature="addMenusToOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@54e7df6a]" started-at="2025-05-23T00:05:24Z" name="addMenusToOrderSetUp" finished-at="2025-05-23T00:05:25Z" duration-ms="1016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMenusToOrderSetUp -->
        <test-method signature="verifyAddMenusToOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@54e7df6a]" started-at="2025-05-23T00:05:25Z" name="verifyAddMenusToOrder" data-provider="getAddMenusToOrderData" finished-at="2025-05-23T00:05:25Z" duration-ms="110" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[addmenustoorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[addmenustoorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Add Menus to order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "order_items":[
        {
            "menu_id":"13",
            "quantity":"10",
            "portion_name": "Full",
            "comment":"add spice"

        }
    ]
 
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 5,
        "order_number": "5",
        "table_number": [
            "77"
        ],
        "order_status": "cooking",
        "menu_count": 2,
        "total_bill_amount": 6300.0,
        "total_bill_with_discount": 6300.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 63.0,
        "gst_percent": 1.0,
        "gst_amount": 63.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 6426.0,
        "datetime": "03-May-2025 04:15:00 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "comment": "Extra spicy please",
            "menu_sub_total": 4500.0,
            "portion_name": "Full",
            "unit": "500g"
        },
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 10,
            "offer": 0,
            "comment": "add spice",
            "menu_sub_total": 1800.0,
            "portion_name": "Full",
            "unit": "500g"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in add menus to order test: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in add menus to order test: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.AddMenusToOrder.verifyAddMenusToOrder(AddMenusToOrder.java:253)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddMenusToOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.AddMenusToOrder -->
      <class name="com.menumitratCommonAPITestScript.CreateTicketTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4c1f22f3]" started-at="2025-05-23T00:05:25Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createTicketUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4c1f22f3]" started-at="2025-05-23T00:05:26Z" name="createTicketUsingValidInputData" data-provider="getCreateTicketData" finished-at="2025-05-23T00:05:26Z" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify create Ticket]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": "2",
    "outlet_id": "1",
    "title": "Issue with system",
    "description": "The system was not working.",
    "status": "open",
    "attachment_1" : "",
    "attachment_2" :""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket created successfully.",
    "ticket_id": 3
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@4c1f22f3]" started-at="2025-05-23T00:05:26Z" name="tearDown" finished-at="2025-05-23T00:05:26Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateTicketTestScript -->
      <class name="com.menumitratCommonAPITestScript.ContinueChatTestScript">
        <test-method is-config="true" signature="continueChatSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@30e868be]" started-at="2025-05-23T00:05:22Z" name="continueChatSetUp" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in continue chat setup: Error in getting continue chat URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in continue chat setup: Error in getting continue chat URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.ContinueChatTestScript.continueChatSetUp(ContinueChatTestScript.java:89)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatSetUp -->
        <test-method signature="continueChatTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@30e868be]" started-at="2025-05-23T00:05:23Z" name="continueChatTest" data-provider="getContinueChatData" finished-at="2025-05-23T00:05:23Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[continuechat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[continuechat_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify continue chat]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id": "4",
    "user_id": "2",
    "message": "I need an update on my issue.",
    "flag": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chat message added successfully",
    "ticket_chat_id": 5
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ContinueChatTestScript -->
      <class name="com.menumitratCommonAPITestScript.DeleteTemplatesTestScript">
        <test-method is-config="true" signature="deleteTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@66c92293]" started-at="2025-05-23T00:05:22Z" name="deleteTemplatesSetUp" finished-at="2025-05-23T00:05:23Z" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesSetUp -->
        <test-method signature="deleteTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@66c92293]" started-at="2025-05-23T00:05:23Z" name="deleteTemplatesTest" data-provider="getDeleteTemplatesData" finished-at="2025-05-23T00:05:23Z" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[deletetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[deletetemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Delete Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DeleteTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@9ebe38b]" started-at="2025-05-23T00:05:22Z" name="setup" finished-at="2025-05-23T00:05:22Z" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectTemplateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@9ebe38b]" started-at="2025-05-23T00:05:22Z" name="selectTemplateUsingValidInputData" data-provider="getSelectTemplateData" finished-at="2025-05-23T00:05:23Z" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[selecttemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[selecttemplate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify select template]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17",
    "template_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTemplateUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@9ebe38b]" started-at="2025-05-23T00:05:23Z" name="tearDown" finished-at="2025-05-23T00:05:23Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplates">
        <test-method is-config="true" signature="getTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@7fb95505]" started-at="2025-05-23T00:05:28Z" name="getTemplatesSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get templates setup: Error in getTemplatesUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get templates setup: Error in getTemplatesUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.GetTemplates.getTemplatesSetUp(GetTemplates.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesSetUp -->
        <test-method signature="verifyTemplates(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@7fb95505]" started-at="2025-05-23T00:05:29Z" name="verifyTemplates" data-provider="getTemplatesData" finished-at="2025-05-23T00:05:29Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getTemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getTemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplates -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplates -->
      <class name="com.menumitratCommonAPITestScript.UpdateMenuQuantity">
        <test-method is-config="true" signature="updateMenuQuantitySetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@5ba88be8]" started-at="2025-05-23T00:05:21Z" name="updateMenuQuantitySetUp" finished-at="2025-05-23T00:05:22Z" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantitySetUp -->
        <test-method signature="updateMenuQuantityNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@5ba88be8]" started-at="2025-05-23T00:05:22Z" name="updateMenuQuantityNegativeTest" data-provider="getUpdateMenuQuantityNegativeData" finished-at="2025-05-23T00:05:22Z" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity using incorrect order_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "10101",
    "outlet_id":"1",
    "quantity":"3",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Order not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantityNegativeTest -->
        <test-method signature="updateMenuQuantityNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@5ba88be8]" started-at="2025-05-23T00:05:22Z" name="updateMenuQuantityNegativeTest" data-provider="getUpdateMenuQuantityNegativeData" finished-at="2025-05-23T00:05:22Z" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity using incorrect quantity]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "10101",
    "outlet_id":"1",
    "quantity":"39",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Quantity cannot be more than 20."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantityNegativeTest -->
        <test-method signature="verifyUpdateMenuQuantity(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@5ba88be8]" started-at="2025-05-23T00:05:22Z" name="verifyUpdateMenuQuantity" data-provider="getUpdateMenuQuantityData" finished-at="2025-05-23T00:05:22Z" duration-ms="96" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "quantity":"3",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 2,
        "order_number": "2",
        "table_number": [
            "76"
        ],
        "order_status": "cooking",
        "menu_count": 1,
        "total_bill_amount": 4500.0,
        "total_bill_with_discount": 4500.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 45.0,
        "gst_percent": 1.0,
        "gst_amount": 45.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 4590.0,
        "datetime": "02-May-2025 01:11:58 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "menu_sub_total": 4500.0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update menu quantity test: Status code mismatch - Expected: 200, Actual: 401]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update menu quantity test: Status code mismatch - Expected: 200, Actual: 401
	at com.menumitratCommonAPITestScript.UpdateMenuQuantity.verifyUpdateMenuQuantity(UpdateMenuQuantity.java:260)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateMenuQuantity -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateMenuQuantity -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript">
        <test-method is-config="true" signature="menuCategoryDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4b41dd5c]" started-at="2025-05-23T00:05:21Z" name="menuCategoryDeleteSetUp" finished-at="2025-05-23T00:05:21Z" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryDeleteSetUp -->
        <test-method signature="verifyMenuCategoryDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@4b41dd5c]" started-at="2025-05-23T00:05:21Z" name="verifyMenuCategoryDelete" data-provider="getMenuCategoryDeleteData" finished-at="2025-05-23T00:05:21Z" duration-ms="166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"4",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Category deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript">
        <test-method is-config="true" signature="updateProfileDetailSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@332796d3]" started-at="2025-05-23T00:05:23Z" name="updateProfileDetailSetUp" finished-at="2025-05-23T00:05:23Z" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailSetUp -->
        <test-method signature="verifyUpdateProfileDetail(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@332796d3]" started-at="2025-05-23T00:05:24Z" name="verifyUpdateProfileDetail" data-provider="getUpdateProfileDetailData" finished-at="2025-05-23T00:05:24Z" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update Profile Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "user_id": "3",  
    "name": "Vaibhav",  
    "email": "ssoo@gmail.com",  
    "mobile_number": "6260035759",  
    "dob": "06 oct 1990",
    "aadhar_number":"856932014785"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Profile updated successfully",
    "user_id": 3,
    "name": "komal",
    "email": "ssoo@gmail.com",
    "mobile": "6260035759",
    "dob": "06 Oct 1990",
    "aadhar_number": "856932014785"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateProfileDetail -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetAvailableTablesTestScript">
        <test-method is-config="true" signature="getAvailableTablesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@41e68d87]" started-at="2025-05-23T00:05:28Z" name="getAvailableTablesSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesSetUp -->
        <test-method signature="getAvailableTablesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@41e68d87]" started-at="2025-05-23T00:05:28Z" name="getAvailableTablesTest" data-provider="getAvailableTablesData" finished-at="2025-05-23T00:05:28Z" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Available Tables]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2",
    "outlet_id":"1",
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Available tables retrieved successfully",
    "tables": [
        {
            "table_id": 3,
            "table_number": 3
        },
        {
            "table_id": 4,
            "table_number": 4
        },
        {
            "table_id": 5,
            "table_number": 5
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAvailableTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@13ad5cd3]" started-at="2025-05-23T00:05:23Z" name="setup" finished-at="2025-05-23T00:05:23Z" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@13ad5cd3]" started-at="2025-05-23T00:05:24Z" name="verifyTableDelete" data-provider="getTableDeleteData" finished-at="2025-05-23T00:05:24Z" duration-ms="119" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tabledelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tabledelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": "17",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "outlet table deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.TableDeleteTestScript.verifyTableDelete(TableDeleteTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.TableDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.TotalTicketsTestScript">
        <test-method is-config="true" signature="totalTicketsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@1c33c17b]" started-at="2025-05-23T00:05:23Z" name="totalTicketsSetUp" finished-at="2025-05-23T00:05:23Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in total tickets setup: Error in getting total tickets URL: No total tickets URL data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in total tickets setup: Error in getting total tickets URL: No total tickets URL data found after filtering
	at com.menumitratCommonAPITestScript.TotalTicketsTestScript.totalTicketsSetUp(TotalTicketsTestScript.java:87)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsSetUp -->
        <test-method signature="totalTicketsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@1c33c17b]" started-at="2025-05-23T00:05:24Z" name="totalTicketsNegativeTest" data-provider="getTotalTicketsNegativeData" finished-at="2025-05-23T00:05:24Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[totaltickets]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[totaltickets_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TotalTicketsTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@76a2ddf3]" started-at="2025-05-23T00:05:27Z" name="TableListViewSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@76a2ddf3]" started-at="2025-05-23T00:05:28Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-05-23T00:05:28Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_name": "Roof Top",
            "section_id": 17,
            "tables": [
                {
                    "table_id": 81,
                    "table_number": 76,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 82,
                    "table_number": 77,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 83,
                    "table_number": 78,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 84,
                    "table_number": 79,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 85,
                    "table_number": 80,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 124,
                    "table_number": 118,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:08:32 PM",
                    "grand_total": 3870.36,
                    "order_id": 3,
                    "order_number": "3",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "upi",
                    "is_reserved": false
                },
                {
                    "table_id": 125,
                    "table_number": 119,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 126,
                    "table_number": 120,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 127,
                    "table_number": 121,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 128,
                    "table_number": 122,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 129,
                    "table_number": 123,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 130,
                    "table_number": 124,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 131,
                    "table_number": 125,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 132,
                    "table_number": 126,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 133,
                    "table_number": 127,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        },
        {
            "section_name": "Front-Top",
            "section_id": 18,
            "tables": [
                {
                    "table_id": 86,
                    "table_number": 81,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 87,
                    "table_number": 82,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 88,
                    "table_number": 83,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 89,
                    "table_number": 84,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 90,
                    "table_number": 85,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 91,
                    "table_number": 86,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 92,
                    "table_number": 87,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 93,
                    "table_number": 88,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 94,
                    "table_number": 89,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 95,
                    "table_number": 90,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 96,
                    "table_number": 91,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 97,
                    "table_number": 92,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 98,
                    "table_number": 93,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 99,
                    "table_number": 94,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 100,
                    "table_number": 95,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 104,
                    "table_number": 98,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 105,
                    "table_number": 99,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 106,
                    "table_number": 100,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 107,
                    "table_number": 101,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 108,
                    "table_number": 102,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 109,
                    "table_number": 103,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 110,
                    "table_number": 104,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 111,
                    "table_number": 105,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 112,
                    "table_number": 106,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 113,
                    "table_number": 107,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 114,
                    "table_number": 108,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 115,
                    "table_number": 109,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 116,
                    "table_number": 110,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 117,
                    "table_number": 111,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 118,
                    "table_number": 112,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 119,
                    "table_number": 113,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 120,
                    "table_number": 114,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 121,
                    "table_number": 115,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 122,
                    "table_number": 116,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 123,
                    "table_number": 117,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        }
    ],
    "today_total_sales": 2952.28,
    "live_sales": 11611.08,
    "total_tables": 50
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript">
        <test-method is-config="true" signature="updateActiveStatusSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@673be18f]" started-at="2025-05-23T00:05:24Z" name="updateActiveStatusSetUp" finished-at="2025-05-23T00:05:24Z" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusSetUp -->
        <test-method signature="updateActiveStatusTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@673be18f]" started-at="2025-05-23T00:05:24Z" name="updateActiveStatusTest" data-provider="getUpdateActiveStatusData" finished-at="2025-05-23T00:05:24Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update Active status]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "type":"menu_category",
    "id":"4",
    "is_active":true

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu_category status updated successfully",
    "data": {
        "is_active": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusTest(UpdateActiveStatusTestScript.java:219)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOrderTestScript">
        <test-method is-config="true" signature="updateOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:28Z" name="updateOrderSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrderSetUp -->
        <test-method signature="updateOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:28Z" name="updateOrder" data-provider="getUpdateOrderData" finished-at="2025-05-23T00:05:28Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method private void com.menumitratCommonAPITestScript.UpdateOrderTestScript.updateOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws com.menumitra.utilityclass.customException requires a @DataProvider named : getUpdateOrderData]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method private void com.menumitratCommonAPITestScript.UpdateOrderTestScript.updateOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws com.menumitra.utilityclass.customException requires a @DataProvider named : getUpdateOrderData
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrder -->
        <test-method signature="updateDineInOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:28Z" name="updateDineInOrder" data-provider="getUpdateDineInOrderData" finished-at="2025-05-23T00:05:29Z" duration-ms="1259" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderdineIn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order dine-in Order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2", "order_id":"20",
  "tables": [78],
  "section_id": 17,
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in update Dine-In order test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in update Dine-In order test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateOrderTestScript.updateDineInOrder(UpdateOrderTestScript.java:461)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDineInOrder -->
        <test-method signature="updateDeliveryOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:29Z" name="updateDeliveryOrder" data-provider="getUpdateDeliveryOrderData" finished-at="2025-05-23T00:05:29Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading positive update delivery order test scenario data: No positive update delivery order test cases found in test data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading positive update delivery order test scenario data: No positive update delivery order test cases found in test data
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading positive update delivery order test scenario data: No positive update delivery order test cases found in test data
	at com.menumitratCommonAPITestScript.UpdateOrderTestScript.getUpdateDeliveryOrderData(UpdateOrderTestScript.java:203)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDeliveryOrder -->
        <test-method signature="updateParcelOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:30Z" name="updateParcelOrder" data-provider="getUpdateParcelOrderData" finished-at="2025-05-23T00:05:30Z" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderparcel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Updateorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order parcel]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "order_id":"22",
  "order_type": "parcel",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 4,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateParcelOrder -->
        <test-method signature="updateDriveThroughOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:30Z" name="updateDriveThroughOrder" data-provider="getUpdateDriveThroughOrderData" finished-at="2025-05-23T00:05:30Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading positive update drive-through order test scenario data: No positive update drive-through order test cases found in test data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading positive update drive-through order test scenario data: No positive update drive-through order test cases found in test data
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading positive update drive-through order test scenario data: No positive update drive-through order test cases found in test data
	at com.menumitratCommonAPITestScript.UpdateOrderTestScript.getUpdateDriveThroughOrderData(UpdateOrderTestScript.java:289)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDriveThroughOrder -->
        <test-method signature="updateCounterOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@2ef14fe]" started-at="2025-05-23T00:05:30Z" name="updateCounterOrder" data-provider="getUpdateCounterOrderData" finished-at="2025-05-23T00:05:30Z" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateordercounter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[upupdatecounterorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Counter order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
  "order_id":"24",
  "order_type": "counter",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 2,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCounterOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainUpdateTestScript">
        <test-method is-config="true" signature="captainUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@7a1a14a4]" started-at="2025-05-23T00:05:20Z" name="captainUpdateSetUp" finished-at="2025-05-23T00:05:20Z" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateSetUp -->
        <test-method signature="captainUpdateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@7a1a14a4]" started-at="2025-05-23T00:05:21Z" name="captainUpdateTest" data-provider="getCaptainUpdateData" finished-at="2025-05-23T00:05:21Z" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
"update_user_id":"2",
 "user_id":"26",
 "outlet_id":"1",
 "name":"rash",
 "mobile":"6936343467",
 "address":"mumbai",
 "aadhar_number":"343332322321",
 "dob":"",
 "email":"com"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Captain updated successfully",
    "data": {
        "user_id": 12,
        "name": "rash"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@3abada5a]" started-at="2025-05-23T00:05:19Z" name="setup" finished-at="2025-05-23T00:05:20Z" duration-ms="1016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@3abada5a]" started-at="2025-05-23T00:05:20Z" name="createInventory" data-provider="getInventoryCreateData" finished-at="2025-05-23T00:05:20Z" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{    
    "user_id":"2",
    "supplier_id": "8",
    "outlet_id": "1",
    "category_id": "1",
    "name": "bangda",
    "description": "Fresh Roma fish",
    "unit_price": "200",
    "quantity": "100",
    "unit_of_measure": "kg",
    "reorder_level": "",
    "brand_name": "",
    "tax_rate": "1",
    "in_or_out": "in",
    "in_date": "",
    "expiration_date": ""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Inventory created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectOutletTestScript">
        <test-method is-config="true" signature="selectOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@4b23c30a]" started-at="2025-05-23T00:05:22Z" name="selectOutletSetUp" finished-at="2025-05-23T00:05:22Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in select outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in select outlet setup: Cannot invoke "String.isEmpty()" because "this.accessToken" is null
	at com.menumitratCommonAPITestScript.SelectOutletTestScript.selectOutletSetUp(SelectOutletTestScript.java:87)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletSetUp -->
        <test-method signature="selectOutletTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@4b23c30a]" started-at="2025-05-23T00:05:23Z" name="selectOutletTest" data-provider="getSelectOutletData" finished-at="2025-05-23T00:05:23Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting select outlet test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting select outlet test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting select outlet test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.SelectOutletTestScript.getSelectOutletData(SelectOutletTestScript.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionCreateTestScript">
        <test-method is-config="true" signature="sectionCreateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@60856961]" started-at="2025-05-23T00:05:29Z" name="sectionCreateSetup" finished-at="2025-05-23T00:05:30Z" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionCreateSetup -->
        <test-method signature="verifySectionUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@60856961]" started-at="2025-05-23T00:05:30Z" name="verifySectionUsingValidInputData" data-provider="getSectionCreatePositiveInputData" finished-at="2025-05-23T00:05:30Z" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectioncreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify section create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": 1, "user_id": 2, "section_name": "Front-Top" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet Section and 5 tables created successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ForceCancelOrderTestScript">
        <test-method is-config="true" signature="forceCancelOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@130e116b]" started-at="2025-05-23T00:05:18Z" name="forceCancelOrderSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderSetUp -->
        <test-method signature="forceCancelOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@130e116b]" started-at="2025-05-23T00:05:19Z" name="forceCancelOrderTest" data-provider="getForceCancelOrderData" finished-at="2025-05-23T00:05:19Z" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[forcecancelorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[forcecancelorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify force cancel order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id":"6",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Order cancelled successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ForceCancelOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.RemoveTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@61544ae6]" started-at="2025-05-23T00:05:21Z" name="setup" finished-at="2025-05-23T00:05:21Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Remove Template API endpoint data from Excel sheet]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Remove Template API endpoint data from Excel sheet
	at com.menumitratCommonAPITestScript.RemoveTemplateTestScript.setup(RemoveTemplateTestScript.java:156)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.menumitratCommonAPITestScript.RemoveTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewOutletTestScript">
        <test-method is-config="true" signature="viewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@10a9d961]" started-at="2025-05-23T00:05:18Z" name="viewOutletSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletSetUp -->
        <test-method signature="verifyViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@10a9d961]" started-at="2025-05-23T00:05:19Z" name="verifyViewOutlet" data-provider="getViewOutletData" finished-at="2025-05-23T00:05:19Z" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view Outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet details",
    "data": {
        "owner_id": 2,
        "owner_name": "Heena",
        "total_category": 0,
        "total_menu": 0,
        "total_order": 0,
        "total_completed_orders": 0,
        "total_cancelled_orders": 0,
        "total_active_menu": 0,
        "total_inactive_menu": 0,
        "total_active_category": 0,
        "total_inactive_category": 0,
        "total_active_section": 0,
        "total_inactive_section": 0,
        "name": "spicy world",
        "outlet_type": "mess",
        "fssainumber": "None",
        "gstnumber": null,
        "mobile": "9898989899",
        "veg_nonveg": "nonveg",
        "service_charges": "5",
        "gst": "18",
        "address": "456 Second Street, City",
        "is_open": true,
        "upi_id": null,
        "whatsapp": null,
        "facebook": null,
        "instagram": null,
        "website": null,
        "google_review": null,
        "google_business_link": null,
        "opening_time": "10:00",
        "closing_time": "23:00",
        "image": null,
        "outlet_status": true,
        "order_number_sequence": "since_opening",
        "created_on": "26 Apr 2025 09:17:23 AM",
        "created_by": null,
        "updated_by": null,
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.tableView">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.tableView@524f3b3a]" started-at="2025-05-23T00:05:27Z" name="setup" finished-at="2025-05-23T00:05:28Z" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.tableView@524f3b3a]" started-at="2025-05-23T00:05:28Z" name="verifyTableView" data-provider="getTableViewData" finished-at="2025-05-23T00:05:28Z" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",    
    "table_number":"76",
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "table_id": 81,
        "table_number": 76,
        "outlet_id": 1,
        "section_id": "Roof Top",
        "outlet_code": "9001",
        "is_reserved": false
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.tableView.verifyTableView(tableView.java:252)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableView -->
      </class> <!-- com.menumitratCommonAPITestScript.tableView -->
      <class name="com.menumitratCommonAPITestScript.OutletTypeTestScript">
        <test-method is-config="true" signature="outletTypeSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@76f4b65]" started-at="2025-05-23T00:05:26Z" name="outletTypeSetUp" finished-at="2025-05-23T00:05:27Z" duration-ms="672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletTypeSetUp -->
        <test-method signature="verifyOutletType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@76f4b65]" started-at="2025-05-23T00:05:27Z" name="verifyOutletType" data-provider="getOutletTypeData" finished-at="2025-05-23T00:05:27Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outlettype]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outlettype_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Outlet Type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet types",
    "outlet_type_list": {
        "outlet": "outlet",
        "hotel": "hotel",
        "mess": "mess",
        "canteen": "canteen",
        "cafe": "cafe"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOutletType -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletTypeTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionViewTestScript">
        <test-method is-config="true" signature="sectionViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@141e5bef]" started-at="2025-05-23T00:05:29Z" name="sectionViewSetup" finished-at="2025-05-23T00:05:30Z" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionViewSetup -->
        <test-method signature="verifySectionViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@141e5bef]" started-at="2025-05-23T00:05:30Z" name="verifySectionViewUsingValidInputData" data-provider="getSectionViewPositiveInputData" finished-at="2025-05-23T00:05:30Z" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify section view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "data": { "section_id": 16, "section_name": "Family", "outlet_id": 1 } }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionViewUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@36328d33]" started-at="2025-05-23T00:05:27Z" name="setup" finished-at="2025-05-23T00:05:27Z" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@36328d33]" started-at="2025-05-23T00:05:27Z" name="updateInventory" data-provider="getInventoryUpdateData" finished-at="2025-05-23T00:05:27Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading positive inventory update test scenario data: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading positive inventory update test scenario data: Error reading the Excel file: Failed to read zip entry source
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading positive inventory update test scenario data: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.InventoryUpdateTestScript.getInventoryUpdateData(InventoryUpdateTestScript.java:114)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@363a52f]" started-at="2025-05-23T00:05:18Z" name="TableListViewSetUp" finished-at="2025-05-23T00:05:19Z" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@363a52f]" started-at="2025-05-23T00:05:19Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-05-23T00:05:19Z" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterListViewTestScript">
        <test-method is-config="true" signature="waiterListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@14fc1f0]" started-at="2025-05-23T00:05:17Z" name="waiterListViewSetUp" finished-at="2025-05-23T00:05:17Z" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewSetUp -->
        <test-method signature="waiterListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@14fc1f0]" started-at="2025-05-23T00:05:18Z" name="waiterListViewTest" data-provider="getWaiterListViewData" finished-at="2025-05-23T00:05:18Z" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved waiters",
    "data": [
        {
            "outlet_id": "1",
            "user_id": 10,
            "name": "waiter C",
            "mobile": "6146345585",
            "dob": null,
            "email": null
        },
        {
            "outlet_id": "1",
            "user_id": 9,
            "name": "waiter B",
            "mobile": "6146345005",
            "dob": null,
            "email": null
        },
        {
            "outlet_id": "1",
            "user_id": 8,
            "name": "waiter A",
            "mobile": "6146345004",
            "dob": "12 Jan 2023",
            "email": "h@gmaiom"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.supplierViewTestScript">
        <test-method is-config="true" signature="supplierViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@2c4d1ac]" started-at="2025-05-23T00:05:27Z" name="supplierViewSetUp" finished-at="2025-05-23T00:05:27Z" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewSetUp -->
        <test-method signature="supplierViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@2c4d1ac]" started-at="2025-05-23T00:05:27Z" name="supplierViewNegativeTest" data-provider="getSupplierViewNegativeData" finished-at="2025-05-23T00:05:27Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.menumitratCommonAPITestScript.supplierViewTestScript.supplierViewNegativeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws com.menumitra.utilityclass.customException requires a @DataProvider named : getSupplierViewNegativeData]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.menumitratCommonAPITestScript.supplierViewTestScript.supplierViewNegativeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws com.menumitra.utilityclass.customException requires a @DataProvider named : getSupplierViewNegativeData
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewNegativeTest -->
        <test-method signature="verifySupplierView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@2c4d1ac]" started-at="2025-05-23T00:05:28Z" name="verifySupplierView" data-provider="getSupplierViewValidData" finished-at="2025-05-23T00:05:28Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "supplier_id":"4",
    "outlet_id": "1"
     
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "supplier_id": 1,
        "outlet_id": 1,
        "name": "Balaji",
        "supplier_status": true,
        "credit_rating": "good",
        "credit_limit": 50000,
        "location": "Mumbai",
        "owner_name": "Heena",
        "supplier_code": null,
        "website": "http://example.com",
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "address": "",
        "created_by": "Owner",
        "updated_by": "Owner",
        "created_on": "30 Apr 2025 01:21:21 PM",
        "updated_on": "30 Apr 2025 01:40:39 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierView -->
      </class> <!-- com.menumitratCommonAPITestScript.supplierViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@e57b96d]" started-at="2025-05-23T00:05:26Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@e57b96d]" started-at="2025-05-23T00:05:26Z" name="createStaff" data-provider="getStaffCreateData" finished-at="2025-05-23T00:05:26Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.Exception: Error while reading staff create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.Exception: Error while reading staff create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.Exception: Error while reading staff create test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.StaffCreateTestScript.getStaffCreateData(StaffCreateTestScript.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@63fbfaeb]" started-at="2025-05-23T00:05:26Z" name="setup" finished-at="2025-05-23T00:05:26Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during setup: Error While Reading Menu Create API endpoint data from Excel sheet]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during setup: Error While Reading Menu Create API endpoint data from Excel sheet
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.setup(MenuCreateTestScript.java:177)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuUsigValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@63fbfaeb]" started-at="2025-05-23T00:05:26Z" name="createMenuUsigValidInputData" data-provider="getMenuCreateData" finished-at="2025-05-23T00:05:26Z" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"3",
    "user_id":"11",
    "name":"Chicken tandoor",
    "food_type":"nonveg",
    "description":"this healthy food",
    "spicy_index":"2",
    "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}],
    "images":"C:\Users\hp\Downloads\menus\dal1.jpg",
    "ingredients":"dal,vegetables",
    "offer":"40 ",
    "rating":"5.0",
    "cgst":"5",
    "sgst":"10"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu created successfully",
    
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuUsigValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@63fbfaeb]" started-at="2025-05-23T00:05:26Z" name="tearDown" finished-at="2025-05-23T00:05:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript">
        <test-method is-config="true" signature="defaultUserSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@1458ed9c]" started-at="2025-05-23T00:05:18Z" name="defaultUserSettingsSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsSetUp -->
        <test-method signature="defaultUserSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@1458ed9c]" started-at="2025-05-23T00:05:18Z" name="defaultUserSettingsTest" data-provider="getDefaultUserSettingsData" finished-at="2025-05-23T00:05:18Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting default user settings test data: Error reading the Excel file: Failed to read zip entry source]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting default user settings test data: Error reading the Excel file: Failed to read zip entry source
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting default user settings test data: Error reading the Excel file: Failed to read zip entry source
	at com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript.getDefaultUserSettingsData(DefaultUserSettingsTestScript.java:171)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryListView">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@21337f7b]" started-at="2025-05-23T00:05:16Z" name="setup" finished-at="2025-05-23T00:05:17Z" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@21337f7b]" started-at="2025-05-23T00:05:17Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListViewData" finished-at="2025-05-23T00:05:17Z" duration-ms="104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Success",
    "categories": [
        {
            "inventory_category_id": 1,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 2,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 3,
            "name": "water"
        },
        {
            "inventory_category_id": 4,
            "name": "Farm"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryListView -->
      <class name="com.menumitratCommonAPITestScript.StaffUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@45312be2]" started-at="2025-05-23T00:05:28Z" name="setup" finished-at="2025-05-23T00:05:28Z" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@45312be2]" started-at="2025-05-23T00:05:28Z" name="updateStaff" data-provider="getStaffUpdateData" finished-at="2025-05-23T00:05:29Z" duration-ms="773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update staff using valid input]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
         "user_id":2,
         "staff_id": 1,
        "outlet_id": 1,
        "name": "stafff one",
        "mobile":"7918232897",
        "address": "dfddd",
        "role": "receptionist",
        "dob": "2 Jul 2003",
        "aadhar_number": "321291198274",
        "photo": "C:\Users\hp\Downloads\menus\coca.jpg"
}             ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Staff updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStaff -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionDeleteTestScript">
        <test-method is-config="true" signature="sectionDeleteSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@e383572]" started-at="2025-05-23T00:05:28Z" name="sectionDeleteSetup" finished-at="2025-05-23T00:05:29Z" duration-ms="1386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionDeleteSetup -->
        <test-method signature="verifySectionDeleteUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@e383572]" started-at="2025-05-23T00:05:30Z" name="verifySectionDeleteUsingValidInputData" data-provider="getSectionDeletePositiveInputData" finished-at="2025-05-23T00:05:30Z" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectiondelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectiondelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid user_id, outlet_id, and section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "section_id": "15"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Outlet Section and associated tables deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionDeleteUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetFoodTypeList">
        <test-method is-config="true" signature="getFoodTypeListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@34c01041]" started-at="2025-05-23T00:05:26Z" name="getFoodTypeListSetUp" finished-at="2025-05-23T00:05:27Z" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFoodTypeListSetUp -->
        <test-method signature="verifyFoodTypeList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@34c01041]" started-at="2025-05-23T00:05:27Z" name="verifyFoodTypeList" data-provider="getFoodTypeListData" finished-at="2025-05-23T00:05:27Z" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getfoodtypelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getfoodtypelist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get food tyoe list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFoodTypeList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetFoodTypeList -->
      <class name="com.menumitratCommonAPITestScript.TableCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@3b7d3a38]" started-at="2025-05-23T00:05:16Z" name="setup" finished-at="2025-05-23T00:05:16Z" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@3b7d3a38]" started-at="2025-05-23T00:05:17Z" name="createTable" data-provider="getTableCreateData" finished-at="2025-05-23T00:05:17Z" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablecreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablecreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table create ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": "1",
    "section_id": "17",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet table created successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Error during table creation: JSONObject["table_number"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Error during table creation: JSONObject["table_number"] not found.
	at com.menumitratCommonAPITestScript.TableCreateTestScript.createTable(TableCreateTestScript.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTable -->
      </class> <!-- com.menumitratCommonAPITestScript.TableCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultSettingTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@7efaad5a]" started-at="2025-05-23T00:05:15Z" name="setup" finished-at="2025-05-23T00:05:16Z" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="defaultSetting(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@7efaad5a]" started-at="2025-05-23T00:05:16Z" name="defaultSetting" data-provider="getDefaultSettingData" finished-at="2025-05-23T00:05:16Z" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultsettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultsettings001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Default Settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultSetting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@7efaad5a]" started-at="2025-05-23T00:05:16Z" name="tearDown" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultSettingTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffRoleListTestScript">
        <test-method is-config="true" signature="staffRoleListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@632ceb35]" started-at="2025-05-23T00:05:18Z" name="staffRoleListSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListSetUp -->
        <test-method signature="staffRoleListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@632ceb35]" started-at="2025-05-23T00:05:18Z" name="staffRoleListTest" data-provider="getStaffRoleListData" finished-at="2025-05-23T00:05:18Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting staff role list test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting staff role list test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting staff role list test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.StaffRoleListTestScript.getStaffRoleListData(StaffRoleListTestScript.java:168)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffRoleListTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOutletTestScript">
        <test-method is-config="true" signature="updateOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@29526c05]" started-at="2025-05-23T00:05:28Z" name="updateOutletSetUp" finished-at="2025-05-23T00:05:28Z" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletSetUp -->
        <test-method signature="verifyUpdateOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@29526c05]" started-at="2025-05-23T00:05:28Z" name="verifyUpdateOutlet" data-provider="getUpdateOutletData" finished-at="2025-05-23T00:05:28Z" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify  update outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",         
    "name": "Bhavani Hotel",
    "outlet_type": "mess",
    "fssainumber": "12345678901239",
    "gstnumber": "354545ddede1237",
    "mobile": "6767679760",
    "veg_nonveg": "veg",
    "service_charges": "1",
    "gst": "1",
    "address": "satara, maharashtra",
    "is_open":true,
    "upi_id":"dd@ok",
    "website":"http://website",
    "whatsapp":"https://whatsapp",
    "facebook":"https://facebook",
    "instagram":"https://instagram",
    "google_business_link":"https://business.com",
    "google_review":"https://google-review"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet information updated successfully",
    "data": {
        "outlet_id": 1,
        "name": "Khana Khazana"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainListViewTestScript">
        <test-method is-config="true" signature="captainListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@ca30bc1]" started-at="2025-05-23T00:05:16Z" name="captainListViewSetUp" finished-at="2025-05-23T00:05:16Z" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewSetUp -->
        <test-method signature="captainListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@ca30bc1]" started-at="2025-05-23T00:05:16Z" name="captainListViewTest" data-provider="getCaptainListViewData" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting captain list view test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting captain list view test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting captain list view test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.CaptainListViewTestScript.getCaptainListViewData(CaptainListViewTestScript.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@5bf0fe62]" started-at="2025-05-23T00:05:24Z" name="setup" finished-at="2025-05-23T00:05:24Z" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@5bf0fe62]" started-at="2025-05-23T00:05:24Z" name="createChef" data-provider="getChefCreateData" finished-at="2025-05-23T00:05:24Z" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   "update_user_id":"2",
    "outlet_id": "1",
    "name": "chef four ",
    "mobile":"8600890098",
    "address" : "",
    "aadhar_number": "123456789018",
    "dob":"",
    "email":""  }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chef created successfully",
    "chef_id": 14
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefListViewTestScript">
        <test-method is-config="true" signature="chefListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@4f5991f6]" started-at="2025-05-23T00:05:26Z" name="chefListViewSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewSetUp -->
        <test-method signature="verifyChefListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@4f5991f6]" started-at="2025-05-23T00:05:26Z" name="verifyChefListView" data-provider="getChefListViewData" finished-at="2025-05-23T00:05:26Z" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cheflistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheflistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef listview]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "chefs": [
        {
            "outlet_id": 1,
            "user_id": 14,
            "name": "chef bhau",
            "mobile": "8600000007",
            "dob": null,
            "email": ""
        },
        {
            "outlet_id": 1,
            "user_id": 13,
            "name": "chef ",
            "mobile": "8600000000",
            "dob": null,
            "email": "h@gmai"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChefListView -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetSupplierListTestScript">
        <test-method is-config="true" signature="supplierListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@38234a38]" started-at="2025-05-23T00:05:26Z" name="supplierListSetUp" finished-at="2025-05-23T00:05:26Z" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListSetUp -->
        <test-method signature="getSupplierList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@38234a38]" started-at="2025-05-23T00:05:26Z" name="getSupplierList" data-provider="getSupplierListData" finished-at="2025-05-23T00:05:26Z" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getsupplierlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getsupplierlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify get supplier list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1"
  
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "Balaji": 1,
    "B Supplier": 2,
    "C Supplier": 4,
    "heena Supplier": 6
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSupplierList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSupplierListTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffRole">
        <test-method is-config="true" signature="getStaffRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@74589991]" started-at="2025-05-23T00:05:14Z" name="getStaffRoleSetUp" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get staff role setup: Error in getStaffRoleUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get staff role setup: Error in getStaffRoleUrl: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.GetStaffRole.getStaffRoleSetUp(GetStaffRole.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffRoleSetUp -->
        <test-method signature="verifyStaffRole(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@74589991]" started-at="2025-05-23T00:05:15Z" name="verifyStaffRole" data-provider="getStaffRoleData" finished-at="2025-05-23T00:05:15Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getStaffRoleData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getStaffRoleData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getStaffRoleData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetStaffRole.getStaffRoleData(GetStaffRole.java:181)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffRole -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffRole -->
      <class name="com.menumitratCommonAPITestScript.TicketListViewTestScript">
        <test-method is-config="true" signature="ticketListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@4f0100a7]" started-at="2025-05-23T00:05:23Z" name="ticketListViewSetUp" finished-at="2025-05-23T00:05:23Z" duration-ms="594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewSetUp -->
        <test-method signature="ticketListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@4f0100a7]" started-at="2025-05-23T00:05:23Z" name="ticketListViewNegativeTest" data-provider="getTicketListViewNegativeData" finished-at="2025-05-23T00:05:23Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting ticket list view negative test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting ticket list view negative test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting ticket list view negative test data: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.TicketListViewTestScript.getTicketListViewNegativeData(TicketListViewTestScript.java:253)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewNegativeTest -->
        <test-method signature="ticketListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@4f0100a7]" started-at="2025-05-23T00:05:24Z" name="ticketListViewTest" data-provider="getTicketListViewData" finished-at="2025-05-23T00:05:24Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading ticket list view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading ticket list view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading ticket list view test scenario data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.TicketListViewTestScript.getTicketListViewData(TicketListViewTestScript.java:159)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.PosDetailsTestScript">
        <test-method is-config="true" signature="posDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@3cdf2c61]" started-at="2025-05-23T00:05:23Z" name="posDetailsSetUp" finished-at="2025-05-23T00:05:23Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in pos details setup: Error in getting pos details URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in pos details setup: Error in getting pos details URL: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.PosDetailsTestScript.posDetailsSetUp(PosDetailsTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsSetUp -->
        <test-method signature="posDetailsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@3cdf2c61]" started-at="2025-05-23T00:05:24Z" name="posDetailsNegativeTest" data-provider="getPosDetailsNegativeData" finished-at="2025-05-23T00:05:24Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verifyempty user id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":"101"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsNegativeTest -->
        <test-method signature="posDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@3cdf2c61]" started-at="2025-05-23T00:05:24Z" name="posDetailsTest" data-provider="getPosDetailsData" finished-at="2025-05-23T00:05:24Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify pos details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":2
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.PosDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefViewTestScript">
        <test-method is-config="true" signature="chefViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@5f354bcf]" started-at="2025-05-23T00:05:10Z" name="chefViewSetUp" finished-at="2025-05-23T00:05:10Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view setup: Error in getChefViewUrl: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view setup: Error in getChefViewUrl: Unexpected error occurred while reading excel sheet No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewSetUp(ChefViewTestScript.java:90)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewSetUp -->
        <test-method signature="chefViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@5f354bcf]" started-at="2025-05-23T00:05:14Z" name="chefViewTest" data-provider="getChefViewData" finished-at="2025-05-23T00:05:14Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getChefViewData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getChefViewData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getChefViewData: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.ChefViewTestScript.getChefViewData(ChefViewTestScript.java:180)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.CheckVersionTestScript">
        <test-method is-config="true" signature="checkVersionSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@512baff6]" started-at="2025-05-23T00:05:17Z" name="checkVersionSetUp" finished-at="2025-05-23T00:05:18Z" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionSetUp -->
        <test-method signature="checkVersionTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@512baff6]" started-at="2025-05-23T00:05:18Z" name="checkVersionTest" data-provider="getCheckVersionData" finished-at="2025-05-23T00:05:18Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting check version test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting check version test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error in getting check version test data: Unexpected error occurred while reading excel sheet: Cannot get a STRING value from a NUMERIC cell
	at com.menumitratCommonAPITestScript.CheckVersionTestScript.getCheckVersionData(CheckVersionTestScript.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckVersionTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionUpdateTestScript">
        <test-method is-config="true" signature="sectionUpdateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@291a7e3c]" started-at="2025-05-23T00:05:15Z" name="sectionUpdateSetup" finished-at="2025-05-23T00:05:16Z" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionUpdateSetup -->
        <test-method signature="sectionUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@291a7e3c]" started-at="2025-05-23T00:05:16Z" name="sectionUpdateNegativeTest" data-provider="getSectionUpdateNegativeData" finished-at="2025-05-23T00:05:16Z" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty section_name value]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "section_id": 17, "outlet_id": 1, "section_name": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide section_name"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionUpdateNegativeTest -->
        <test-method signature="verifySectionUpdateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@291a7e3c]" started-at="2025-05-23T00:05:16Z" name="verifySectionUpdateUsingValidInputData" data-provider="getSectionUpdatePositiveInputData" finished-at="2025-05-23T00:05:16Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "user_id":2,
    "section_id":17,
    "outlet_id": 1,
    "section_name": "Top"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet Section updated successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUpdateUsingValidInputData -->
        <test-method signature="verifySectionCreateUsingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@291a7e3c]" started-at="2025-05-23T00:05:16Z" name="verifySectionCreateUsingInvalidData" data-provider="getSectionUpdateNegativeInputData" finished-at="2025-05-23T00:05:16Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.Exception: Error reading section update API negative test scenario data]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.Exception: Error reading section update API negative test scenario data
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.Exception: Error reading section update API negative test scenario data
	at com.menumitratCommonAPITestScript.sectionUpdateTestScript.getSectionUpdateNegativeInputData(sectionUpdateTestScript.java:151)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionCreateUsingInvalidData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@1046d517]" started-at="2025-05-23T00:05:16Z" name="setup" finished-at="2025-05-23T00:05:16Z" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteCaptain(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@1046d517]" started-at="2025-05-23T00:05:17Z" name="deleteCaptain" data-provider="getCaptainDeleteData" finished-at="2025-05-23T00:05:17Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error while reading captain delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error while reading captain delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.menumitra.utilityclass.customException: Error while reading captain delete test scenario data from Excel sheet: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.CaptainDeleteTestScript.getCaptainDeleteData(CaptainDeleteTestScript.java:105)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCaptain -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryViewTestScript">
        <test-method is-config="true" signature="menuCategoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@73cd37c0]" started-at="2025-05-23T00:05:16Z" name="menuCategoryViewSetUp" finished-at="2025-05-23T00:05:17Z" duration-ms="406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewSetUp -->
        <test-method signature="verifyMenuCategoryView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@73cd37c0]" started-at="2025-05-23T00:05:17Z" name="verifyMenuCategoryView" data-provider="getMenuCategoryViewData" finished-at="2025-05-23T00:05:17Z" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id": "5"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetMenuList">
        <test-method is-config="true" signature="menuListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@58326051]" started-at="2025-05-23T00:05:25Z" name="menuListSetUp" finished-at="2025-05-23T00:05:25Z" duration-ms="0" status="FAIL">
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu list setup: Error in getMenuListUrl: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu list setup: Error in getMenuListUrl: Unexpected error occurred while reading excel sheet: Cannot get a NUMERIC value from a STRING cell
	at com.menumitratCommonAPITestScript.GetMenuList.menuListSetUp(GetMenuList.java:94)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListSetUp -->
        <test-method signature="verifyMenuList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@58326051]" started-at="2025-05-23T00:05:25Z" name="verifyMenuList" data-provider="getMenuListData" finished-at="2025-05-23T00:05:25Z" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[getmenulist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getmenu_list_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Menu List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "menu_list": {
        "Chicken biryani": 17,
        "Chicken Biryani": 9,
        "Chicken Biryani@434": 10,
        "Veg Biryani": 11,
        "Fried Rice": 12,
        "Jeera Rice": 13,
        "Lemon Ricee": 14,
        "Anda Biryani": 18
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetMenuList -->
    </test> <!-- MenuMitra API Tests -->
  </suite> <!-- Suite -->
</testng-results>
