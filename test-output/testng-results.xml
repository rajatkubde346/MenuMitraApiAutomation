<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="330" passed="148" failed="178" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-06T18:20:30Z" name="Suite" finished-at="2025-06-06T18:22:04Z" duration-ms="93892">
    <groups>
    </groups>
    <test started-at="2025-06-06T18:20:30Z" name="Test" finished-at="2025-06-06T18:22:04Z" duration-ms="93892">
      <class name="com.menumitratCommonAPITestScript.verifyOTPTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="setup" finished-at="2025-06-06T23:50:52Z" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyOTPAPiUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="verifyOTPAPiUsingValidInputData" data-provider="getPositiveInputData" finished-at="2025-06-06T23:50:52Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify OTP with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "6264335759", "otp": "1234", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_id": 2,
    "name": "Heena",
    "role": "owner",
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyIiwiZXhwIjoxNzQ2NTMxOTEyLCJpYXQiOjE3NDU5MjcxMTIsImp0aSI6Ijc5NzRmYzkwLTY1MDAtNGQ2OS1iMWRmLWQwNmIzOWFiNGZiZSIsInJvbGUiOiJvd25lciIsImRldmljZSI6Ijg5NzQ1NjEyMzR8TGFwdG9wIDEyMiJ9.bQ2RYiEhNDHHW6ZAx3CqKkLu3QVdAyIm6Qz49eE9BCA",
    "expires_at": "06 May 2025"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPAPiUsingValidInputData -->
        <test-method signature="verifyOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="verifyOTPusingInvalidData" data-provider="getverifyOTPInvalidData" finished-at="2025-06-06T23:50:52Z" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid OTP]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "6264335759", "otp": "9999", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Invalid OTP"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[401]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPusingInvalidData -->
        <test-method signature="verifyOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="verifyOTPusingInvalidData" data-provider="getverifyOTPInvalidData" finished-at="2025-06-06T23:50:52Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"", "otp": "1234", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide mobile number"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPusingInvalidData -->
        <test-method signature="verifyOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="verifyOTPusingInvalidData" data-provider="getverifyOTPInvalidData" finished-at="2025-06-06T23:50:52Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile number format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "123", "otp": "1234", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPusingInvalidData -->
        <test-method signature="verifyOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.verifyOTPTestScript@7c711375]" started-at="2025-06-06T23:50:52Z" name="verifyOTPusingInvalidData" data-provider="getverifyOTPInvalidData" finished-at="2025-06-06T23:50:52Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[verifyotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verifyotp_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing OTP]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "mobile": "6264335759","otp": "", "fcm_token": "4578963547892", "device_id": "8974561234", "device_model": "Laptop 122" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "OTP is required"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOTPusingInvalidData -->
      </class> <!-- com.menumitratCommonAPITestScript.verifyOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.OrderViewTestScript">
        <test-method is-config="true" signature="orderViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@2ed2d9cb]" started-at="2025-06-06T23:50:47Z" name="orderViewSetUp" finished-at="2025-06-06T23:50:47Z" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewSetUp -->
        <test-method signature="orderViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@2ed2d9cb]" started-at="2025-06-06T23:50:47Z" name="orderViewNegativeTest" data-provider="getOrderViewNegativeData" finished-at="2025-06-06T23:50:47Z" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view using invorrect order id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "10101",
    "order_number": "29"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewNegativeTest -->
        <test-method signature="orderViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@2ed2d9cb]" started-at="2025-06-06T23:50:47Z" name="orderViewNegativeTest" data-provider="getOrderViewNegativeData" finished-at="2025-06-06T23:50:47Z" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view using incorrect order number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "29",
    "order_number": "887"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewNegativeTest -->
        <test-method signature="orderViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderViewTestScript@2ed2d9cb]" started-at="2025-06-06T23:50:47Z" name="orderViewTest" data-provider="getOrderViewData" finished-at="2025-06-06T23:50:47Z" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "order_id": "29",
    "order_number": "29"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@1b2abca6]" started-at="2025-06-06T23:50:46Z" name="setup" finished-at="2025-06-06T23:50:46Z" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="chefDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@1b2abca6]" started-at="2025-06-06T23:50:46Z" name="chefDeleteNegativeTest" data-provider="getChefDeleteNegativeData" finished-at="2025-06-06T23:50:46Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify captain delete with null user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "1", "user_id": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefDeleteNegativeTest -->
        <test-method signature="deleteChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefDeleteTestScript@1b2abca6]" started-at="2025-06-06T23:50:46Z" name="deleteChef" data-provider="getChefDeleteData" finished-at="2025-06-06T23:50:46Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"13",
 "outlet_id":"1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "(pymysql.err.IntegrityError) (1048, \"Column 'user_id' cannot be null\")\n[SQL: UPDATE user_settings SET user_id=%(user_id)s WHERE user_settings.user_settings_id = %(user_settings_user_settings_id)s]\n[parameters: {'user_id': None, 'user_settings_user_settings_id': 6}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterUpdateTestScript">
        <test-method is-config="true" signature="waiterUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:05Z" name="waiterUpdateSetUp" finished-at="2025-06-06T23:51:06Z" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateSetUp -->
        <test-method signature="verifyWaiterUpdate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="verifyWaiterUpdate" data-provider="getWaiterUpdateData" finished-at="2025-06-06T23:51:06Z" duration-ms="70" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"15",
 "outlet_id":"1",
 "name":"Waiter ram",
 "mobile":"6146340038",
 "address":"satara",
 "aadhar_number":"343332322328",
 "dob":"12 Jan 2023",
 "email":"waiter@gmail.com"


}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter updated successfully",
    "data": {
        "user_id": 10,
        "name": "waitvaibhav"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.verifyWaiterUpdate(WaiterUpdateTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterUpdate -->
        <test-method signature="verifyWaiterUpdate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="verifyWaiterUpdate" data-provider="getWaiterUpdateData" finished-at="2025-06-06T23:51:06Z" duration-ms="66" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"15",
 "outlet_id":"1",
 "name":"Waiter ram",
 "mobile":"6146340038",
 "address":"satara",
 "aadhar_number":"343332322328",
 "dob":"12 Jan 2023",
 "email":"h@gmail"


}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter updated successfully",
    "data": {
        "user_id": 10,
        "name": "waitvaibhav"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.verifyWaiterUpdate(WaiterUpdateTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterUpdate -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="79" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing update_user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id":"100", "outlet_id":"1", "name":"Waiter ram", "mobile":"6146340078", "address":"satara", "aadhar_number":"343332322328", "dob":"12 Jan 2023", "email":"",update_user_id:"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID is incorrect or user is not a waiter"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update negative test: Response message mismatch - Expected: User ID is incorrect or user is not a waiter, Actual: User ID does not exist.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update negative test: Response message mismatch - Expected: User ID is incorrect or user is not a waiter, Actual: User ID does not exist.
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateNegativeTest(WaiterUpdateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid user_id (non-numeric)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"abc", "outlet_id":"1", "name":"Waiter ram", "mobile":"6146340038", "address":"satara", "aadhar_number":"343332322328", "dob":"12 Jan 2023", "email":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="69" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile number (less digits)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"15", "outlet_id":"1", "name":"Waiter ram", "mobile":"61463", "address":"satara", "aadhar_number":"343332322328", "dob":"12 Jan 2023", "email":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must be exactly 10 digits long"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateNegativeTest(WaiterUpdateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="64" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"15", "outlet_id":"1", "name":"Waiter ram", "mobile":"6146340038", "address":"satara", "aadhar_number":"343332322328", "dob":"12 Jan 2023", "email":"h@gds" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"The email format is incorrect."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateNegativeTest(WaiterUpdateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"15", "name":"Waiter ram", "mobile":"6146340038", "address":"satara", "aadhar_number":"343332322328", "dob":"12 Jan 2023", "email":"","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
        <test-method signature="waiterUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterUpdateTestScript@550dbc7a]" started-at="2025-06-06T23:51:06Z" name="waiterUpdateNegativeTest" data-provider="getWaiterUpdateNegativeData" finished-at="2025-06-06T23:51:06Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterupdate_009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid aadhar_number (less digits)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"15", "outlet_id":"1", "name":"Waiter ram", "mobile":"6146340038", "address":"satara", "aadhar_number":"12345", "dob":"12 Jan 2023", "email":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Aadhar number must be 12 digits."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter update negative test: Status code mismatch - Expected: 400, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterUpdateTestScript.waiterUpdateNegativeTest(WaiterUpdateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterUpdateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffListWithRole">
        <test-method is-config="true" signature="getStaffListWithRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@741a8937]" started-at="2025-06-06T23:50:38Z" name="getStaffListWithRoleSetUp" finished-at="2025-06-06T23:50:38Z" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleSetUp -->
        <test-method signature="getStaffListWithRoleTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@741a8937]" started-at="2025-06-06T23:50:38Z" name="getStaffListWithRoleTest" data-provider="getStaffListWithRoleData" finished-at="2025-06-06T23:50:38Z" duration-ms="76" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstafflistwithrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstafflistwithrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify get staff list with role]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "staff_role":"receptionist"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "lists": [
        {
            "staff_id": 3,
            "name": "Jully",
            "mobile": "9833445579",
            "role": "receptionist",
            "photo": null
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff list with role test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff list with role test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetStaffListWithRole.getStaffListWithRoleTest(GetStaffListWithRole.java:232)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleTest -->
        <test-method signature="getStaffListWithRoleTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@741a8937]" started-at="2025-06-06T23:50:38Z" name="getStaffListWithRoleTest" data-provider="getStaffListWithRoleData" finished-at="2025-06-06T23:50:38Z" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstafflistwithrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstafflistwithrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify get staff list with role using invalid outlet id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1010",
    "staff_role":"receptionist"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id does not exist."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffListWithRoleTest -->
        <test-method signature="staffListWithRoleNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffListWithRole@741a8937]" started-at="2025-06-06T23:50:38Z" name="staffListWithRoleNegativeTest" data-provider="getStaffListWithRoleNegativeData" finished-at="2025-06-06T23:50:38Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting staff list with role negative test data: No valid staff list with role negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting staff list with role negative test data: No valid staff list with role negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting staff list with role negative test data: No valid staff list with role negative test data found after filtering
	at com.menumitratCommonAPITestScript.GetStaffListWithRole.getStaffListWithRoleNegativeData(GetStaffListWithRole.java:278)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffListWithRoleNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffListWithRole -->
      <class name="com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript">
        <test-method is-config="true" signature="orderListViewCdskdsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e1a0406]" started-at="2025-06-06T23:51:09Z" name="orderListViewCdskdsSetUp" finished-at="2025-06-06T23:51:10Z" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsSetUp -->
        <test-method signature="orderListViewCdskdsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e1a0406]" started-at="2025-06-06T23:51:10Z" name="orderListViewCdskdsNegativeTest" data-provider="getOrderListViewCdskdsNegativeData" finished-at="2025-06-06T23:51:10Z" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds using special character in outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "outlet_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsNegativeTest -->
        <test-method signature="orderListViewCdskdsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript@1e1a0406]" started-at="2025-06-06T23:51:10Z" name="orderListViewCdskdsTest" data-provider="getOrderListViewCdskdsData" finished-at="2025-06-06T23:51:15Z" duration-ms="5524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistviewcdskds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistviewcdskds_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify order list view Cds kds]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewCdskdsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderListViewCdskdsTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetVegOrNonVegList">
        <test-method is-config="true" signature="getVegOrNonVegListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@3ee37e5a]" started-at="2025-06-06T23:50:54Z" name="getVegOrNonVegListSetUp" finished-at="2025-06-06T23:50:55Z" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVegOrNonVegListSetUp -->
        <test-method signature="verifyVegOrNonVegList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetVegOrNonVegList@3ee37e5a]" started-at="2025-06-06T23:50:55Z" name="verifyVegOrNonVegList" data-provider="getVegOrNonVegListData" finished-at="2025-06-06T23:50:55Z" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getvegornonveglist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getvegornonveglist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Veg or non veg list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyVegOrNonVegList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetVegOrNonVegList -->
      <class name="com.menumitratCommonAPITestScript.StaffViewTestScript">
        <test-method is-config="true" signature="staffviewsetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@957e06]" started-at="2025-06-06T23:51:02Z" name="staffviewsetUp" finished-at="2025-06-06T23:51:02Z" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffviewsetUp -->
        <test-method signature="verifyStaffView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@957e06]" started-at="2025-06-06T23:51:02Z" name="verifyStaffView" data-provider="getstaffviewValidData" finished-at="2025-06-06T23:51:02Z" duration-ms="68" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify staff view using valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "staff_id": 1,
    "outlet_id": 1
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.StaffViewTestScript.verifyStaffView(StaffViewTestScript.java:306)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffView -->
        <test-method signature="verifyStaffViewNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffViewTestScript@957e06]" started-at="2025-06-06T23:51:03Z" name="verifyStaffViewNegative" data-provider="getstaffviewNegativeData" finished-at="2025-06-06T23:51:03Z" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid staff view with missing data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "staff_id": "", "outlet_id": 1}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"staff_id is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffViewNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterCreateTestScript">
        <test-method is-config="true" signature="waiterCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:40Z" name="waiterCreateSetUp" finished-at="2025-06-06T23:50:40Z" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateSetUp -->
        <test-method signature="verifyWaiterCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:40Z" name="verifyWaiterCreate" data-provider="getWaiterCreateData" finished-at="2025-06-06T23:50:40Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Waiter create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

 "user_id":"2",
 "outlet_id":"1",
 "name":"waiter six",
 "mobile":"6146345895",
 "address":"",
 "aadhar_number":"343332322321",
 "dob":"",
 "email":""


}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Waiter created successfully",
    "data": {
        "waiter_id": 10,
        "name": "waiter C"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.verifyWaiterCreate(WaiterCreateTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterCreate -->
        <test-method signature="waiterCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:40Z" name="waiterCreateNegativeTest" data-provider="getWaiterCreateNegativeData" finished-at="2025-06-06T23:50:40Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing all required fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "", "name": "", "mobile": "", "aadhar_number": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateNegativeTest -->
        <test-method signature="waiterCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:40Z" name="waiterCreateNegativeTest" data-provider="getWaiterCreateNegativeData" finished-at="2025-06-06T23:50:40Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile number format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "name": "waiter X", "mobile": "abcd1234", "aadhar_number": "123456789012", "email": "test@example.com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must contain only digits"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.waiterCreateNegativeTest(WaiterCreateTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateNegativeTest -->
        <test-method signature="waiterCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:41Z" name="waiterCreateNegativeTest" data-provider="getWaiterCreateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="68" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "name": "waiter Y", "mobile": "9876543210", "aadhar_number": "123456789012", "email": "invalid-email" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"email format is incorrect."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.waiterCreateNegativeTest(WaiterCreateTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateNegativeTest -->
        <test-method signature="waiterCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:41Z" name="waiterCreateNegativeTest" data-provider="getWaiterCreateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing Aadhar number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "name": "waiter Z", "mobile": "9876543210", "aadhar_number": "", "email": "test@example.com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Aadhar number is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.waiterCreateNegativeTest(WaiterCreateTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateNegativeTest -->
        <test-method signature="waiterCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterCreateTestScript@4f2b503c]" started-at="2025-06-06T23:50:41Z" name="waiterCreateNegativeTest" data-provider="getWaiterCreateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="78" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waitercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waitercreate_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Duplicate mobile number (already exists in system)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "name": "waiter A", "mobile": "6264335759", "aadhar_number": "123456789012", "email": "test@example.com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number already exists"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterCreateTestScript.waiterCreateNegativeTest(WaiterCreateTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterCreateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@52af26ee]" started-at="2025-06-06T23:50:39Z" name="setup" finished-at="2025-06-06T23:50:39Z" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@52af26ee]" started-at="2025-06-06T23:50:39Z" name="updateTemplatesUsingValidInputData" data-provider="getUpdateTemplatesData" finished-at="2025-06-06T23:50:39Z" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatetemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ {
        "name": "Classic",
        "qr_overlay_position": "top",
        "template_id":3,
        "image_name": "C:\Users\hp\Downloads\pexels-pixabay-460672.jpg"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTemplatesTestScript@52af26ee]" started-at="2025-06-06T23:50:39Z" name="tearDown" finished-at="2025-06-06T23:50:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.ActivityLogTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@58d75e99]" started-at="2025-06-06T23:50:36Z" name="setup" finished-at="2025-06-06T23:50:36Z" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="activityLogNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@58d75e99]" started-at="2025-06-06T23:50:37Z" name="activityLogNegativeTest" data-provider="getActivityLogNegativeData" finished-at="2025-06-06T23:50:37Z" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activitylog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activitylog_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "User ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityLogNegativeTest -->
        <test-method signature="activityLogTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@58d75e99]" started-at="2025-06-06T23:50:37Z" name="activityLogTest" data-provider="getActivityLogData" finished-at="2025-06-06T23:50:37Z" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[activitylog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activitylog_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Activity log]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": 2
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityLogTest -->
        <test-method signature="activityLogTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ActivityLogTestScript@58d75e99]" started-at="2025-06-06T23:50:37Z" name="activityLogTest" data-provider="getActivityLogData" finished-at="2025-06-06T23:50:37Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[activitylog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activitylog_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "User ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in activity log test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in activity log test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ActivityLogTestScript.activityLogTest(ActivityLogTestScript.java:226)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityLogTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ActivityLogTestScript -->
      <class name="com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial">
        <test-method is-config="true" signature="makeMenuSpecialNonSpecialSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial@306e95ec]" started-at="2025-06-06T23:50:38Z" name="makeMenuSpecialNonSpecialSetUp" finished-at="2025-06-06T23:50:39Z" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeMenuSpecialNonSpecialSetUp -->
        <test-method signature="makeMenuSpecialNonSpecialNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial@306e95ec]" started-at="2025-06-06T23:50:39Z" name="makeMenuSpecialNonSpecialNegativeTest" data-provider="getMakeMenuSpecialNonSpecialNegativeData" finished-at="2025-06-06T23:50:39Z" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[makemenuspecialnonspecial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[makemenuspecialnonspecial_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Send request with invalid menu_id to update menu status]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"9999", "user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu not found" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeMenuSpecialNonSpecialNegativeTest -->
        <test-method signature="verifyMakeMenuSpecialNonSpecial(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial@306e95ec]" started-at="2025-06-06T23:50:39Z" name="verifyMakeMenuSpecialNonSpecial" data-provider="getMakeMenuSpecialNonSpecialData" finished-at="2025-06-06T23:50:39Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[makemenuspecialnonspecial]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[makemenuspecialnonspecial_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Send request with invalid menu_id to update menu status]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"9999", "user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu not found" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in make menu special/non-special test: Status code mismatch - Expected: 404, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in make menu special/non-special test: Status code mismatch - Expected: 404, Actual: 400
	at com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial.verifyMakeMenuSpecialNonSpecial(MakeMenuSpecialNonSpecial.java:249)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMakeMenuSpecialNonSpecial -->
      </class> <!-- com.menumitratCommonAPITestScript.MakeMenuSpecialNonSpecial -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@942a29c]" started-at="2025-06-06T23:52:03Z" name="setup" finished-at="2025-06-06T23:52:03Z" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuCategoryUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@942a29c]" started-at="2025-06-06T23:52:03Z" name="createMenuCategoryUsingValidInputData" data-provider="getMenuCategoryCreateData" finished-at="2025-06-06T23:52:03Z" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"category_name":"south Indian",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": "2"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "success"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuCategoryUsingValidInputData -->
        <test-method signature="menuCategoryCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@942a29c]" started-at="2025-06-06T23:52:03Z" name="menuCategoryCreateNegativeTest" data-provider="getMenuCategoryCreateNegativeData" finished-at="2025-06-06T23:52:03Z" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet ID in the request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"",
"category_name":"south Indian",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": ""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category create negative test: JSONObject["images"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category create negative test: JSONObject["images"] not found.
	at com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript.menuCategoryCreateNegativeTest(MenuCategoryCreateTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryCreateNegativeTest -->
        <test-method signature="menuCategoryCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@942a29c]" started-at="2025-06-06T23:52:03Z" name="menuCategoryCreateNegativeTest" data-provider="getMenuCategoryCreateNegativeData" finished-at="2025-06-06T23:52:03Z" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorycreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty category name in the request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"category_name":"",
"image":"C:\Users\hp\Downloads\menus\medu vada.jpg",
"user_id": "2"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Category name is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category create negative test: JSONObject["images"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category create negative test: JSONObject["images"] not found.
	at com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript.menuCategoryCreateNegativeTest(MenuCategoryCreateTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryCreateNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript@942a29c]" started-at="2025-06-06T23:52:03Z" name="tearDown" finished-at="2025-06-06T23:52:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.TicketViewTestScript">
        <test-method is-config="true" signature="ticketViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@72e5a8e]" started-at="2025-06-06T23:51:46Z" name="ticketViewSetUp" finished-at="2025-06-06T23:51:46Z" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewSetUp -->
        <test-method signature="ticketViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@72e5a8e]" started-at="2025-06-06T23:51:46Z" name="ticketViewNegativeTest" data-provider="getTicketViewNegativeData" finished-at="2025-06-06T23:51:46Z" duration-ms="78" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Input should be a valid integer"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in ticket view negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in ticket view negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.TicketViewTestScript.ticketViewNegativeTest(TicketViewTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewNegativeTest -->
        <test-method signature="ticketViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketViewTestScript@72e5a8e]" started-at="2025-06-06T23:51:47Z" name="ticketViewTest" data-provider="getTicketViewData" finished-at="2025-06-06T23:51:52Z" duration-ms="5040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verfiy Ticket View]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id":"4"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket details of ticket ID: 2",
    "ticket": {
        "ticket_number": null,
        "title": "Issue with system",
        "description": "The system was not working.",
        "status": "wip",
        "created_on": "02 May 2025 05:40 PM",
        "user_name": "Heena",
        "user_role": "owner",
        "attachment_1": "uploads/tickets/2_1746187816_1.jpg",
        "attachment_2": "uploads/tickets/2_1746187816_2.jpg"
    },
    "chat": [
        {
            "ticket_chat_id": 2,
            "message": "Hello, How can I help you!",
            "flag": "1",
            "created_on": "02-05-2025 05:40 PM",
            "user_name": "Admin",
            "user_role": "admin"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@57cf54e1]" started-at="2025-06-06T23:50:52Z" name="setup" finished-at="2025-06-06T23:50:52Z" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@57cf54e1]" started-at="2025-06-06T23:50:52Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-06-06T23:50:52Z" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid menu_cat_id with missing or incorrect fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"",
"user_id":"2",
"category_name":"Gujrati",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method signature="menuCategoryUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@57cf54e1]" started-at="2025-06-06T23:50:52Z" name="menuCategoryUpdateNegativeTest" data-provider="getMenuCategoryUpdateNegativeData" finished-at="2025-06-06T23:50:52Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[category_name ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{

"outlet_id":"1",
"menu_cat_id":"demo",
"user_id":"",
"category_name":"",
"food_type":"veg",
"image":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Menu_cat_id must be a number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryUpdateNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript@57cf54e1]" started-at="2025-06-06T23:50:52Z" name="tearDown" finished-at="2025-06-06T23:50:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@290222c1]" started-at="2025-06-06T23:51:17Z" name="setup" finished-at="2025-06-06T23:51:17Z" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createSupplier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@290222c1]" started-at="2025-06-06T23:51:17Z" name="createSupplier" data-provider="getSupplierCreateData" finished-at="2025-06-06T23:51:17Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[suppliercreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[suppliercreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier create ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": 2,
    "app_source": "owner_app",
    "company_name": "Test Supplier",
    "address": "Test Address",
    "name": "John Doe",
    "mobile": "1234567890",
    "alternate_mobile": "0987654321",
    "GSTIN": "GSTIN123456",
    "settlement_frequency": "monthly",
    "settlement_frequency_value": 1,
    "credit_limit": 50000,
    "is_active": 1,
    "bank_details": [
        {
            "bank_name": "Test Bank",
            "account_holder_name": "John Doe",
            "account_number": "123456789",
            "IFSC_code": "BANK0001234",
            "account_type": "savings"
        }
    ],
    "upi_details": [
        {
            "upi_id": "john@upi",
            "upi_holder_name": "John Doe"
        }
    ]
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Supplier created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: JSONObject["outlet_id"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: JSONObject["outlet_id"] not found.
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.createSupplier(SupplierCreateTestScript.java:316)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSupplier -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@290222c1]" started-at="2025-06-06T23:51:17Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-06T23:51:17Z" duration-ms="89" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error on invalid mobile number in supplier data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "Supplier Invalid Mobile", "supplier_status": "", "credit_rating": "bad", "credit_limit": "50000", "location": "", "owner_name": "", "website": "", "mobile_number1": "abcd1234", "mobille_number2": "", "address": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile_number_1 must be 10 digits."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.supplierCreateNegativeTest(SupplierCreateTestScript.java:492)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@290222c1]" started-at="2025-06-06T23:51:17Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-06T23:51:17Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error when required field name is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1",
    "user_id":"2",
   "name":"",
    "supplier_status": "",
    "credit_rating": "bad",
    "credit_limit": "50000",
    "location": "",
    "   ": "",
    "website": "",
    "mobile_number1": "9076543396",
    "mobille_number2": "",
    "address": ""
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Supplier name is required."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.supplierCreateNegativeTest(SupplierCreateTestScript.java:492)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
        <test-method signature="supplierCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreateTestScript@290222c1]" started-at="2025-06-06T23:51:17Z" name="supplierCreateNegativeTest" data-provider="getSupplierNegativeData" finished-at="2025-06-06T23:51:18Z" duration-ms="90" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierCreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierCreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify error when credit_limit is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "Supplier Invalid Credit", "supplier_status": "", "credit_rating": "bad", "credit_limit": "fifty thousand", "location": "", "owner_name": "", "website": "", "mobile_number1": "9076543321", "mobille_number2": "", "address": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Credit Limit must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.SupplierCreateTestScript.supplierCreateNegativeTest(SupplierCreateTestScript.java:492)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCreateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SendQRLinkTestScript">
        <test-method is-config="true" signature="sendQRLinkSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@e15b7e8]" started-at="2025-06-06T23:50:45Z" name="sendQRLinkSetUp" finished-at="2025-06-06T23:50:45Z" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkSetUp -->
        <test-method signature="sendQRLinkNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@e15b7e8]" started-at="2025-06-06T23:50:45Z" name="sendQRLinkNegativeTest" data-provider="getSendQRLinkNegativeData" finished-at="2025-06-06T23:50:46Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sendqrlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sendqrlink_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"table_id": "82","outlet_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkNegativeTest -->
        <test-method signature="sendQRLinkNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@e15b7e8]" started-at="2025-06-06T23:50:46Z" name="sendQRLinkNegativeTest" data-provider="getSendQRLinkNegativeData" finished-at="2025-06-06T23:50:46Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sendqrlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sendqrlink_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty table_id value]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1","table_id": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide valid table_id" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkNegativeTest -->
        <test-method signature="sendQRLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SendQRLinkTestScript@e15b7e8]" started-at="2025-06-06T23:50:46Z" name="sendQRLinkTest" data-provider="getSendQRLinkData" finished-at="2025-06-06T23:50:46Z" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sendqrlink]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sendqrlink_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify send QR Link]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "table_id":"82"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "user_app_url": "https://menumitra-testing.netlify.app/user_app/",
    "outlet_code": "9001",
    "section_id": 17,
    "table_number": 77
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQRLinkTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SendQRLinkTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainViewTestScript">
        <test-method is-config="true" signature="captainViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@12aba8be]" started-at="2025-06-06T23:51:16Z" name="captainViewSetUp" finished-at="2025-06-06T23:51:16Z" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewSetUp -->
        <test-method signature="captainViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@12aba8be]" started-at="2025-06-06T23:51:16Z" name="captainViewNegativeTest" data-provider="getCaptainViewNegativeData" finished-at="2025-06-06T23:51:16Z" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing required fields in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewNegativeTest(CaptainViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewNegativeTest -->
        <test-method signature="captainViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@12aba8be]" started-at="2025-06-06T23:51:16Z" name="captainViewNegativeTest" data-provider="getCaptainViewNegativeData" finished-at="2025-06-06T23:51:17Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing 'user_id' field in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "1" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewNegativeTest(CaptainViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewNegativeTest -->
        <test-method signature="captainViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@12aba8be]" started-at="2025-06-06T23:51:17Z" name="captainViewNegativeTest" data-provider="getCaptainViewNegativeData" finished-at="2025-06-06T23:51:17Z" duration-ms="84" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing 'outlet_id' field in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "17", "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Outlet ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewNegativeTest(CaptainViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewNegativeTest -->
        <test-method signature="captainViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainViewTestScript@12aba8be]" started-at="2025-06-06T23:51:17Z" name="captainViewTest" data-provider="getCaptainViewData" finished-at="2025-06-06T23:51:17Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": "2",
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved captain details",
    "data": {
        "outlet_id": 1,
        "user_id": 11,
        "name": "ramucaptain",
        "mobile": "6936343434",
        "aadhar_number": "343332322321",
        "address": "satara",
        "dob": "12 Jan 2023",
        "email": "h@gmaom",
        "is_active": true,
        "created_by": "owner",
        "updated_by": null,
        "created_on": "02 May 2025 05:02:08 PM",
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.CaptainViewTestScript.captainViewTest(CaptainViewTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@5ba3f27a]" started-at="2025-06-06T23:50:35Z" name="setup" finished-at="2025-06-06T23:50:36Z" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tableListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@5ba3f27a]" started-at="2025-06-06T23:50:36Z" name="tableListViewNegativeTest" data-provider="getTableListViewNegativeData" finished-at="2025-06-06T23:50:36Z" duration-ms="119" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "invalid","section_id":"17","user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.TableListViewTestScript.tableListViewNegativeTest(TableListViewTestScript.java:407)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableListViewNegativeTest -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@5ba3f27a]" started-at="2025-06-06T23:50:36Z" name="verifyTableListView" data-provider="getTableListViewData" finished-at="2025-06-06T23:50:36Z" duration-ms="111" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_name": "Roof Top",
            "section_id": 17,
            "tables": [
                {
                    "table_id": 81,
                    "table_number": 76,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 82,
                    "table_number": 77,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 83,
                    "table_number": 78,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 84,
                    "table_number": 79,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 85,
                    "table_number": 80,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 124,
                    "table_number": 118,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:08:32 PM",
                    "grand_total": 3870.36,
                    "order_id": 3,
                    "order_number": "3",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "upi",
                    "is_reserved": false
                },
                {
                    "table_id": 125,
                    "table_number": 119,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 126,
                    "table_number": 120,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 127,
                    "table_number": 121,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 128,
                    "table_number": 122,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 129,
                    "table_number": 123,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 130,
                    "table_number": 124,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 131,
                    "table_number": 125,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 132,
                    "table_number": 126,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 133,
                    "table_number": 127,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        },
        {
            "section_name": "Front-Top",
            "section_id": 18,
            "tables": [
                {
                    "table_id": 86,
                    "table_number": 81,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 87,
                    "table_number": 82,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 88,
                    "table_number": 83,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 89,
                    "table_number": 84,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 90,
                    "table_number": 85,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 91,
                    "table_number": 86,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 92,
                    "table_number": 87,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 93,
                    "table_number": 88,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 94,
                    "table_number": 89,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 95,
                    "table_number": 90,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 96,
                    "table_number": 91,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 97,
                    "table_number": 92,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 98,
                    "table_number": 93,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 99,
                    "table_number": 94,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 100,
                    "table_number": 95,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 104,
                    "table_number": 98,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 105,
                    "table_number": 99,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 106,
                    "table_number": 100,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 107,
                    "table_number": 101,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 108,
                    "table_number": 102,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 109,
                    "table_number": 103,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 110,
                    "table_number": 104,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 111,
                    "table_number": 105,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 112,
                    "table_number": 106,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 113,
                    "table_number": 107,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 114,
                    "table_number": 108,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 115,
                    "table_number": 109,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 116,
                    "table_number": 110,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 117,
                    "table_number": 111,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 118,
                    "table_number": 112,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 119,
                    "table_number": 113,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 120,
                    "table_number": 114,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 121,
                    "table_number": 115,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 122,
                    "table_number": 116,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 123,
                    "table_number": 117,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        }
    ],
    "today_total_sales": 2952.28,
    "live_sales": 11611.08,
    "total_tables": 50
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.TableListViewTestScript.verifyTableListView(TableListViewTestScript.java:245)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListViewTestScript@5ba3f27a]" started-at="2025-06-06T23:50:36Z" name="verifyTableListView" data-provider="getTableListViewData" finished-at="2025-06-06T23:50:36Z" duration-ms="83" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "invalid","section_id":"17","user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.TableListViewTestScript.verifyTableListView(TableListViewTestScript.java:245)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewTemplatesTestScript">
        <test-method is-config="true" signature="viewTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@2c1b194a]" started-at="2025-06-06T23:51:03Z" name="viewTemplatesSetUp" finished-at="2025-06-06T23:51:03Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesSetUp -->
        <test-method signature="viewTemplatesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@2c1b194a]" started-at="2025-06-06T23:51:03Z" name="viewTemplatesNegativeTest" data-provider="getViewTemplatesNegativeData" finished-at="2025-06-06T23:51:04Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewtemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewtemplates_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify special character template_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesNegativeTest -->
        <test-method signature="viewTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewTemplatesTestScript@2c1b194a]" started-at="2025-06-06T23:51:04Z" name="viewTemplatesTest" data-provider="getViewTemplatesData" finished-at="2025-06-06T23:51:04Z" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewtemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewtemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify View Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierListViewTestScript">
        <test-method is-config="true" signature="supplierListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@2ea41516]" started-at="2025-06-06T23:50:55Z" name="supplierListViewSetUp" finished-at="2025-06-06T23:50:55Z" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListViewSetUp -->
        <test-method signature="supplierListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@2ea41516]" started-at="2025-06-06T23:50:55Z" name="supplierListViewNegativeTest" data-provider="getSupplierListViewNegativeData" finished-at="2025-06-06T23:50:55Z" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierlistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify response when outlet_id is invalid]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListViewNegativeTest -->
        <test-method signature="verifySupplierListViewUsingPositiveData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierListViewTestScript@2ea41516]" started-at="2025-06-06T23:50:55Z" name="verifySupplierListViewUsingPositiveData" data-provider="getSupplierListViewPositiveData" finished-at="2025-06-06T23:50:55Z" duration-ms="48" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[[
    {
        "supplier_id": 8,
        "name": "vaibhav",
        "supplier_code": "607502",
        "mobile_number1": "9837375656",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 7,
        "name": "C Supplier",
        "supplier_code": "493227",
        "mobile_number1": "9076543312",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 6,
        "name": "heena Supplier",
        "supplier_code": "949715",
        "mobile_number1": "9076543370",
        "mobile_number2": "9076543317",
        "supplier_status": true
    },
    {
        "supplier_id": 5,
        "name": "heena Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543379",
        "mobile_number2": "9076543310",
        "supplier_status": true
    },
    {
        "supplier_id": 4,
        "name": "C Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543319",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 2,
        "name": "B Supplier",
        "supplier_code": null,
        "mobile_number1": "9076543217",
        "mobile_number2": null,
        "supplier_status": true
    },
    {
        "supplier_id": 1,
        "name": "Balaji",
        "supplier_code": null,
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "supplier_status": true
    }
]]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier list view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier list view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierListViewTestScript.verifySupplierListViewUsingPositiveData(SupplierListViewTestScript.java:236)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierListViewUsingPositiveData -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterViewTestScript">
        <test-method is-config="true" signature="waiterViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6392827e]" started-at="2025-06-06T23:50:46Z" name="waiterViewSetUp" finished-at="2025-06-06T23:50:46Z" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterViewSetUp -->
        <test-method signature="verifyWaiterView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6392827e]" started-at="2025-06-06T23:50:46Z" name="verifyWaiterView" data-provider="getWaiterViewData" finished-at="2025-06-06T23:50:46Z" duration-ms="70" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
   "user_id":"15"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved waiter details",
    "data": {
        "outlet_id": 1,
        "user_id": 10,
        "name": "waitvaibhav",
        "mobile": "6146340039",
        "aadhar_number": "343332322328",
        "address": "satara",
        "dob": "12 Jan 2023",
        "email": "h@gmail",
        "is_active": true,
        "created_by": "owner",
        "updated_by": "owner",
        "created_on": "02 May 2025 04:36:09 PM",
        "updated_on": "02 May 2025 04:47:49 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.WaiterViewTestScript.verifyWaiterView(WaiterViewTestScript.java:229)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWaiterView -->
        <test-method signature="waiterViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6392827e]" started-at="2025-06-06T23:50:47Z" name="waiterViewNegativeTest" data-provider="getWaiterViewNegativeData" finished-at="2025-06-06T23:50:47Z" duration-ms="54" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1" ,"user_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterViewTestScript.waiterViewNegativeTest(WaiterViewTestScript.java:401)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterViewNegativeTest -->
        <test-method signature="waiterViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterViewTestScript@6392827e]" started-at="2025-06-06T23:50:47Z" name="waiterViewNegativeTest" data-provider="getWaiterViewNegativeData" finished-at="2025-06-06T23:50:47Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user_id with invalid data type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterViewTestScript.waiterViewNegativeTest(WaiterViewTestScript.java:401)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterViewNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@52b1beb6]" started-at="2025-06-06T23:51:52Z" name="setup" finished-at="2025-06-06T23:51:53Z" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@52b1beb6]" started-at="2025-06-06T23:51:53Z" name="deleteInventory" data-provider="getInventoryDeleteData" finished-at="2025-06-06T23:51:53Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Inventory Delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
   "inventory_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Inventory item deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryDeleteTestScript.deleteInventory(InventoryDeleteTestScript.java:252)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventory -->
        <test-method signature="deleteInventoryNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@52b1beb6]" started-at="2025-06-06T23:51:53Z" name="deleteInventoryNegative" data-provider="getInventoryDeleteNegativeData" finished-at="2025-06-06T23:51:53Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify inventory deletion fails with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "user_id": "2", "inventory_id": "3" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventoryNegative -->
        <test-method signature="deleteInventoryNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryDeleteTestScript@52b1beb6]" started-at="2025-06-06T23:51:53Z" name="deleteInventoryNegative" data-provider="getInventoryDeleteNegativeData" finished-at="2025-06-06T23:51:53Z" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryDelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryDelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify inventory deletion fails with missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "inventory_id": "3","user_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "user_id is required." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInventoryNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryDeleteTestScript -->
      <class name="com.menumitra.superclass.APIBase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.menumitra.superclass.APIBase@7bd4937b]" started-at="2025-06-06T23:50:30Z" name="setUp" finished-at="2025-06-06T23:50:30Z" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitra.superclass.APIBase@7bd4937b]" started-at="2025-06-06T23:52:05Z" name="tearDown" finished-at="2025-06-06T23:52:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitra.superclass.APIBase -->
      <class name="com.menumitratCommonAPITestScript.MenuUpdate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@bae7dc0]" started-at="2025-06-06T23:50:41Z" name="setup" finished-at="2025-06-06T23:50:41Z" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="menuUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@bae7dc0]" started-at="2025-06-06T23:50:41Z" name="menuUpdateNegativeTest" data-provider="getMenuUpdateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuupdate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify menu update fails when menu_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "3", "user_id": "2", "name": "Anda Biryani", "food_type": "veg", "description": "this healthy food", "spicy_index": "2", "portion_data": [{ "portion_name": "Half", "price": 100, "unit": "250g" }], "ingredients": "dal,vegetables", "offer": "40", "rating": "5.0", "cgst": "5", "sgst": "10", "images": [], "existing_image_ids": [],"menu_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Menu_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuUpdateNegativeTest -->
        <test-method signature="menuUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@bae7dc0]" started-at="2025-06-06T23:50:41Z" name="menuUpdateNegativeTest" data-provider="getMenuUpdateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify menu update fails when portion price is not number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_id": "18", "menu_cat_id": "3", "user_id": "2", "name": "Anda Biryani", "food_type": "veg", "description": "this healthy food", "spicy_index": "2", "portion_data": [{ "portion_name": "Half", "price": "one hundred", "unit": "250g" }], "ingredients": "dal,vegetables", "offer": "40", "rating": "5.0", "cgst": "5", "sgst": "10", "images": [], "existing_image_ids": [] }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Price must be a valid number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu update negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu update negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.MenuUpdate.menuUpdateNegativeTest(MenuUpdate.java:547)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuUpdateNegativeTest -->
        <test-method signature="menuUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@bae7dc0]" started-at="2025-06-06T23:50:41Z" name="menuUpdateNegativeTest" data-provider="getMenuUpdateNegativeData" finished-at="2025-06-06T23:50:41Z" duration-ms="68" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuupdate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify menu update fails with rating out of range]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_id": "18", "menu_cat_id": "3", "user_id": "2", "name": "Anda Biryani", "food_type": "veg", "description": "this healthy food", "spicy_index": "2", "portion_data": [{ "portion_name": "Half", "price": 100, "unit": "250g" }], "ingredients": "dal,vegetables", "offer": "40", "rating": "6.5", "cgst": "5", "sgst": "10", "images": [], "existing_image_ids": [] }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please select a valid Rating"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu update negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu update negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.MenuUpdate.menuUpdateNegativeTest(MenuUpdate.java:547)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuUpdateNegativeTest -->
        <test-method signature="updateMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuUpdate@bae7dc0]" started-at="2025-06-06T23:50:41Z" name="updateMenu" data-provider="getMenuUpdateData" finished-at="2025-06-06T23:50:42Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "menu_id": "18",
  "menu_cat_id": "3",
  "user_id": "2",
  "name": "Anda Biryani",
  "food_type": "veg",
  "description": "this healthy food",
  "spicy_index": "2",
  "portion_data": [
    {
      "portion_name": "Half",
      "price": 100,
      "unit": "250g"
    },
    {
      "portion_name": "Full",
      "price": 180,
      "unit": "500g"
    }
  ],
  "ingredients": "dal,vegetables",
  "offer": "40",
  "rating": "5.0",
  "cgst": "5",
  "sgst": "10",
  "images": [
    "C:\\\\Users\\\\hp\\\\Downloads\\\\menus\\\\Bhajaniche-Thalipeeth-Marathi-Recipe.jpg",
    "C:\\\\Users\\\\hp\\\\Downloads\\\\menus\\\\Bhajaniche-Thalipeeth-Marathi-Recipe.jpg"
  ],
  "existing_image_ids": [
    917,
    918
  ]
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu updated successfully",
    "data": {
        "menu_id": 18
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Menu update failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Menu update failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuUpdate.updateMenu(MenuUpdate.java:289)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuUpdate -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript">
        <test-method is-config="true" signature="menuCategoryListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@272113c4]" started-at="2025-06-06T23:51:55Z" name="menuCategoryListViewSetUp" finished-at="2025-06-06T23:51:55Z" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListViewSetUp -->
        <test-method signature="menuCategoryListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@272113c4]" started-at="2025-06-06T23:51:55Z" name="menuCategoryListViewNegativeTest" data-provider="getMenuCategoryListViewNegativeData" finished-at="2025-06-06T23:51:55Z" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorylistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript.menuCategoryListViewNegativeTest(MenuCategoryListViewTestScript.java:366)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListViewNegativeTest -->
        <test-method signature="verifyMenuCategoryListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript@272113c4]" started-at="2025-06-06T23:51:55Z" name="verifyMenuCategoryListView" data-provider="getMenuCategoryListViewData" finished-at="2025-06-06T23:51:55Z" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category list view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category list view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript.verifyMenuCategoryListView(MenuCategoryListViewTestScript.java:256)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuListView">
        <test-method is-config="true" signature="menuListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:06Z" name="menuListViewSetUp" finished-at="2025-06-06T23:51:07Z" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewSetUp -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:07Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-06T23:51:07Z" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for special character in outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:07Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-06T23:51:07Z" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for empty outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:07Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-06T23:51:07Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for numeric-only string outlet_id not matching any real ID]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "9999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID is incorrect"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="menuListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:07Z" name="menuListViewNegativeTest" data-provider="getMenuListViewNegativeData" finished-at="2025-06-06T23:51:07Z" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error for non-numeric outlet_id when numeric expected]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListViewNegativeTest -->
        <test-method signature="verifyMenuListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuListView@21282ed8]" started-at="2025-06-06T23:51:07Z" name="verifyMenuListView" data-provider="getMenuListViewData" finished-at="2025-06-06T23:51:07Z" duration-ms="44" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menulistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menulistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu list view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu list view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuListView.verifyMenuListView(MenuListView.java:238)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuListView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuListView -->
      <class name="com.menumitratCommonAPITestScript.JoinTablesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@31fa1761]" started-at="2025-06-06T23:51:02Z" name="setup" finished-at="2025-06-06T23:51:02Z" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="joinTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@31fa1761]" started-at="2025-06-06T23:51:02Z" name="joinTables" data-provider="getJoinTablesData" finished-at="2025-06-06T23:51:02Z" duration-ms="56" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointables_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify join tables]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": 17,
    "primary_table_id": 83,
    "tables_to_join": [83,84],
    "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.JoinTablesTestScript.joinTables(JoinTablesTestScript.java:243)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTables -->
        <test-method signature="joinTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@31fa1761]" started-at="2025-06-06T23:51:02Z" name="joinTablesNegativeTest" data-provider="getJoinTablesNegativeData" finished-at="2025-06-06T23:51:02Z" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointtables_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "section_id": "17", "primary_table_id": "83", "tables_to_join": [83,84], "user_id": "2","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Please provide outlet_id" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in join tables negative test: For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in join tables negative test: For input string: ""
	at com.menumitratCommonAPITestScript.JoinTablesTestScript.joinTablesNegativeTest(JoinTablesTestScript.java:425)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTablesNegativeTest -->
        <test-method signature="joinTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.JoinTablesTestScript@31fa1761]" started-at="2025-06-06T23:51:02Z" name="joinTablesNegativeTest" data-provider="getJoinTablesNegativeData" finished-at="2025-06-06T23:51:02Z" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[jointables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jointtables_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "primary_table_id": "83", "tables_to_join": [83,84], "user_id": "2" ,"section_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Please provide section_id" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in join tables negative test: For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in join tables negative test: For input string: ""
	at com.menumitratCommonAPITestScript.JoinTablesTestScript.joinTablesNegativeTest(JoinTablesTestScript.java:425)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTablesNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.JoinTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryViewTestScript">
        <test-method is-config="true" signature="inventoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@783a467b]" started-at="2025-06-06T23:51:54Z" name="inventoryViewSetUp" finished-at="2025-06-06T23:51:54Z" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryViewSetUp -->
        <test-method signature="verifyInventoryView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryViewTestScript@783a467b]" started-at="2025-06-06T23:51:54Z" name="verifyInventoryView" data-provider="getInventoryViewData" finished-at="2025-06-06T23:51:55Z" duration-ms="66" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "inventory_id":"7"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "inventory_id": 2,
    "supplier_id": 1,
    "outlet_id": 1,
    "name": "Fish",
    "description": "Fresh Roma fish",
    "category_id": 1,
    "category": "Seafood",
    "unit_price": "None",
    "quantity": 100,
    "unit_of_measure": "kg",
    "reorder_level": null,
    "expiration_date": "30 Dec 2024",
    "brand_name": "",
    "tax_rate": "0.00",
    "in_or_out": "in",
    "in_date": "23 Dec 2024",
    "out_date": null,
    "supplier_name": "Balaji",
    "created_by": "owner",
    "created_on": "30 Apr 2025 04:50:07 PM",
    "updated_by": null,
    "updated_on": null
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryViewTestScript.verifyInventoryView(InventoryViewTestScript.java:232)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryView -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetOutletListTestScript">
        <test-method is-config="true" signature="getOutletListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@4dbb42b7]" started-at="2025-06-06T23:51:04Z" name="getOutletListSetUp" finished-at="2025-06-06T23:51:04Z" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListSetUp -->
        <test-method signature="getOutletListNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@4dbb42b7]" started-at="2025-06-06T23:51:04Z" name="getOutletListNegativeTest" data-provider="getOutletListNegativeData" finished-at="2025-06-06T23:51:04Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetOutletList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GetOutletList_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "owner_id": "@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "owner_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListNegativeTest -->
        <test-method signature="getOutletListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetOutletListTestScript@4dbb42b7]" started-at="2025-06-06T23:51:04Z" name="getOutletListTest" data-provider="getOutletListData" finished-at="2025-06-06T23:51:04Z" duration-ms="72" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetOutletList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GetOutletList_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Get Outlet List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "owner_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet list fetched successfully",
    "outlets": [
        {
            "outlet_id": 1,
            "name": "Khana Khajana Hotel",
            "address": "satara, maharashtra",
            "is_open": true,
            "outlet_status": true
        },
        {
            "outlet_id": 2,
            "name": "spicy world",
            "address": "456 Second Street, City",
            "is_open": true,
            "outlet_status": true
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get outlet list test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get outlet list test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetOutletListTestScript.getOutletListTest(GetOutletListTestScript.java:219)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOutletListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetOutletListTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetRatingList">
        <test-method is-config="true" signature="getRatingListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@5b03b9fe]" started-at="2025-06-06T23:50:52Z" name="getRatingListSetUp" finished-at="2025-06-06T23:50:53Z" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRatingListSetUp -->
        <test-method signature="verifyRatingList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetRatingList@5b03b9fe]" started-at="2025-06-06T23:50:53Z" name="verifyRatingList" data-provider="getRatingListData" finished-at="2025-06-06T23:50:53Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ratinglist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ratinglist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Rating list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRatingList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetRatingList -->
      <class name="com.menumitratCommonAPITestScript.sectionListViewTestScript">
        <test-method is-config="true" signature="sectionListViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@32502377]" started-at="2025-06-06T23:51:03Z" name="sectionListViewSetup" finished-at="2025-06-06T23:51:03Z" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionListViewSetup -->
        <test-method signature="sectionListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@32502377]" started-at="2025-06-06T23:51:03Z" name="sectionListViewNegativeTest" data-provider="getSectionListViewNegativeData" finished-at="2025-06-06T23:51:03Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid format but non-existent outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"999"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"The outlet ID provided does not exist in our system. Please check and try again with a valid outlet ID"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionListViewNegativeTest -->
        <test-method signature="sectionListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@32502377]" started-at="2025-06-06T23:51:03Z" name="sectionListViewNegativeTest" data-provider="getSectionListViewNegativeData" finished-at="2025-06-06T23:51:03Z" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid format but special character outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"@"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet id accept only numbers"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in section list view negative test: JSONObject["outlet_id"] is not a int (class java.lang.String : @).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in section list view negative test: JSONObject["outlet_id"] is not a int (class java.lang.String : @).
	at com.menumitratCommonAPITestScript.sectionListViewTestScript.sectionListViewNegativeTest(sectionListViewTestScript.java:452)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionListViewNegativeTest -->
        <test-method signature="verifySectionListViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionListViewTestScript@32502377]" started-at="2025-06-06T23:51:03Z" name="verifySectionListViewUsingValidInputData" data-provider="getSectionListViewPositiveInputData" finished-at="2025-06-06T23:51:03Z" duration-ms="50" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_id": 16,
            "section_name": "Family",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 17,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 18,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 19,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        },
        {
            "section_id": 20,
            "section_name": "Front-Top",
            "table_count": 5,
            "occupied_table_count": 0,
            "remaining_table_count": 5
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[An error occurred during section list view verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: An error occurred during section list view verification
	at com.menumitratCommonAPITestScript.sectionListViewTestScript.verifySectionListViewUsingValidInputData(sectionListViewTestScript.java:266)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionListViewUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetAllMenuListByCategory">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@b9b00e0]" started-at="2025-06-06T23:51:44Z" name="setup" finished-at="2025-06-06T23:51:44Z" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllMenuListByCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@b9b00e0]" started-at="2025-06-06T23:51:44Z" name="getAllMenuListByCategory" data-provider="getAllMenuListByCategoryData" finished-at="2025-06-06T23:51:44Z" duration-ms="79" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getallmenulistbycategory]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getallmenulistbycategory_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get All Menu List by Category]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "category": [
            {
                "menu_cat_id": 3,
                "category_name": "Rice",
                "menu_count": 8
            }
        ],
        "menus": [
            {
                "menu_id": 7,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 180,
                "rating": "5.0",
                "offer": 40,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/f0c9f8d73a10482aa52887c679b0e29a.jpg"
            },
            {
                "menu_id": 8,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 180,
                "rating": "5.0",
                "offer": 40,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/d718ca725ac24bd8bd85fc9e50210fac.jpg"
            },
            {
                "menu_id": 9,
                "menu_name": "Chicken Biryani",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 250,
                "rating": "4.5",
                "offer": 10,
                "is_special": true,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 10,
                "menu_name": "Chicken Biryani@434",
                "menu_food_type": "nonveg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 250,
                "rating": "4.5",
                "offer": 10,
                "is_special": true,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 11,
                "menu_name": "Veg Biryani",
                "menu_food_type": "",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": "2",
                "price": 200,
                "rating": "3.0",
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 12,
                "menu_name": "Fried Rice",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            },
            {
                "menu_id": 13,
                "menu_name": "Jeera Rice",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": "http://men4u.xyz/media/Images/a8ed0d10297243699ded209ba90d302f.jpg"
            },
            {
                "menu_id": 14,
                "menu_name": "Lemon Ricee",
                "menu_food_type": "veg",
                "outlet_id": 1,
                "menu_cat_id": 3,
                "category_name": "Rice",
                "spicy_index": null,
                "price": 180,
                "rating": null,
                "offer": null,
                "is_special": false,
                "is_active": true,
                "image": null
            }
        ]
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetAllMenuListByCategory.getAllMenuListByCategory(GetAllMenuListByCategory.java:254)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMenuListByCategory -->
        <test-method signature="getAllMenuListByCategoryNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAllMenuListByCategory@b9b00e0]" started-at="2025-06-06T23:51:44Z" name="getAllMenuListByCategoryNegativeTest" data-provider="getGetAllMenuListByCategoryNegativeData" finished-at="2025-06-06T23:51:44Z" duration-ms="84" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getallmenulistbycategory]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getallmenulistbycategory_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns an error for invalid outlet_id "@"]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must contain only digits"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in getAllMenuListByCategory negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getAllMenuListByCategory negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.GetAllMenuListByCategory.getAllMenuListByCategoryNegativeTest(GetAllMenuListByCategory.java:420)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMenuListByCategoryNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAllMenuListByCategory -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryCreate">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@13fd2ccd]" started-at="2025-06-06T23:51:43Z" name="setup" finished-at="2025-06-06T23:51:43Z" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventoryCategory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@13fd2ccd]" started-at="2025-06-06T23:51:44Z" name="createInventoryCategory" data-provider="getInventoryCategoryCreateData" finished-at="2025-06-06T23:51:44Z" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "name":"Raw material",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"success":"Inventory Category Created Successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryCategoryCreate.createInventoryCategory(InventoryCategoryCreate.java:290)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventoryCategory -->
        <test-method signature="createInventoryCategoryNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryCreate@13fd2ccd]" started-at="2025-06-06T23:51:44Z" name="createInventoryCategoryNegative" data-provider="getInventoryCategoryCreateNegativeData" finished-at="2025-06-06T23:51:44Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorycreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify API handles missing name in request body]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2" ,"name":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "error": "Field 'name' is required." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 400, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 400, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryCategoryCreate.createInventoryCategoryNegative(InventoryCategoryCreate.java:428)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventoryCategoryNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryCreate -->
      <class name="com.menumitratCommonAPITestScript.OwnerDetailsTestScript">
        <test-method is-config="true" signature="ownerDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@55634720]" started-at="2025-06-06T23:51:36Z" name="ownerDetailsSetUp" finished-at="2025-06-06T23:51:37Z" duration-ms="552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsSetUp -->
        <test-method signature="ownerDetailsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@55634720]" started-at="2025-06-06T23:51:37Z" name="ownerDetailsNegativeTest" data-provider="getOwnerDetailsNegativeData" finished-at="2025-06-06T23:51:37Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ownerdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ownerdetails_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify empty user id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsNegativeTest -->
        <test-method signature="ownerDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OwnerDetailsTestScript@55634720]" started-at="2025-06-06T23:51:37Z" name="ownerDetailsTest" data-provider="getOwnerDetailsData" finished-at="2025-06-06T23:51:37Z" duration-ms="119" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ownerdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ownerdetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Owner Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in owner details test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in owner details test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.OwnerDetailsTestScript.ownerDetailsTest(OwnerDetailsTestScript.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ownerDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OwnerDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffDeleteTestScript">
        <test-method is-config="true" signature="staffDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@4b0d79fc]" started-at="2025-06-06T23:51:37Z" name="staffDeleteSetUp" finished-at="2025-06-06T23:51:37Z" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffDeleteSetUp -->
        <test-method signature="staffDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffDeleteTestScript@4b0d79fc]" started-at="2025-06-06T23:51:37Z" name="staffDeleteNegativeTest" data-provider="getStaffDeleteNegativeData" finished-at="2025-06-06T23:51:38Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffdelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid staff ID for deletion]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id":2, "outlet_id":1,"staff_id":999}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "staff_id is incorrect or staff does not belong to this outlet" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffDeleteNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@67f639d3]" started-at="2025-06-06T23:51:18Z" name="setup" finished-at="2025-06-06T23:51:18Z" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createQRTemplatesUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@67f639d3]" started-at="2025-06-06T23:51:18Z" name="createQRTemplatesUsingValidInputData" data-provider="getCreateQRTemplatesData" finished-at="2025-06-06T23:51:18Z" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[createqrtemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createqrtemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Create QR Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ {
        "name": "Classic",
        "qr_overlay_position": "centre",
        "image": "C:\Users\hp\Downloads\tiffany-longeway-NVe0G08Oa4o-unsplash.jpg"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createQRTemplatesUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript@67f639d3]" started-at="2025-06-06T23:51:18Z" name="tearDown" finished-at="2025-06-06T23:51:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateQRTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.ResendOTPTestScript">
        <test-method is-config="true" signature="setupResendOTP()[pri:0, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:45Z" name="setupResendOTP" finished-at="2025-06-06T23:51:45Z" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupResendOTP -->
        <test-method signature="verifyRessendOTPUSingPositiveInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="verifyRessendOTPUSingPositiveInputData" data-provider="getPositiveinputData" finished-at="2025-06-06T23:51:46Z" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid mobile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"6264335759"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"role":"owner"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRessendOTPUSingPositiveInputData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-06T23:51:46Z" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide mobile number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-06T23:51:46Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"abc123"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-06T23:51:46Z" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mobile less than 10 digits]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"12345"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-06T23:51:46Z" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mobile with special chars]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"mobile":"98765@#123"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
        <test-method signature="resendOTPusingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.ResendOTPTestScript@7d4f9aae]" started-at="2025-06-06T23:51:46Z" name="resendOTPusingInvalidData" data-provider="getNegativeResendOPTData" finished-at="2025-06-06T23:51:46Z" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resendotp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[resendotp_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify 1 to 5 first digit]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"1264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must start with digits 6, 7, 8, or 9"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resendOTPusingInvalidData -->
      </class> <!-- com.menumitratCommonAPITestScript.ResendOTPTestScript -->
      <class name="com.menumitratCommonAPITestScript.UdhariCreateTestScript">
        <test-method is-config="true" signature="udhariCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UdhariCreateTestScript@21e360a]" started-at="2025-06-06T23:50:30Z" name="udhariCreateSetUp" finished-at="2025-06-06T23:50:35Z" duration-ms="4393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- udhariCreateSetUp -->
        <test-method signature="testCreateUdhariLedger(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UdhariCreateTestScript@21e360a]" started-at="2025-06-06T23:50:35Z" name="testCreateUdhariLedger" data-provider="getUdhariCreateData" finished-at="2025-06-06T23:50:35Z" duration-ms="124" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[udharicreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[udharicreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":2,
    "customer_name": "Test Hotel",
    "customer_mobile": "9876543210",
    "customer_address": "123 Main Street, City",
    "order_id": 3521,
    "bill_amount": 137.31,
    "estimated_settlement_period": "1 week"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
  "detail": "Udhari ledger entry created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in Create Udhari Ledger Test: Error creating test order: Failed to create test order. Status: 400, Response: {"detail":"Invalid action"}]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in Create Udhari Ledger Test: Error creating test order: Failed to create test order. Status: 400, Response: {"detail":"Invalid action"}
	at com.menumitratCommonAPITestScript.UdhariCreateTestScript.testCreateUdhariLedger(UdhariCreateTestScript.java:283)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUdhariLedger -->
      </class> <!-- com.menumitratCommonAPITestScript.UdhariCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SearchMenu">
        <test-method is-config="true" signature="searchMenuSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@434a63ab]" started-at="2025-06-06T23:50:53Z" name="searchMenuSetUp" finished-at="2025-06-06T23:50:53Z" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMenuSetUp -->
        <test-method signature="searchMenuNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@434a63ab]" started-at="2025-06-06T23:50:53Z" name="searchMenuNegativeTest" data-provider="getSearchMenuNegativeData" finished-at="2025-06-06T23:50:53Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[searchmenu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[searchmenu_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify behavior when invalid keyword is searched]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "keyword": "Invalid Biryani" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in search menu negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in search menu negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.SearchMenu.searchMenuNegativeTest(SearchMenu.java:465)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMenuNegativeTest -->
        <test-method signature="verifySearchMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SearchMenu@434a63ab]" started-at="2025-06-06T23:50:54Z" name="verifySearchMenu" data-provider="getSearchMenuData" finished-at="2025-06-06T23:50:54Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[searchmenu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[searchmenu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify search menu]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "keyword":"Anda Biryani"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "menu_list": [
        {
            "menu_id": 18,
            "menu_name": "Anda Biryani",
            "menu_food_type": "veg",
            "outlet_id": 1,
            "outlet_veg_nonveg": "veg",
            "menu_cat_id": 3,
            "category_name": "Rice",
            "spicy_index": "2",
            "price": 180,
            "rating": "5.0",
            "offer": 40,
            "is_special": false,
            "image": "http://men4u.xyz/media/Images/4e8e71420d0d48ebbd1252fe465fa2a9.jpg",
            "is_favourite": 0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in search menu test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in search menu test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.SearchMenu.verifySearchMenu(SearchMenu.java:262)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchMenu -->
      </class> <!-- com.menumitratCommonAPITestScript.SearchMenu -->
      <class name="com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@5a56cdac]" started-at="2025-06-06T23:50:51Z" name="setup" finished-at="2025-06-06T23:50:51Z" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierCreditRatingChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript@5a56cdac]" started-at="2025-06-06T23:50:52Z" name="testSupplierCreditRatingChoices" data-provider="getSupplierCreditRatingChoicesData" finished-at="2025-06-06T23:50:52Z" duration-ms="49" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[suppliercreditratinchoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[suppliercreditratinchoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier credit ratin choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "credit_rating_choices": {
        "excellent": "excellent",
        "good": "good",
        "bad": "bad",
        "very_bad": "very_bad",
        "not_rated": "not_rated"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during supplier credit rating choices test execution: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during supplier credit rating choices test execution: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript.testSupplierCreditRatingChoices(SupplierCreditRatingChoicesTestScript.java:219)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierCreditRatingChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierCreditRatingChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.OutletSettingsViewTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@1de76cc7]" started-at="2025-06-06T23:50:50Z" name="setup" finished-at="2025-06-06T23:50:50Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="outletSettingsView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@1de76cc7]" started-at="2025-06-06T23:50:50Z" name="outletSettingsView" data-provider="getOutletSettingsViewData" finished-at="2025-06-06T23:50:50Z" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outletsettingsview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outletsettingsview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Outlet Settings view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletSettingsView -->
        <test-method signature="outletSettingsViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletSettingsViewTestScript@1de76cc7]" started-at="2025-06-06T23:50:50Z" name="outletSettingsViewNegativeTest" data-provider="getOutletSettingsViewNegativeData" finished-at="2025-06-06T23:50:50Z" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outletsettingsview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outletsettingsview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"&"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletSettingsViewNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletSettingsViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetSpicyIndexList">
        <test-method is-config="true" signature="getSpicyIndexListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@4efac082]" started-at="2025-06-06T23:51:41Z" name="getSpicyIndexListSetUp" finished-at="2025-06-06T23:51:41Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpicyIndexListSetUp -->
        <test-method signature="verifySpicyIndexList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSpicyIndexList@4efac082]" started-at="2025-06-06T23:51:41Z" name="verifySpicyIndexList" data-provider="getSpicyIndexListData" finished-at="2025-06-06T23:51:41Z" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getspicyindexlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getspicyindexlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Spicy Index list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpicyIndexList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSpicyIndexList -->
      <class name="com.menumitratCommonAPITestScript.MenuView">
        <test-method is-config="true" signature="menuViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@23c30a20]" started-at="2025-06-06T23:51:09Z" name="menuViewSetUp" finished-at="2025-06-06T23:51:09Z" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewSetUp -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@23c30a20]" started-at="2025-06-06T23:51:09Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-06T23:51:09Z" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when invalid outlet_id is provided]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@", "menu_id": "18" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@23c30a20]" started-at="2025-06-06T23:51:09Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-06T23:51:09Z" duration-ms="77" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when invalid menu_id is provided]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_id": "#" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"menu_id must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuView.menuViewNegativeTest(MenuView.java:412)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="menuViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@23c30a20]" started-at="2025-06-06T23:51:09Z" name="menuViewNegativeTest" data-provider="getMenuViewNegativeData" finished-at="2025-06-06T23:51:09Z" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "menu_id": "18","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuViewNegativeTest -->
        <test-method signature="verifyMenuView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuView@23c30a20]" started-at="2025-06-06T23:51:09Z" name="verifyMenuView" data-provider="getMenuViewData" finished-at="2025-06-06T23:51:09Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menuview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menuview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "menu_id": "18"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuView.verifyMenuView(MenuView.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuView -->
      <class name="com.menumitratCommonAPITestScript.ViewProfileTestScript">
        <test-method is-config="true" signature="viewProfileSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@29215f06]" started-at="2025-06-06T23:51:40Z" name="viewProfileSetUp" finished-at="2025-06-06T23:51:40Z" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfileSetUp -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@29215f06]" started-at="2025-06-06T23:51:40Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-06-06T23:51:40Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view profile test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view profile test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ViewProfileTestScript.verifyViewProfile(ViewProfileTestScript.java:259)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
        <test-method signature="verifyViewProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@29215f06]" started-at="2025-06-06T23:51:40Z" name="verifyViewProfile" data-provider="getViewProfileData" finished-at="2025-06-06T23:51:40Z" duration-ms="64" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view profile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "user_details": {
            "user_id": 3,
            "name": "Komal",
            "role": "Manager",
            "dob": "06 Oct 1990",
            "email": "koom@gmail.com",
            "mobile_number": "6260035759",
            "aadhar_number": "856932014785",
            "last_login": null,
            "created_on": "26 Apr 2025 09:14:56 AM",
            "updated_on": "01 May 2025 03:55:25 PM",
            "created_by": null,
            "updated_by": "Owner"
        },
        "user_active_sessions": []
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view profile test: For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view profile test: For input string: ""
	at com.menumitratCommonAPITestScript.ViewProfileTestScript.verifyViewProfile(ViewProfileTestScript.java:259)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProfile -->
        <test-method signature="viewProfileNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@29215f06]" started-at="2025-06-06T23:51:40Z" name="viewProfileNegativeTest" data-provider="getViewProfileNegativeData" finished-at="2025-06-06T23:51:40Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid user_id (non-existing user)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "9999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID does not exist."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfileNegativeTest -->
        <test-method signature="viewProfileNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewProfileTestScript@29215f06]" started-at="2025-06-06T23:51:40Z" name="viewProfileNegativeTest" data-provider="getViewProfileNegativeData" finished-at="2025-06-06T23:51:40Z" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewprofile]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewprofile_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid user_id format (string instead of int)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfileNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewProfileTestScript -->
      <class name="com.menumitratCommonAPITestScript.loginTestScript">
        <test-method is-config="true" signature="LoginAPiTestSetup()[pri:0, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="LoginAPiTestSetup" finished-at="2025-06-06T23:50:57Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPiTestSetup -->
        <test-method signature="verifyloginUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyloginUsingValidInputData" data-provider="getPositiveInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid login]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"6264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Your OTP is sent successfully.",
    "role": "owner"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Login verification failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Login verification failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.loginTestScript.verifyloginUsingValidInputData(loginTestScript.java:256)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyloginUsingValidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using empty test data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide mobile number"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="43" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using less than ten digit test data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"626433575"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"626433@ 59"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"6264Af35759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="47" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  Not register number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"9745635634"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
 
    "details": "This mobile number is not registered."
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Negative test case login_006 failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Negative test case login_006 failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.loginTestScript.verifyLoginUsingInvalidInputData(loginTestScript.java:327)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid login using  combination of all character and special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"Adbt@#4Gh7"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must contain only digits"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
        <test-method signature="verifyLoginUsingInvalidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.loginTestScript@f0da945]" started-at="2025-06-06T23:50:57Z" name="verifyLoginUsingInvalidInputData" data-provider="getNegativeInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[login_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify 1 to 5 first digit]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
 "mobile":"1264335759"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Mobile number must start with digits 6, 7, 8, or 9"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUsingInvalidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.loginTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@1151e434]" started-at="2025-06-06T23:51:34Z" name="setup" finished-at="2025-06-06T23:51:34Z" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSupplierStatusChoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript@1151e434]" started-at="2025-06-06T23:51:35Z" name="testSupplierStatusChoices" data-provider="getSupplierStatusChoicesData" finished-at="2025-06-06T23:51:35Z" duration-ms="52" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierstatuschoices]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierstatuschoices_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier status choices]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "supplier_status_choices": {
        "active": "active",
        "inactive": "inactive"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during supplier status choices test execution: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during supplier status choices test execution: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript.testSupplierStatusChoices(SupplierStatusChoicesTestScript.java:231)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierStatusChoices -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierStatusChoicesTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryListViewTestScript">
        <test-method is-config="true" signature="inventoryListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@71a8adcf]" started-at="2025-06-06T23:51:19Z" name="inventoryListSetUp" finished-at="2025-06-06T23:51:19Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryListSetUp -->
        <test-method signature="inventoryListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@71a8adcf]" started-at="2025-06-06T23:51:20Z" name="inventoryListViewNegativeTest" data-provider="getInventoryListViewNegativeData" finished-at="2025-06-06T23:51:20Z" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorylistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inventoryListViewNegativeTest -->
        <test-method signature="verifyInventoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryListViewTestScript@71a8adcf]" started-at="2025-06-06T23:51:20Z" name="verifyInventoryList" data-provider="getInventoryListData" finished-at="2025-06-06T23:51:20Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory list view ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "items": [
        {
            "inventory_id": 5,
            "name": "Paplet",
            "quantity": 100,
            "unit_of_measure": "kg",
            "brand_name": "",
            "in_or_out": "in"
        },
        {
            "inventory_id": 4,
            "name": "Tomatoes",
            "quantity": 100,
            "unit_of_measure": "kg",
            "brand_name": "FreshFarms",
            "in_or_out": "in"
        },
        {
            "inventory_id": 3,
            "name": "Fish",
            "quantity": 100,
            "unit_of_measure": "kg",
            "brand_name": "",
            "in_or_out": "in"
        },
        {
            "inventory_id": 1,
            "name": "Fish",
            "quantity": 100,
            "unit_of_measure": "kg",
            "brand_name": "FreshFarms",
            "in_or_out": "in"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory list test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory list test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryListViewTestScript.verifyInventoryList(InventoryListViewTestScript.java:243)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInventoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplatesListTestScript">
        <test-method is-config="true" signature="getTemplatesListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@729d991e]" started-at="2025-06-06T23:51:01Z" name="getTemplatesListSetUp" finished-at="2025-06-06T23:51:01Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesListSetUp -->
        <test-method signature="verifyTemplatesList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplatesListTestScript@729d991e]" started-at="2025-06-06T23:51:02Z" name="verifyTemplatesList" data-provider="getTemplatesListData" finished-at="2025-06-06T23:51:02Z" duration-ms="44" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettemplateslist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettemplateslist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Template List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in templates list test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in templates list test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.GetTemplatesListTestScript.verifyTemplatesList(GetTemplatesListTestScript.java:253)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplatesList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplatesListTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategorysTestScript">
        <test-method is-config="true" signature="menuCategorysSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@4c1909a3]" started-at="2025-06-06T23:51:38Z" name="menuCategorysSetUp" finished-at="2025-06-06T23:51:38Z" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategorysSetUp -->
        <test-method signature="menuCategoriesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@4c1909a3]" started-at="2025-06-06T23:51:38Z" name="menuCategoriesNegativeTest" data-provider="getMenuCategoriesNegativeData" finished-at="2025-06-06T23:51:38Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting menu categories negative test data: No valid menu categories negative test data found after filtering
	at com.menumitratCommonAPITestScript.MenuCategorysTestScript.getMenuCategoriesNegativeData(MenuCategorysTestScript.java:296)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoriesNegativeTest -->
        <test-method signature="verifyMenuCategorys(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategorysTestScript@4c1909a3]" started-at="2025-06-06T23:51:38Z" name="verifyMenuCategorys" data-provider="getMenuCategorysData" finished-at="2025-06-06T23:51:38Z" duration-ms="60" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorys]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorys_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu categorys]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "categorys_list": {
        "indian": 2,
        "Italian": 4
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu categorys test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu categorys test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuCategorysTestScript.verifyMenuCategorys(MenuCategorysTestScript.java:256)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategorys -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategorysTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateTableTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:50:59Z" name="setup" finished-at="2025-06-06T23:51:00Z" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateTableNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="updateTableNegativeTest" data-provider="getUpdateTableNegativeData" finished-at="2025-06-06T23:51:00Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[update_table_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing "table_number" field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "new_table_number": "78", "section_id": "17", "outlet_id": "1", "order_id": "6", "user_id": "2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide table number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableNegativeTest -->
        <test-method signature="updateTableNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="updateTableNegativeTest" data-provider="getUpdateTableNegativeData" finished-at="2025-06-06T23:51:00Z" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[update_table_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing "new_table_number" field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "table_number": "76", "section_id": "17", "outlet_id": "1", "order_id": "6", "user_id": "2","new_table_number":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide new table number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableNegativeTest -->
        <test-method signature="updateTableNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="updateTableNegativeTest" data-provider="getUpdateTableNegativeData" finished-at="2025-06-06T23:51:00Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[update_table_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing "section_id" field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "table_number": "77", "new_table_number": "78", "outlet_id": "1", "order_id": "6", "user_id": "2","section_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide section ID"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableNegativeTest -->
        <test-method signature="updateTableNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="updateTableNegativeTest" data-provider="getUpdateTableNegativeData" finished-at="2025-06-06T23:51:00Z" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[update_table_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing "outlet_id" field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "table_number": "76", "new_table_number": "78", "section_id": "17", "order_id": "6", "user_id": "2","outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide outlet_id" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableNegativeTest -->
        <test-method signature="updateTableUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="updateTableUsingValidInputData" data-provider="getUpdateTableData" finished-at="2025-06-06T23:51:00Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatetable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatetable_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Table]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    
    "table_number": "77",
    "new_table_number": "78",
    "section_id": "17",
    "outlet_id": "1",
    "order_id": "6",
    "user_id": "2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during update table test execution: Table update failed with status code: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during update table test execution: Table update failed with status code: 400
	at com.menumitratCommonAPITestScript.UpdateTableTestScript.updateTableUsingValidInputData(UpdateTableTestScript.java:206)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTableUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateTableTestScript@316bcf94]" started-at="2025-06-06T23:51:00Z" name="tearDown" finished-at="2025-06-06T23:51:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateTableTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainCreateTestScript">
        <test-method is-config="true" signature="captainCreateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:58Z" name="captainCreateSetUp" finished-at="2025-06-06T23:50:58Z" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateSetUp -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "user_id": "2", "name": "captain Raj", "mobile": "6936344567", "address": "", "aadhar_number": "343332322321","dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"outlet_id": "1", "user_id": "", "name": "captain Raj", "mobile": "6936344567", "address": "", "aadhar_number": "343332322321", "dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing name]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "", "mobile": "6936344567", "address": "", "aadhar_number": "343332322321", "dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Name is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "captain Raj", "mobile": "", "address": "", "aadhar_number": "343332322321", "dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="58" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile format (less digits)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{"outlet_id": "1", "user_id": "2", "name": "captain Raj", "mobile": "12345", "address": "", "aadhar_number": "343332322321","dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile number must be a 10 digits number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing aadhar_number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "captain Raj","mobile": "6936344567", "address": "", "aadhar_number": "", "dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Aadhar number is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "captain Raj", "mobile": "6936344567", "address": "","aadhar_number": "343332322321", "dob": "", "email": "invalid-email"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "The email format is incorrect."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateNegativeTest" data-provider="getCaptainCreateNegativeData" finished-at="2025-06-06T23:50:59Z" duration-ms="56" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[All required fields empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "user_id": "", "name": "", "mobile": "", "address": "", "aadhar_number": "", "dob": "", "email": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateNegativeTest(CaptainCreateTestScript.java:418)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateNegativeTest -->
        <test-method signature="captainCreateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainCreateTestScript@53ce1329]" started-at="2025-06-06T23:50:59Z" name="captainCreateTest" data-provider="getCaptainCreateData" finished-at="2025-06-06T23:50:59Z" duration-ms="98" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaincreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaincreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "outlet_id":"1",
 "user_id":"2",
 "name":"captain Raj",
 "mobile":"6936344567",
 "address":"",
 "aadhar_number":"343332322321",
 "dob":"",
 "email":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Captain created successfully",
    "data": {
        "captain_id": 12,
        "name": "captain A"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain create test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain create test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.CaptainCreateTestScript.captainCreateTest(CaptainCreateTestScript.java:229)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainCreateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.orderListViewSetUp">
        <test-method is-config="true" signature="orderListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@209da20d]" started-at="2025-06-06T23:50:42Z" name="orderListViewSetUp" finished-at="2025-06-06T23:50:42Z" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewSetUp -->
        <test-method signature="orderListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@209da20d]" started-at="2025-06-06T23:50:42Z" name="orderListViewNegativeTest" data-provider="getOrderListViewNegativeData" finished-at="2025-06-06T23:50:42Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"", "order_status":"cooking" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewNegativeTest -->
        <test-method signature="orderListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@209da20d]" started-at="2025-06-06T23:50:42Z" name="orderListViewNegativeTest" data-provider="getOrderListViewNegativeData" finished-at="2025-06-06T23:50:42Z" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet_id (non-numeric)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"abc", "order_status":"cooking" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewNegativeTest -->
        <test-method signature="orderListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.orderListViewSetUp@209da20d]" started-at="2025-06-06T23:50:42Z" name="orderListViewTest" data-provider="getOrderListViewData" finished-at="2025-06-06T23:50:45Z" duration-ms="3076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orderlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[orderlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Order order list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
           
    "outlet_id":"1",
    "order_status":"cooking"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "success",
    "lists": {
        "22 Dec 2024": [
            {
                "order_id": 6,
                "order_number": "782877",
                "order_status": "paid",
                "table_number": "1",
                "order_type": "dine-in",
                "payment_method": null,
                "restaurant_id": 1,
                "restaurant_name": "jagadamb",
                "total_bill_amount": 500.0,
                "total_bill_with_discount": 350.0,
                "service_charges_percent": 1.0,
                "service_charges_amount": 3.5,
                "gst_percent": 1.0,
                "gst_amount": 3.5,
                "discount_percent": 30.0,
                "discount_amount": 150.0,
                "grand_total": 357.0,
                "menu_count": 1,
                 "time": "04:33:21 PM",
                "section_name": "Dinning"
            },a]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.orderListViewSetUp -->
      <class name="com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@3e11f9e9]" started-at="2025-06-06T23:51:00Z" name="setup" finished-at="2025-06-06T23:51:01Z" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkIfTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@3e11f9e9]" started-at="2025-06-06T23:51:01Z" name="checkIfTableIsReserved" data-provider="getCheckTableIsReservedData" finished-at="2025-06-06T23:51:01Z" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checktableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checktableisreserved_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify check Table Reserved]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "table_id":81,
    "table_number":"76"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "table_id": 81,
    "table_number": 76,
    "is_reserved": true
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfTableIsReserved -->
        <test-method signature="checkTableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@3e11f9e9]" started-at="2025-06-06T23:51:01Z" name="checkTableIsReservedNegativeTest" data-provider="getCheckTableIsReservedNegativeData" finished-at="2025-06-06T23:51:01Z" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checktableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checktableisreserved_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "table_id": 81, "table_number": "76" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide outlet_id" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTableIsReservedNegativeTest -->
        <test-method signature="checkTableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript@3e11f9e9]" started-at="2025-06-06T23:51:01Z" name="checkTableIsReservedNegativeTest" data-provider="getCheckTableIsReservedNegativeData" finished-at="2025-06-06T23:51:01Z" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checktableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checktableisreserved_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing table_number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "table_id": 81, "table_number": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide table_number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTableIsReservedNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckTableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableIsReservedTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@27f981c6]" started-at="2025-06-06T23:51:33Z" name="setup" finished-at="2025-06-06T23:51:33Z" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="setTableIsReserved(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@27f981c6]" started-at="2025-06-06T23:51:33Z" name="setTableIsReserved" data-provider="getTableIsReservedData" finished-at="2025-06-06T23:51:33Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Table is Reserved]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":81,
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"2",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "table_id": 81,
    "table_number": 76,
    "is_reserved": true,
    "detail": "Table reservation status updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTableIsReserved -->
        <test-method signature="tableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@27f981c6]" started-at="2025-06-06T23:51:33Z" name="tableIsReservedNegativeTest" data-provider="getTableIsReservedNegativeData" finished-at="2025-06-06T23:51:33Z" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing table_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":"",
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"2",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "table_id is required" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table is reserved negative test: JSONObject["table_id"] is not a int (class java.lang.String : ).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table is reserved negative test: JSONObject["table_id"] is not a int (class java.lang.String : ).
	at com.menumitratCommonAPITestScript.TableIsReservedTestScript.tableIsReservedNegativeTest(TableIsReservedTestScript.java:375)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableIsReservedNegativeTest -->
        <test-method signature="tableIsReservedNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableIsReservedTestScript@27f981c6]" started-at="2025-06-06T23:51:33Z" name="tableIsReservedNegativeTest" data-provider="getTableIsReservedNegativeData" finished-at="2025-06-06T23:51:33Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableisreserved]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableisreserved_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "table_id":"81",
    "table_number":"76",
    "outlet_id":"1",
    "user_id":"",
    "is_reserved":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "user_id is required" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableIsReservedNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TableIsReservedTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInventoryCategoryList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@485966cc]" started-at="2025-06-06T23:50:49Z" name="setup" finished-at="2025-06-06T23:50:50Z" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInventoryCategoryList@485966cc]" started-at="2025-06-06T23:50:50Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListData" finished-at="2025-06-06T23:50:50Z" duration-ms="80" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getinventorycategorylist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getinventorycategorylist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Inventory Category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Success",
    "categories": [
        {
            "inventory_category_id": 1,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 2,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 3,
            "name": "water"
        },
        {
            "inventory_category_id": 4,
            "name": "Farm"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.GetInventoryCategoryList.getInventoryCategoryList(GetInventoryCategoryList.java:242)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInventoryCategoryList -->
      <class name="com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript">
        <test-method is-config="true" signature="orderMenuDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@2d710f1a]" started-at="2025-06-06T23:51:39Z" name="orderMenuDetailsSetUp" finished-at="2025-06-06T23:51:39Z" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderMenuDetailsSetUp -->
        <test-method signature="verifyOrderMenuDetails(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript@2d710f1a]" started-at="2025-06-06T23:51:39Z" name="verifyOrderMenuDetails" data-provider="getOrderMenuDetailsData" finished-at="2025-06-06T23:51:40Z" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ordermenudetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ordermenudetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Order Menu Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderMenuDetails -->
      </class> <!-- com.menumitratCommonAPITestScript.OrderMenuDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.SupplierDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@242b836]" started-at="2025-06-06T23:51:57Z" name="setup" finished-at="2025-06-06T23:51:57Z" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="supplierDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@242b836]" started-at="2025-06-06T23:51:57Z" name="supplierDeleteNegativeTest" data-provider="getSupplierDeleteNegativeData" finished-at="2025-06-06T23:51:57Z" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error when supplier_id is invalid]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "supplier_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"supplier_id must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierDeleteNegativeTest -->
        <test-method signature="supplierDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@242b836]" started-at="2025-06-06T23:51:57Z" name="supplierDeleteNegativeTest" data-provider="getSupplierDeleteNegativeData" finished-at="2025-06-06T23:51:57Z" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API returns error when user_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "supplier_id": "4" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier not found."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierDeleteNegativeTest -->
        <test-method signature="testSupplierDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SupplierDeleteTestScript@242b836]" started-at="2025-06-06T23:51:58Z" name="testSupplierDelete" data-provider="getSupplierDeleteData" finished-at="2025-06-06T23:51:58Z" duration-ms="69" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier delete ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "user_id":"2",
    "supplier_id":"4"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier deleted successfully."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during supplier deletion test execution: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during supplier deletion test execution: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.SupplierDeleteTestScript.testSupplierDelete(SupplierDeleteTestScript.java:237)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSupplierDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.SupplierDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuDelete">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@2dc54ad4]" started-at="2025-06-06T23:51:35Z" name="setup" finished-at="2025-06-06T23:51:35Z" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteMenu(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@2dc54ad4]" started-at="2025-06-06T23:51:35Z" name="deleteMenu" data-provider="getMenuDeleteData" finished-at="2025-06-06T23:51:35Z" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_id":"19",
    "user_id":"2"
}
  ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuDelete.deleteMenu(MenuDelete.java:253)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteMenu -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@2dc54ad4]" started-at="2025-06-06T23:51:35Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-06T23:51:35Z" duration-ms="100" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with missing menu_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "user_id":"2" ,"menu_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide menu_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu delete negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu delete negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuDelete.menuDeleteNegativeTest(MenuDelete.java:425)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@2dc54ad4]" started-at="2025-06-06T23:51:35Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-06T23:51:35Z" duration-ms="76" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with invalid user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"38", "user_id":"abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Invalid user_id" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu delete negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu delete negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuDelete.menuDeleteNegativeTest(MenuDelete.java:425)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
        <test-method signature="menuDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuDelete@2dc54ad4]" started-at="2025-06-06T23:51:35Z" name="menuDeleteNegativeTest" data-provider="getMenuDeleteNegativeData" finished-at="2025-06-06T23:51:35Z" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menudelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menudelete_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu deletion with non-existent menu_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_id":"9999", "user_id":"2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Menu ID does not exist"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuDeleteNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuDelete -->
      <class name="com.menumitratCommonAPITestScript.ChefUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:31Z" name="setup" finished-at="2025-06-06T23:51:31Z" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing name field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "2", "user_id": "18", "name": "", "mobile": "8600000098", "address": "", "aadhar_number": "123456789012", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Name is required."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "2", "user_id": "18", "name": "chef bhau", "mobile": "", "address": "", "aadhar_number": "123456789012", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Mobile is required."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid Aadhar number (too short)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "2", "user_id": "18", "name": "chef bhau", "mobile": "8600000098", "address": "", "aadhar_number": "1234", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Aadhar number must be 12 digits.."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "", "user_id": "18", "name": "chef bhau", "mobile": "8600000098", "address": "", "aadhar_number": "123456789012", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="78" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[All required fields empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "", "outlet_id": "", "user_id": "", "name": "", "mobile": "", "address": "", "aadhar_number": "", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefUpdateTestScript.chefUpdateNegativeTest(ChefUpdateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="chefUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="chefUpdateNegativeTest" data-provider="getChefUpdateNegativeData" finished-at="2025-06-06T23:51:32Z" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "2", "user_id": "18", "name": "chef bhau", "mobile": "8600000098", "address": "", "aadhar_number": "123456789012", "dob": "", "email": "invalid-email" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "The email format is incorrect."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefUpdateNegativeTest -->
        <test-method signature="updateChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefUpdateTestScript@47d9a273]" started-at="2025-06-06T23:51:32Z" name="updateChef" data-provider="getChefUpdateData" finished-at="2025-06-06T23:51:32Z" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   "update_user_id":"2",
    "outlet_id": "2",
    "user_id": "18",
    "name": "chef bhau",
    "mobile":"8600000098",
    "address" : "",
    "aadhar_number": "123456789012",
    "dob":"",
    "email":""       }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chef updated successfully",
    "data": {
        "chef_id": 14,
        "name": "chef bhau",
        "mobile": "8600000007"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ListViewOutletTestScript">
        <test-method is-config="true" signature="listViewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@4b8ee4de]" started-at="2025-06-06T23:51:32Z" name="listViewOutletSetUp" finished-at="2025-06-06T23:51:33Z" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listViewOutletSetUp -->
        <test-method signature="verifyListViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ListViewOutletTestScript@4b8ee4de]" started-at="2025-06-06T23:51:33Z" name="verifyListViewOutlet" data-provider="getListViewOutletData" finished-at="2025-06-06T23:51:33Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getListViewOutletData: No valid list view outlet test data found after filtering
	at com.menumitratCommonAPITestScript.ListViewOutletTestScript.getListViewOutletData(ListViewOutletTestScript.java:188)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListViewOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.ListViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetInorOutList">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@437da279]" started-at="2025-06-06T23:51:08Z" name="setup" finished-at="2025-06-06T23:51:08Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInOrOutList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetInorOutList@437da279]" started-at="2025-06-06T23:51:09Z" name="testInOrOutList" data-provider="getInOrOutListData" finished-at="2025-06-06T23:51:09Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getinoroutlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getinoroutlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Int or Out list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInOrOutList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetInorOutList -->
      <class name="com.menumitratCommonAPITestScript.ChangeSettingsTestScript">
        <test-method is-config="true" signature="changeSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@54a7079e]" started-at="2025-06-06T23:51:30Z" name="changeSettingsSetUp" finished-at="2025-06-06T23:51:30Z" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsSetUp -->
        <test-method signature="changeSettingsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@54a7079e]" started-at="2025-06-06T23:51:30Z" name="changeSettingsNegativeTest" data-provider="getChangeSettingsNegativeData" finished-at="2025-06-06T23:51:30Z" duration-ms="69" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_002 ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id              ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"", "user_id":"2", "type":"settle", "value":true }                 ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide outlet_id" }      ]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in change settings negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in change settings negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.ChangeSettingsTestScript.changeSettingsNegativeTest(ChangeSettingsTestScript.java:403)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsNegativeTest -->
        <test-method signature="changeSettingsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@54a7079e]" started-at="2025-06-06T23:51:30Z" name="changeSettingsNegativeTest" data-provider="getChangeSettingsNegativeData" finished-at="2025-06-06T23:51:30Z" duration-ms="17" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_003 ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing value field            ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "user_id":"2", "type":"settle", "value":"" }                    ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide value for setting" } ]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in change settings negative test: JSONObject["value"] is not a Boolean (class java.lang.String : ).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in change settings negative test: JSONObject["value"] is not a Boolean (class java.lang.String : ).
	at com.menumitratCommonAPITestScript.ChangeSettingsTestScript.changeSettingsNegativeTest(ChangeSettingsTestScript.java:403)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsNegativeTest -->
        <test-method signature="changeSettingsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@54a7079e]" started-at="2025-06-06T23:51:30Z" name="changeSettingsNegativeTest" data-provider="getChangeSettingsNegativeData" finished-at="2025-06-06T23:51:30Z" duration-ms="75" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_004 ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid value type ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "user_id":"2", "type":"settle", "value":"true" }                 ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Invalid value format. Expected boolean." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in change settings negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in change settings negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.ChangeSettingsTestScript.changeSettingsNegativeTest(ChangeSettingsTestScript.java:403)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsNegativeTest -->
        <test-method signature="changeSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChangeSettingsTestScript@54a7079e]" started-at="2025-06-06T23:51:30Z" name="changeSettingsTest" data-provider="getChangeSettingsData" finished-at="2025-06-06T23:51:31Z" duration-ms="84" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[changesettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[changesettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify changes settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",
    "type":"settle",
    "value":true
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Settings updated successfully",
    "data": {
        "style": "blue",
        "has_dine_in": true,
        "has_parcel": true,
        "has_drive_through": false,
        "has_counter": true,
        "has_delivery": true,
        "print_and_save": true,
        "KOT_and_save": true,
        "settle": false,
        "reserve_table": true,
        "cancel": true,
        "POS_show_menu_image": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in change settings test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in change settings test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ChangeSettingsTestScript.changeSettingsTest(ChangeSettingsTestScript.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChangeSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@d9345cd]" started-at="2025-06-06T23:51:39Z" name="setup" finished-at="2025-06-06T23:51:39Z" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="deleteWaiter(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterDeleteTestScript@d9345cd]" started-at="2025-06-06T23:51:39Z" name="deleteWaiter" data-provider="getWaiterDeleteData" finished-at="2025-06-06T23:51:39Z" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterdelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterdelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "outlet_id":"1",
    "user_id":"19"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "(pymysql.err.IntegrityError) (1048, \"Column 'user_id' cannot be null\")\n[SQL: UPDATE user_settings SET user_id=%(user_id)s WHERE user_settings.user_settings_id = %(user_settings_user_settings_id)s]\n[parameters: {'user_id': None, 'user_settings_user_settings_id': 2}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWaiter -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.AddMenusToOrder">
        <test-method is-config="true" signature="addMenusToOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@1b11171f]" started-at="2025-06-06T23:51:33Z" name="addMenusToOrderSetUp" finished-at="2025-06-06T23:51:34Z" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMenusToOrderSetUp -->
        <test-method signature="addMenusToOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@1b11171f]" started-at="2025-06-06T23:51:34Z" name="addMenusToOrderNegativeTest" data-provider="getAddMenusToOrderNegativeData" finished-at="2025-06-06T23:51:34Z" duration-ms="80" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[addmenustoorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[addmenustoorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Add Menus to Order when menu_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "order_id": "5", "outlet_id": "1", "order_items": [ { "quantity": "10", "portion_name": "Full", "comment": "add spice" } ] }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide order_items"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in add menus to order negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in add menus to order negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.AddMenusToOrder.addMenusToOrderNegativeTest(AddMenusToOrder.java:446)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMenusToOrderNegativeTest -->
        <test-method signature="addMenusToOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@1b11171f]" started-at="2025-06-06T23:51:34Z" name="addMenusToOrderNegativeTest" data-provider="getAddMenusToOrderNegativeData" finished-at="2025-06-06T23:51:34Z" duration-ms="81" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[addmenustoorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[addmenustoorder_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Add Menus to Order with invalid order_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "order_id": "999", "outlet_id": "1","order_items":[
        {
            "menu_id":"13",
            "quantity":"10",
            "portion_name": "Full",
            "comment":"add spice"

        }
    ] }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide order_items"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in add menus to order negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in add menus to order negative test: JSONObject["detail"] is not a string (class org.json.JSONObject).
	at com.menumitratCommonAPITestScript.AddMenusToOrder.addMenusToOrderNegativeTest(AddMenusToOrder.java:446)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMenusToOrderNegativeTest -->
        <test-method signature="verifyAddMenusToOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.AddMenusToOrder@1b11171f]" started-at="2025-06-06T23:51:34Z" name="verifyAddMenusToOrder" data-provider="getAddMenusToOrderData" finished-at="2025-06-06T23:51:34Z" duration-ms="92" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[addmenustoorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[addmenustoorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Add Menus to order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "order_items":[
        {
            "menu_id":"13",
            "quantity":"10",
            "portion_name": "Full",
            "comment":"add spice"

        }
    ]
 
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 5,
        "order_number": "5",
        "table_number": [
            "77"
        ],
        "order_status": "cooking",
        "menu_count": 2,
        "total_bill_amount": 6300.0,
        "total_bill_with_discount": 6300.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 63.0,
        "gst_percent": 1.0,
        "gst_amount": 63.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 6426.0,
        "datetime": "03-May-2025 04:15:00 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "comment": "Extra spicy please",
            "menu_sub_total": 4500.0,
            "portion_name": "Full",
            "unit": "500g"
        },
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 10,
            "offer": 0,
            "comment": "add spice",
            "menu_sub_total": 1800.0,
            "portion_name": "Full",
            "unit": "500g"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in add menus to order test: Status code mismatch - Expected: 200, Actual: 500]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in add menus to order test: Status code mismatch - Expected: 200, Actual: 500
	at com.menumitratCommonAPITestScript.AddMenusToOrder.verifyAddMenusToOrder(AddMenusToOrder.java:276)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddMenusToOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.AddMenusToOrder -->
      <class name="com.menumitratCommonAPITestScript.CreateTicketTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:38Z" name="setup" finished-at="2025-06-06T23:51:38Z" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createTicketNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:38Z" name="createTicketNegative" data-provider="getCreateTicketNegativeData" finished-at="2025-06-06T23:51:38Z" duration-ms="101" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "1", "title": "Issue with system", "description": "The system was not working.", "status": "open", "attachment_1": "", "attachment_2": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ ""detail"": ""User ID is required."" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 400, Actual: 200]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 400, Actual: 200
	at com.menumitratCommonAPITestScript.CreateTicketTestScript.createTicketNegative(CreateTicketTestScript.java:373)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketNegative -->
        <test-method signature="createTicketNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:38Z" name="createTicketNegative" data-provider="getCreateTicketNegativeData" finished-at="2025-06-06T23:51:38Z" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing title]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["{ ""user_id"": ""2"", ""outlet_id"": ""1"", ""title"": """", ""description"": "The system was not working.", "status": "open", "attachment_1": "", "attachment_2": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ ""detail"": ""Title is required."" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.CreateTicketTestScript.createTicketNegative(CreateTicketTestScript.java:373)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketNegative -->
        <test-method signature="createTicketNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:38Z" name="createTicketNegative" data-provider="getCreateTicketNegativeData" finished-at="2025-06-06T23:51:38Z" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing description]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA["{ ""user_id"": ""2"", ""outlet_id"": ""1"", ""title"": ""Issue with system"", ""description"": """", ""status"": ""open"", ""attachment_1"": """", ""attachment_2"": """" }"]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ ""detail"": ""Description is required."" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.CreateTicketTestScript.createTicketNegative(CreateTicketTestScript.java:373)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketNegative -->
        <test-method signature="createTicketUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:39Z" name="createTicketUsingValidInputData" data-provider="getCreateTicketData" finished-at="2025-06-06T23:51:39Z" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[createticket]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[createticket_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify create Ticket]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id": "2",
    "outlet_id": "1",
    "title": "Issue with system",
    "description": "The system was not working.",
    "status": "open",
    "attachment_1" : "",
    "attachment_2" :""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket created successfully.",
    "ticket_id": 3
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTicketUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.CreateTicketTestScript@428640fa]" started-at="2025-06-06T23:51:39Z" name="tearDown" finished-at="2025-06-06T23:51:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.CreateTicketTestScript -->
      <class name="com.menumitratCommonAPITestScript.ContinueChatTestScript">
        <test-method is-config="true" signature="continueChatSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@27462a88]" started-at="2025-06-06T23:51:20Z" name="continueChatSetUp" finished-at="2025-06-06T23:51:20Z" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatSetUp -->
        <test-method signature="continueChatTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ContinueChatTestScript@27462a88]" started-at="2025-06-06T23:51:20Z" name="continueChatTest" data-provider="getContinueChatData" finished-at="2025-06-06T23:51:20Z" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[continuechat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[continuechat_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify continue chat]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "ticket_id": "4",
    "user_id": "2",
    "message": "I need an update on my issue.",
    "flag": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chat message added successfully",
    "ticket_chat_id": 5
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- continueChatTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ContinueChatTestScript -->
      <class name="com.menumitratCommonAPITestScript.DeleteTemplatesTestScript">
        <test-method is-config="true" signature="deleteTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@82de64a]" started-at="2025-06-06T23:51:20Z" name="deleteTemplatesSetUp" finished-at="2025-06-06T23:51:20Z" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesSetUp -->
        <test-method signature="deleteTemplatesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@82de64a]" started-at="2025-06-06T23:51:20Z" name="deleteTemplatesNegativeTest" data-provider="getDeleteTemplatesNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[deletetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[deletetemplates_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Delete Templates using special character and character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"&A"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesNegativeTest -->
        <test-method signature="deleteTemplatesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DeleteTemplatesTestScript@82de64a]" started-at="2025-06-06T23:51:21Z" name="deleteTemplatesTest" data-provider="getDeleteTemplatesData" finished-at="2025-06-06T23:51:21Z" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[deletetemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[deletetemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Delete Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "template_id":"3"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTemplatesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DeleteTemplatesTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@6253c26]" started-at="2025-06-06T23:51:18Z" name="setup" finished-at="2025-06-06T23:51:18Z" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="selectTemplateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@6253c26]" started-at="2025-06-06T23:51:18Z" name="selectTemplateNegativeTest" data-provider="getSelectTemplateNegativeData" finished-at="2025-06-06T23:51:18Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[selecttemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[selecttemplate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify  template_id using invalid template id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17",
    "template_id":"1001"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"QR template not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTemplateNegativeTest -->
        <test-method signature="selectTemplateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@6253c26]" started-at="2025-06-06T23:51:18Z" name="selectTemplateUsingValidInputData" data-provider="getSelectTemplateData" finished-at="2025-06-06T23:51:19Z" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[selecttemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[selecttemplate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify select template]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17",
    "template_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTemplateUsingValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.SelectTemplateTestScript@6253c26]" started-at="2025-06-06T23:51:19Z" name="tearDown" finished-at="2025-06-06T23:51:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTemplates">
        <test-method is-config="true" signature="getTemplatesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@5a45133e]" started-at="2025-06-06T23:52:04Z" name="getTemplatesSetUp" finished-at="2025-06-06T23:52:04Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTemplatesSetUp -->
        <test-method signature="verifyTemplates(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTemplates@5a45133e]" started-at="2025-06-06T23:52:04Z" name="verifyTemplates" data-provider="getTemplatesData" finished-at="2025-06-06T23:52:04Z" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getTemplates]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getTemplates_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Templates]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTemplates -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTemplates -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript">
        <test-method is-config="true" signature="menuCategoryDeleteSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@7bab3f1a]" started-at="2025-06-06T23:51:08Z" name="menuCategoryDeleteSetUp" finished-at="2025-06-06T23:51:08Z" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryDeleteSetUp -->
        <test-method signature="menuCategoryListDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@7bab3f1a]" started-at="2025-06-06T23:51:08Z" name="menuCategoryListDeleteNegativeTest" data-provider="getMenuCategoryListDeleteNegativeData" finished-at="2025-06-06T23:51:08Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "menu_cat_id": "4", "user_id": "2", "outlet_id":"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListDeleteNegativeTest -->
        <test-method signature="menuCategoryListDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@7bab3f1a]" started-at="2025-06-06T23:51:08Z" name="menuCategoryListDeleteNegativeTest" data-provider="getMenuCategoryListDeleteNegativeData" finished-at="2025-06-06T23:51:08Z" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid menu_cat_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "", "user_id": "2" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["detail":"Please provide menu_cat_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category list delete negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category list delete negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript.menuCategoryListDeleteNegativeTest(MenuCategoryDeleteTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryListDeleteNegativeTest -->
        <test-method signature="verifyMenuCategoryDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript@7bab3f1a]" started-at="2025-06-06T23:51:08Z" name="verifyMenuCategoryDelete" data-provider="getMenuCategoryDeleteData" finished-at="2025-06-06T23:51:08Z" duration-ms="72" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategorydelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategorydelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"4",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Category deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category delete test: Status code mismatch - Expected: 404, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category delete test: Status code mismatch - Expected: 404, Actual: 400
	at com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript.verifyMenuCategoryDelete(MenuCategoryDeleteTestScript.java:262)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript">
        <test-method is-config="true" signature="updateProfileDetailSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailSetUp" finished-at="2025-06-06T23:51:21Z" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailSetUp -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="76" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing required fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "", "user_id": "", "name": "", "email": "invalid_email_format", "mobile_number": "abc123", "dob": "32-13-2020", "aadhar_number": "123" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Validation failed", "errors": { "update_user_id": "Update user ID is required", "user_id": "User ID is required", "name": "Name cannot be blank", "email": "Invalid email format", "mobile_number": "Invalid mobile number", "dob": "Invalid date of birth", "aadhar_number": "Aadhar number must be 12 digits" } }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "user_id": "3", "name": "Vaibhav", "email": "ssoo@com", "mobile_number": "6260035759", "dob": "06 oct 1990", "aadhar_number": "856932014785" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Invalid email format" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="52" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mobile number with characters]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "user_id": "3", "name": "Vaibhav", "email": "ssoo@gmail.com", "mobile_number": "abc123", "dob": "06 oct 1990", "aadhar_number": "856932014785" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Invalid mobile number" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="64" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Date of birth in invalid format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "user_id": "3", "name": "Vaibhav", "email": "ssoo@gmail.com", "mobile_number": "6260035759", "dob": "1990-31-12", "aadhar_number": "856932014785" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Invalid date of birth format" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:21Z" duration-ms="69" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Aadhar number with less than 12 digits]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "user_id": "3", "name": "Vaibhav", "email": "ssoo@gmail.com", "mobile_number": "6260035759", "dob": "06 oct 1990", "aadhar_number": "12345" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Aadhar number must be 12 digits" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="updateProfileDetailNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:21Z" name="updateProfileDetailNegativeTest" data-provider="getUpdateProfileDetailNegativeData" finished-at="2025-06-06T23:51:22Z" duration-ms="70" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Future date of birth]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "user_id": "3", "name": "Vaibhav", "email": "ssoo@gmail.com", "mobile_number": "6260035759", "dob": "06 oct 2035", "aadhar_number": "856932014785" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "message": "Date of birth cannot be in the future" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.updateProfileDetailNegativeTest(UpdateProfileDetailTestScript.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfileDetailNegativeTest -->
        <test-method signature="verifyUpdateProfileDetail(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript@659499f1]" started-at="2025-06-06T23:51:22Z" name="verifyUpdateProfileDetail" data-provider="getUpdateProfileDetailData" finished-at="2025-06-06T23:51:22Z" duration-ms="55" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateprofiledetail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateprofiledetail_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update Profile Details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "update_user_id":"2",
    "user_id": "3",  
    "name": "Vaibhav",  
    "email": "ssoo@gmail.com",  
    "mobile_number": "6260035759",  
    "dob": "06 oct 1990",
    "aadhar_number":"856932014785"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Profile updated successfully",
    "user_id": 3,
    "name": "komal",
    "email": "ssoo@gmail.com",
    "mobile": "6260035759",
    "dob": "06 Oct 1990",
    "aadhar_number": "856932014785"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update profile detail test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update profile detail test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript.verifyUpdateProfileDetail(UpdateProfileDetailTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateProfileDetail -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateProfileDetailTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateMenuQuantity">
        <test-method is-config="true" signature="updateMenuQuantitySetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@3cebbb30]" started-at="2025-06-06T23:51:15Z" name="updateMenuQuantitySetUp" finished-at="2025-06-06T23:51:16Z" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantitySetUp -->
        <test-method signature="updateMenuQuantityNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@3cebbb30]" started-at="2025-06-06T23:51:16Z" name="updateMenuQuantityNegativeTest" data-provider="getUpdateMenuQuantityNegativeData" finished-at="2025-06-06T23:51:16Z" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity using incorrect order_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "10101",
    "outlet_id":"1",
    "quantity":"3",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Order not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantityNegativeTest -->
        <test-method signature="updateMenuQuantityNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@3cebbb30]" started-at="2025-06-06T23:51:16Z" name="updateMenuQuantityNegativeTest" data-provider="getUpdateMenuQuantityNegativeData" finished-at="2025-06-06T23:51:16Z" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity using incorrect quantity]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "10101",
    "outlet_id":"1",
    "quantity":"39",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Quantity cannot be more than 20."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMenuQuantityNegativeTest -->
        <test-method signature="verifyUpdateMenuQuantity(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateMenuQuantity@3cebbb30]" started-at="2025-06-06T23:51:16Z" name="verifyUpdateMenuQuantity" data-provider="getUpdateMenuQuantityData" finished-at="2025-06-06T23:51:16Z" duration-ms="74" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatemenuquantity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatemenuquantity_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update menu quantity]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id": "5",
    "outlet_id":"1",
    "quantity":"3",
    "menu_id":"13",
    "user_id":"2"
   
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "order_details": {
        "order_id": 2,
        "order_number": "2",
        "table_number": [
            "76"
        ],
        "order_status": "cooking",
        "menu_count": 1,
        "total_bill_amount": 4500.0,
        "total_bill_with_discount": 4500.0,
        "service_charges_percent": 1.0,
        "service_charges_amount": 45.0,
        "gst_percent": 1.0,
        "gst_amount": 45.0,
        "discount_percent": 0.0,
        "discount_amount": 0.0,
        "grand_total": 4590.0,
        "datetime": "02-May-2025 01:11:58 PM"
    },
    "menu_details": [
        {
            "menu_id": 13,
            "menu_name": "Jeera Rice",
            "price": 180.0,
            "quantity": 25,
            "offer": 0,
            "menu_sub_total": 4500.0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update menu quantity test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update menu quantity test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateMenuQuantity.verifyUpdateMenuQuantity(UpdateMenuQuantity.java:261)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateMenuQuantity -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateMenuQuantity -->
      <class name="com.menumitratCommonAPITestScript.GetAvailableTablesTestScript">
        <test-method is-config="true" signature="getAvailableTablesSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@2d52216b]" started-at="2025-06-06T23:51:56Z" name="getAvailableTablesSetUp" finished-at="2025-06-06T23:51:56Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesSetUp -->
        <test-method signature="getAvailableTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@2d52216b]" started-at="2025-06-06T23:51:57Z" name="getAvailableTablesNegativeTest" data-provider="getAvailableTablesNegativeData" finished-at="2025-06-06T23:51:57Z" duration-ms="85" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid request with missing fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "section_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide section_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get available tables negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get available tables negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.GetAvailableTablesTestScript.getAvailableTablesNegativeTest(GetAvailableTablesTestScript.java:396)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesNegativeTest -->
        <test-method signature="getAvailableTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@2d52216b]" started-at="2025-06-06T23:51:57Z" name="getAvailableTablesNegativeTest" data-provider="getAvailableTablesNegativeData" finished-at="2025-06-06T23:51:57Z" duration-ms="67" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid request with missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "1", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Please provide user_id" }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get available tables negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get available tables negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.GetAvailableTablesTestScript.getAvailableTablesNegativeTest(GetAvailableTablesTestScript.java:396)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesNegativeTest -->
        <test-method signature="getAvailableTablesNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@2d52216b]" started-at="2025-06-06T23:51:57Z" name="getAvailableTablesNegativeTest" data-provider="getAvailableTablesNegativeData" finished-at="2025-06-06T23:51:57Z" duration-ms="88" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid request with missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get available tables negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get available tables negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.GetAvailableTablesTestScript.getAvailableTablesNegativeTest(GetAvailableTablesTestScript.java:396)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesNegativeTest -->
        <test-method signature="getAvailableTablesTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetAvailableTablesTestScript@2d52216b]" started-at="2025-06-06T23:51:57Z" name="getAvailableTablesTest" data-provider="getAvailableTablesData" finished-at="2025-06-06T23:51:57Z" duration-ms="56" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getavailabletables]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getavailabletables_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Available Tables]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "user_id":"2",
    "outlet_id":"1",
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Available tables retrieved successfully",
    "tables": [
        {
            "table_id": 3,
            "table_number": 3
        },
        {
            "table_id": 4,
            "table_number": 4
        },
        {
            "table_id": 5,
            "table_number": 5
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get available tables test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get available tables test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetAvailableTablesTestScript.getAvailableTablesTest(GetAvailableTablesTestScript.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableTablesTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetAvailableTablesTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@201a4587]" started-at="2025-06-06T23:51:28Z" name="setup" finished-at="2025-06-06T23:51:28Z" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tableDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@201a4587]" started-at="2025-06-06T23:51:28Z" name="tableDeleteNegativeTest" data-provider="getTableDeleteNegativeData" finished-at="2025-06-06T23:51:28Z" duration-ms="99" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tabledelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tabledelete_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid table delete due to missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "section_id": "17", "user_id": "2","outlet_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table delete negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table delete negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.TableDeleteTestScript.tableDeleteNegativeTest(TableDeleteTestScript.java:481)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableDeleteNegativeTest -->
        <test-method signature="verifyTableDelete(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableDeleteTestScript@201a4587]" started-at="2025-06-06T23:51:28Z" name="verifyTableDelete" data-provider="getTableDeleteData" finished-at="2025-06-06T23:51:28Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tabledelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tabledelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1",
    "section_id": "17",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "outlet table deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.TableDeleteTestScript.verifyTableDelete(TableDeleteTestScript.java:265)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableDelete -->
      </class> <!-- com.menumitratCommonAPITestScript.TableDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.TotalTicketsTestScript">
        <test-method is-config="true" signature="totalTicketsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@61001b64]" started-at="2025-06-06T23:51:28Z" name="totalTicketsSetUp" finished-at="2025-06-06T23:51:28Z" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsSetUp -->
        <test-method signature="totalTicketsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@61001b64]" started-at="2025-06-06T23:51:29Z" name="totalTicketsNegativeTest" data-provider="getTotalTicketsNegativeData" finished-at="2025-06-06T23:51:29Z" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[totaltickets]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[totaltickets_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsNegativeTest -->
        <test-method signature="totalTicketsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TotalTicketsTestScript@61001b64]" started-at="2025-06-06T23:51:29Z" name="totalTicketsTest" data-provider="getTotalTicketsData" finished-at="2025-06-06T23:51:29Z" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[totaltickets]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[totaltickets_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify total ticket ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Total tickets of outlet 1",
    "total_tickets": 3,
    "open_tickets": 1,
    "closed_tickets": 0,
    "wip_tickets": 2,
    "rejected_tickets": 0
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalTicketsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TotalTicketsTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript">
        <test-method is-config="true" signature="updateActiveStatusSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusSetUp" finished-at="2025-06-06T23:51:31Z" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusSetUp -->
        <test-method signature="updateActiveStatusNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusNegativeTest" data-provider="getUpdateActiveStatusNegativeData" finished-at="2025-06-06T23:51:31Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "type":"",
    "id":"4",
    "is_active":true

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{   ""detail"": ""'outlet_id' is required""}"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusNegativeTest(UpdateActiveStatusTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusNegativeTest -->
        <test-method signature="updateActiveStatusNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusNegativeTest" data-provider="getUpdateActiveStatusNegativeData" finished-at="2025-06-06T23:51:31Z" duration-ms="57" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty type value]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "type":"menu_category",
    "id":"4",
    "is_active":true

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{   ""detail"": ""'type' cannot be empty""}"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status negative test: A JSONObject text must begin with '{' at 1 [character 2 line 1]
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusNegativeTest(UpdateActiveStatusTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusNegativeTest -->
        <test-method signature="updateActiveStatusNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusNegativeTest" data-provider="getUpdateActiveStatusNegativeData" finished-at="2025-06-06T23:51:31Z" duration-ms="11" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing is_active field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "type":"menu_category",
    "id":"4",
    "is_active":""

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{   ""detail"": ""'is_active' is required""}"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status negative test: JSONObject["is_active"] is not a Boolean (class java.lang.String : ).]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status negative test: JSONObject["is_active"] is not a Boolean (class java.lang.String : ).
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusNegativeTest(UpdateActiveStatusTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusNegativeTest -->
        <test-method signature="updateActiveStatusNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusNegativeTest" data-provider="getUpdateActiveStatusNegativeData" finished-at="2025-06-06T23:51:31Z" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[is_active with invalid data type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   "outlet_id":"1",   "type":"",menu_category",   "id"":"4",   "is_active":"yes"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{   ""detail"": ""'is_active' must be a boolean""}"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status negative test: Expected a ':' after a key at 5 [character 6 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status negative test: Expected a ':' after a key at 5 [character 6 line 1]
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusNegativeTest(UpdateActiveStatusTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusNegativeTest -->
        <test-method signature="updateActiveStatusTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript@26e356f0]" started-at="2025-06-06T23:51:31Z" name="updateActiveStatusTest" data-provider="getUpdateActiveStatusData" finished-at="2025-06-06T23:51:31Z" duration-ms="62" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateactivestatus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateactivestatus_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update Active status]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":1,
    "type":"menu_category",
    "id":"4",
    "is_active":true

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu_category status updated successfully",
    "data": {
        "is_active": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update active status test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update active status test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript.updateActiveStatusTest(UpdateActiveStatusTestScript.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActiveStatusTest -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateActiveStatusTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@73e9cf30]" started-at="2025-06-06T23:51:55Z" name="TableListViewSetUp" finished-at="2025-06-06T23:51:55Z" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableListTestScript@73e9cf30]" started-at="2025-06-06T23:51:56Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-06-06T23:51:56Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": [
        {
            "section_name": "Roof Top",
            "section_id": 17,
            "tables": [
                {
                    "table_id": 81,
                    "table_number": 76,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 82,
                    "table_number": 77,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 83,
                    "table_number": 78,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:13:41 PM",
                    "grand_total": 3870.36,
                    "order_id": 4,
                    "order_number": "4",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "card",
                    "is_reserved": false
                },
                {
                    "table_id": 84,
                    "table_number": 79,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 85,
                    "table_number": 80,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 124,
                    "table_number": 118,
                    "outlet_id": 1,
                    "is_occupied": 1,
                    "occupied_time": "02 May 2025 03:08:32 PM",
                    "grand_total": 3870.36,
                    "order_id": 3,
                    "order_number": "3",
                    "action": "KOT_and_save",
                    "is_paid": "0",
                    "payment_method": "upi",
                    "is_reserved": false
                },
                {
                    "table_id": 125,
                    "table_number": 119,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 126,
                    "table_number": 120,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 127,
                    "table_number": 121,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 128,
                    "table_number": 122,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 129,
                    "table_number": 123,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 130,
                    "table_number": 124,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 131,
                    "table_number": 125,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 132,
                    "table_number": 126,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 133,
                    "table_number": 127,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        },
        {
            "section_name": "Front-Top",
            "section_id": 18,
            "tables": [
                {
                    "table_id": 86,
                    "table_number": 81,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 87,
                    "table_number": 82,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 88,
                    "table_number": 83,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 89,
                    "table_number": 84,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 90,
                    "table_number": 85,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 91,
                    "table_number": 86,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 92,
                    "table_number": 87,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 93,
                    "table_number": 88,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 94,
                    "table_number": 89,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 95,
                    "table_number": 90,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 96,
                    "table_number": 91,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 97,
                    "table_number": 92,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 98,
                    "table_number": 93,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 99,
                    "table_number": 94,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 100,
                    "table_number": 95,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 104,
                    "table_number": 98,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 105,
                    "table_number": 99,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 106,
                    "table_number": 100,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 107,
                    "table_number": 101,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 108,
                    "table_number": 102,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 109,
                    "table_number": 103,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 110,
                    "table_number": 104,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 111,
                    "table_number": 105,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 112,
                    "table_number": 106,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 113,
                    "table_number": 107,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 114,
                    "table_number": 108,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 115,
                    "table_number": 109,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 116,
                    "table_number": 110,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 117,
                    "table_number": 111,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 118,
                    "table_number": 112,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 119,
                    "table_number": 113,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 120,
                    "table_number": 114,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 121,
                    "table_number": 115,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 122,
                    "table_number": 116,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                },
                {
                    "table_id": 123,
                    "table_number": 117,
                    "outlet_id": 1,
                    "is_occupied": 0,
                    "occupied_time": null,
                    "grand_total": null,
                    "order_id": null,
                    "order_number": null,
                    "action": null,
                    "is_paid": null,
                    "payment_method": null,
                    "is_reserved": false
                }
            ]
        }
    ],
    "today_total_sales": 2952.28,
    "live_sales": 11611.08,
    "total_tables": 50
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.TableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainUpdateTestScript">
        <test-method is-config="true" signature="captainUpdateSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:04Z" name="captainUpdateSetUp" finished-at="2025-06-06T23:51:05Z" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateSetUp -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"", "outlet_id":"1", "name":"rash", "mobile":"6936343467", "address":"mumbai", "aadhar_number":"343332322321", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"11", "outlet_id":"1", "name":"rash", "mobile":"", "address":"mumbai", "aadhar_number":"343332322321", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide Update User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="77" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing name]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"11", "outlet_id":"1", "name":"", "mobile":"6936343467", "address":"mumbai", "aadhar_number":"343332322321", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Name is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateNegativeTest(CaptainUpdateTestScript.java:419)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid email format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"11", "outlet_id":"1", "name":"rash", "mobile":"6936343467", "address":"mumbai", "aadhar_number":"343332322321", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"The email format is incorrect."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateNegativeTest(CaptainUpdateTestScript.java:419)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="73" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2", "user_id":"11", "outlet_id":"", "name":"rash", "mobile":"6936343467", "address":"mumbai", "aadhar_number":"343332322321", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateNegativeTest(CaptainUpdateTestScript.java:419)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateNegativeTest" data-provider="getCaptainUpdateNegativeData" finished-at="2025-06-06T23:51:05Z" duration-ms="77" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing aadhar_number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id":"2","user_id":"11", "outlet_id":"1", "name":"rash", "mobile":"6936343467", "address":"mumbai", "aadhar_number":"", "dob":"", "email":"com" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Aadhar number is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateNegativeTest(CaptainUpdateTestScript.java:419)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateNegativeTest -->
        <test-method signature="captainUpdateTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainUpdateTestScript@66f57048]" started-at="2025-06-06T23:51:05Z" name="captainUpdateTest" data-provider="getCaptainUpdateData" finished-at="2025-06-06T23:51:05Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
"update_user_id":"2",
 "user_id":"26",
 "outlet_id":"1",
 "name":"rash",
 "mobile":"6936343467",
 "address":"mumbai",
 "aadhar_number":"343332322321",
 "dob":"",
 "email":"com"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Captain updated successfully",
    "data": {
        "user_id": 12,
        "name": "rash"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain update test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain update test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.CaptainUpdateTestScript.captainUpdateTest(CaptainUpdateTestScript.java:230)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainUpdateTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOrderTestScript">
        <test-method is-config="true" signature="updateOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:51:58Z" name="updateOrderSetUp" finished-at="2025-06-06T23:51:59Z" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrderSetUp -->
        <test-method signature="updateOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:51:59Z" name="updateOrderNegativeTest" data-provider="getUpdateOrderNegativeData" finished-at="2025-06-06T23:51:59Z" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "",
  "user_id": "2", "order_id":"20",
  "tables": [78],
  "section_id": 17,
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrderNegativeTest -->
        <test-method signature="updateOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:51:59Z" name="updateOrderNegativeTest" data-provider="getUpdateOrderNegativeData" finished-at="2025-06-06T23:51:59Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[incorrect order_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2", "order_id":"2089",
  "tables": [78],
  "section_id": 17,
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Order not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOrderNegativeTest -->
        <test-method signature="updateDineInOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:51:59Z" name="updateDineInOrder" data-provider="getUpdateDineInOrderData" finished-at="2025-06-06T23:52:01Z" duration-ms="1874" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderdineIn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order dine-in Order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2", "order_id":"20",
  "tables": [78],
  "section_id": 17,
  "order_type": "dine-in",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Exception in update Dine-In order test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Exception in update Dine-In order test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateOrderTestScript.updateDineInOrder(UpdateOrderTestScript.java:368)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDineInOrder -->
        <test-method signature="updateDeliveryOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:52:01Z" name="updateDeliveryOrder" data-provider="getUpdateDeliveryOrderData" finished-at="2025-06-06T23:52:01Z" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updatedeliveryorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updatedeliveryorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify update order delivery]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "order_id":"21",
  "order_type": "delivery",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 3,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDeliveryOrder -->
        <test-method signature="updateParcelOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:52:01Z" name="updateParcelOrder" data-provider="getUpdateParcelOrderData" finished-at="2025-06-06T23:52:02Z" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderparcel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Updateorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Update order parcel]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": "2",
  "order_id":"22",
  "order_type": "parcel",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 4,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateParcelOrder -->
        <test-method signature="updateDriveThroughOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:52:02Z" name="updateDriveThroughOrder" data-provider="getUpdateDriveThroughOrderData" finished-at="2025-06-06T23:52:02Z" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateorderdrivethrough]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateorder_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify update order drive-through]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
   "order_id":"19",
  "order_type": "drive-through",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 2,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDriveThroughOrder -->
        <test-method signature="updateCounterOrder(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.menumitratCommonAPITestScript.UpdateOrderTestScript@3527942a]" started-at="2025-06-06T23:52:02Z" name="updateCounterOrder" data-provider="getUpdateCounterOrderData" finished-at="2025-06-06T23:52:03Z" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateordercounter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[upupdatecounterorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Update Counter order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
  "outlet_id": "1",
  "user_id": 2,
  "order_id":"24",
  "order_type": "counter",
  "payment_method": "upi",
  "order_items": [
    {
      "menu_id": 13,
      "quantity": 2,
      "portion_name": "",
      "comment": "Extra spicy please"
    }
  ],
  "action": "KOT_and_save",
  "customer_name": "John Doe",
  "customer_mobile": "9876543210",
  "customer_address": "123 Main Street, City",
  "customer_alternate_mobile": "8765432109",
  "customer_landmark": "Near Central Park",
  "special_discount": "10.50",
  "charges": "5.00",
  "tip": "20.00"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCounterOrder -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@1de5f259]" started-at="2025-06-06T23:51:01Z" name="setup" finished-at="2025-06-06T23:51:01Z" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCreateTestScript@1de5f259]" started-at="2025-06-06T23:51:01Z" name="createInventory" data-provider="getInventoryCreateData" finished-at="2025-06-06T23:51:01Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{    
    "user_id":"2",
    "supplier_id": "8",
    "outlet_id": "1",
    "category_id": "1",
    "name": "bangda",
    "description": "Fresh Roma fish",
    "unit_price": "200",
    "quantity": "100",
    "unit_of_measure": "kg",
    "reorder_level": "",
    "brand_name": "",
    "tax_rate": "1",
    "in_or_out": "in",
    "in_date": "",
    "expiration_date": ""
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Inventory created successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryCreateTestScript.createInventory(InventoryCreateTestScript.java:263)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SelectOutletTestScript">
        <test-method is-config="true" signature="selectOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@49049a04]" started-at="2025-06-06T23:51:19Z" name="selectOutletSetUp" finished-at="2025-06-06T23:51:19Z" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletSetUp -->
        <test-method signature="selectOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@49049a04]" started-at="2025-06-06T23:51:19Z" name="selectOutletNegativeTest" data-provider="getSelectOutletNegativeData" finished-at="2025-06-06T23:51:19Z" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet selection with missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "owner_id": "2"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletNegativeTest -->
        <test-method signature="selectOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@49049a04]" started-at="2025-06-06T23:51:19Z" name="selectOutletNegativeTest" data-provider="getSelectOutletNegativeData" finished-at="2025-06-06T23:51:19Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet selection with both fields missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "owner_id": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletNegativeTest -->
        <test-method signature="selectOutletTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SelectOutletTestScript@49049a04]" started-at="2025-06-06T23:51:19Z" name="selectOutletTest" data-provider="getSelectOutletData" finished-at="2025-06-06T23:51:19Z" duration-ms="67" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[SelectOutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SelectOutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verfiy Select Outlet ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "owner_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet selected successfully",
    "owner_data": {
        "owner_name": "Heena",
        "user_id": 2,
        "role": "owner",
        "outlet_name": "spicy world",
        "outlet_id": 2,
        "mobile": "9898989899",
        "outlet_status": true,
        "order_number_sequence": "since_opening",
        "gst": "18",
        "service_charges": "5",
        "outlet_upi": null,
        "image": null,
        "is_open": true,
        "outlet_address": "456 Second Street, City"
    },
    "settings": {
        "style": "blue",
        "has_dine_in": true,
        "has_parcel": true,
        "has_counter": true,
        "has_delivery": true,
        "has_drive_through": false,
        "print_and_save": true,
        "KOT_and_save": true,
        "settle": true,
        "reserve_table": true,
        "cancel": true,
        "POS_show_menu_image": true
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in select outlet test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in select outlet test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.SelectOutletTestScript.selectOutletTest(SelectOutletTestScript.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOutletTest -->
      </class> <!-- com.menumitratCommonAPITestScript.SelectOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionCreateTestScript">
        <test-method is-config="true" signature="sectionCreateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@ffaa6af]" started-at="2025-06-06T23:50:58Z" name="sectionCreateSetup" finished-at="2025-06-06T23:50:58Z" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionCreateSetup -->
        <test-method signature="verifySectionUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@ffaa6af]" started-at="2025-06-06T23:50:58Z" name="verifySectionUsingValidInputData" data-provider="getSectionCreatePositiveInputData" finished-at="2025-06-06T23:50:58Z" duration-ms="43" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectioncreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify section create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": 1, "user_id": 2, "section_name": "Front-Top" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet Section and 5 tables created successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during section creation test execution: Expected status code 200 but got 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during section creation test execution: Expected status code 200 but got 400
	at com.menumitratCommonAPITestScript.sectionCreateTestScript.verifySectionUsingValidInputData(sectionCreateTestScript.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUsingValidInputData -->
        <test-method signature="sectionCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.sectionCreateTestScript@ffaa6af]" started-at="2025-06-06T23:50:58Z" name="sectionCreateNegativeTest" data-provider="getSectionCreateNegativeData" finished-at="2025-06-06T23:50:58Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectioncreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[section_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty section_name]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": 1, "user_id": 2, "section_name": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "Please provide section_name"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in section create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in section create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.sectionCreateTestScript.sectionCreateNegativeTest(sectionCreateTestScript.java:462)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionCreateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ForceCancelOrderTestScript">
        <test-method is-config="true" signature="forceCancelOrderSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@194bcebf]" started-at="2025-06-06T23:50:56Z" name="forceCancelOrderSetUp" finished-at="2025-06-06T23:50:56Z" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderSetUp -->
        <test-method signature="forceCancelOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@194bcebf]" started-at="2025-06-06T23:50:56Z" name="forceCancelOrderNegativeTest" data-provider="getForceCancelOrderNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[forcecancelorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[forcecancelorder_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid force cancel order with missing fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "order_id":"6", "user_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Order already cancelled"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderNegativeTest -->
        <test-method signature="forceCancelOrderNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@194bcebf]" started-at="2025-06-06T23:50:56Z" name="forceCancelOrderNegativeTest" data-provider="getForceCancelOrderNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="51" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[forcecancelorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[forcecancelorder_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid force cancel order with missing both fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "order_id":"","user_id":""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"order_id is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in force cancel order negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in force cancel order negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ForceCancelOrderTestScript.forceCancelOrderNegativeTest(ForceCancelOrderTestScript.java:390)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderNegativeTest -->
        <test-method signature="forceCancelOrderTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ForceCancelOrderTestScript@194bcebf]" started-at="2025-06-06T23:50:57Z" name="forceCancelOrderTest" data-provider="getForceCancelOrderData" finished-at="2025-06-06T23:50:57Z" duration-ms="48" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[forcecancelorder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[forcecancelorder_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify force cancel order]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "order_id":"6",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Order cancelled successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in force cancel order test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in force cancel order test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ForceCancelOrderTestScript.forceCancelOrderTest(ForceCancelOrderTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceCancelOrderTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ForceCancelOrderTestScript -->
      <class name="com.menumitratCommonAPITestScript.RemoveTemplateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@36916eb0]" started-at="2025-06-06T23:51:07Z" name="setup" finished-at="2025-06-06T23:51:07Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="removeTemplate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@36916eb0]" started-at="2025-06-06T23:51:07Z" name="removeTemplate" data-provider="getRemoveTemplateData" finished-at="2025-06-06T23:51:07Z" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[removetemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[removetemplate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Remove Template]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplate -->
        <test-method signature="removeTemplate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@36916eb0]" started-at="2025-06-06T23:51:07Z" name="removeTemplate" data-provider="getRemoveTemplateData" finished-at="2025-06-06T23:51:08Z" duration-ms="68" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[removetemplate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[removetemplate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Invalid section id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "section_id":"1010"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Section not found" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.RemoveTemplateTestScript.removeTemplate(RemoveTemplateTestScript.java:230)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplate -->
        <test-method signature="removeTemplateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.RemoveTemplateTestScript@36916eb0]" started-at="2025-06-06T23:51:08Z" name="removeTemplateNegativeTest" data-provider="getRemoveTemplateNegativeData" finished-at="2025-06-06T23:51:08Z" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.menumitra.utilityclass.customException: Error in getting remove template negative test data: No valid remove template negative test data found after filtering
	at com.menumitratCommonAPITestScript.RemoveTemplateTestScript.getRemoveTemplateNegativeData(RemoveTemplateTestScript.java:276)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTemplateNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.RemoveTemplateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ViewOutletTestScript">
        <test-method is-config="true" signature="viewOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:55Z" name="viewOutletSetUp" finished-at="2025-06-06T23:50:56Z" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletSetUp -->
        <test-method signature="verifyViewOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="verifyViewOutlet" data-provider="getViewOutletData" finished-at="2025-06-06T23:50:56Z" duration-ms="50" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify view Outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet details",
    "data": {
        "owner_id": 2,
        "owner_name": "Heena",
        "total_category": 0,
        "total_menu": 0,
        "total_order": 0,
        "total_completed_orders": 0,
        "total_cancelled_orders": 0,
        "total_active_menu": 0,
        "total_inactive_menu": 0,
        "total_active_category": 0,
        "total_inactive_category": 0,
        "total_active_section": 0,
        "total_inactive_section": 0,
        "name": "spicy world",
        "outlet_type": "mess",
        "fssainumber": "None",
        "gstnumber": null,
        "mobile": "9898989899",
        "veg_nonveg": "nonveg",
        "service_charges": "5",
        "gst": "18",
        "address": "456 Second Street, City",
        "is_open": true,
        "upi_id": null,
        "whatsapp": null,
        "facebook": null,
        "instagram": null,
        "website": null,
        "google_review": null,
        "google_business_link": null,
        "opening_time": "10:00",
        "closing_time": "23:00",
        "image": null,
        "outlet_status": true,
        "order_number_sequence": "since_opening",
        "created_on": "26 Apr 2025 09:17:23 AM",
        "created_by": null,
        "updated_by": null,
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.verifyViewOutlet(ViewOutletTestScript.java:266)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewOutlet -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="66" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet_id format (string instead int)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be an integer"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="62" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id as negative number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "-1" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Outlet not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="48" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id with special characters]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "!@#" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be an integer"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="56" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id not present in DB]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "9999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="60" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id as float]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1.5" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be an integer"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
        <test-method signature="viewOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ViewOutletTestScript@3c7f66c4]" started-at="2025-06-06T23:50:56Z" name="viewOutletNegativeTest" data-provider="getViewOutletNegativeData" finished-at="2025-06-06T23:50:56Z" duration-ms="54" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[viewoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[viewoutlet_010]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id as boolean]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "true" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be an integer"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in view outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ViewOutletTestScript.viewOutletNegativeTest(ViewOutletTestScript.java:408)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOutletNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ViewOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.tableView">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.tableView@771a660]" started-at="2025-06-06T23:51:56Z" name="setup" finished-at="2025-06-06T23:51:56Z" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tableViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.tableView@771a660]" started-at="2025-06-06T23:51:56Z" name="tableViewNegativeTest" data-provider="getTableViewNegativeData" finished-at="2025-06-06T23:51:56Z" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid table view data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "table_number":"76", "section_id":"999"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Section not found"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableViewNegativeTest -->
        <test-method signature="verifyTableView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.tableView@771a660]" started-at="2025-06-06T23:51:56Z" name="verifyTableView" data-provider="getTableViewData" finished-at="2025-06-06T23:51:56Z" duration-ms="91" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tableview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tableview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",    
    "table_number":"76",
    "section_id":"17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "table_id": 81,
        "table_number": 76,
        "outlet_id": 1,
        "section_id": "Roof Top",
        "outlet_code": "9001",
        "is_reserved": false
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.tableView.verifyTableView(tableView.java:252)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableView -->
      </class> <!-- com.menumitratCommonAPITestScript.tableView -->
      <class name="com.menumitratCommonAPITestScript.OutletTypeTestScript">
        <test-method is-config="true" signature="outletTypeSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@53aac487]" started-at="2025-06-06T23:51:52Z" name="outletTypeSetUp" finished-at="2025-06-06T23:51:52Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- outletTypeSetUp -->
        <test-method signature="verifyOutletType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.OutletTypeTestScript@53aac487]" started-at="2025-06-06T23:51:52Z" name="verifyOutletType" data-provider="getOutletTypeData" finished-at="2025-06-06T23:51:52Z" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[outlettype]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[outlettype_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Outlet Type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Successfully retrieved outlet types",
    "outlet_type_list": {
        "outlet": "outlet",
        "hotel": "hotel",
        "mess": "mess",
        "canteen": "canteen",
        "cafe": "cafe"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOutletType -->
      </class> <!-- com.menumitratCommonAPITestScript.OutletTypeTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionViewTestScript">
        <test-method is-config="true" signature="sectionViewSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@6404f418]" started-at="2025-06-06T23:51:00Z" name="sectionViewSetup" finished-at="2025-06-06T23:51:00Z" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionViewSetup -->
        <test-method signature="sectionViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@6404f418]" started-at="2025-06-06T23:51:00Z" name="sectionViewNegativeTest" data-provider="getSectionViewNegativeData" finished-at="2025-06-06T23:51:00Z" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": 9999, "section_id": "16" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"The outlet ID provided is incorrect. Please check and try again with a valid outlet ID"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionViewNegativeTest -->
        <test-method signature="verifySectionViewUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionViewTestScript@6404f418]" started-at="2025-06-06T23:51:00Z" name="verifySectionViewUsingValidInputData" data-provider="getSectionViewPositiveInputData" finished-at="2025-06-06T23:51:00Z" duration-ms="45" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify section view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "data": { "section_id": 16, "section_name": "Family", "outlet_id": 1 } }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[An error occurred during section view verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: An error occurred during section view verification
	at com.menumitratCommonAPITestScript.SectionViewTestScript.verifySectionViewUsingValidInputData(SectionViewTestScript.java:240)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionViewUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetTableListTestScript">
        <test-method is-config="true" signature="TableListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@4803b726]" started-at="2025-06-06T23:50:57Z" name="TableListViewSetUp" finished-at="2025-06-06T23:50:58Z" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TableListViewSetUp -->
        <test-method signature="tableListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@4803b726]" started-at="2025-06-06T23:50:58Z" name="tableListViewNegativeTest" data-provider="getTableListViewNegativeData" finished-at="2025-06-06T23:50:58Z" duration-ms="54" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "-1", "section_id": "17" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID does not exist."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.GetTableListTestScript.tableListViewNegativeTest(GetTableListTestScript.java:371)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableListViewNegativeTest -->
        <test-method signature="tableListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@4803b726]" started-at="2025-06-06T23:50:58Z" name="tableListViewNegativeTest" data-provider="getTableListViewNegativeData" finished-at="2025-06-06T23:50:58Z" duration-ms="49" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify table list view with missing section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "section_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Please provide section_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.GetTableListTestScript.tableListViewNegativeTest(GetTableListTestScript.java:371)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableListViewNegativeTest -->
        <test-method signature="verifyTableListView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetTableListTestScript@4803b726]" started-at="2025-06-06T23:50:58Z" name="verifyTableListView" data-provider="getTableListData" finished-at="2025-06-06T23:50:58Z" duration-ms="51" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[gettablelistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gettablelistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{  
    
    "outlet_id": 1,
    "section_id": "17"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table list view test execution: Failed to retrieve table list view]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table list view test execution: Failed to retrieve table list view
	at com.menumitratCommonAPITestScript.GetTableListTestScript.verifyTableListView(GetTableListTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableListView -->
      </class> <!-- com.menumitratCommonAPITestScript.GetTableListTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@273e7444]" started-at="2025-06-06T23:51:53Z" name="setup" finished-at="2025-06-06T23:51:53Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateInventory(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryUpdateTestScript@273e7444]" started-at="2025-06-06T23:51:53Z" name="updateInventory" data-provider="getInventoryUpdateData" finished-at="2025-06-06T23:51:53Z" duration-ms="79" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventoryupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventoryupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[put]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{    
    "user_id":"2",
    "inventory_id":"7",
    "supplier_id": "8",
    "outlet_id": "1",
    "category_id": "1",
    "name": "floran",
    "description": "Fresh Roma tomatoes",
    "unit_price": "100",
    "quantity": "100",
    "unit_of_measure": "kg",
    "reorder_level": "20",
    "brand_name": "FreshFarms",
    "tax_rate": "1",
    "in_or_out": "in",
   "in_date": "",        
    "expiration_date": "" 
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Inventory updated successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryUpdateTestScript.updateInventory(InventoryUpdateTestScript.java:307)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInventory -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.WaiterListViewTestScript">
        <test-method is-config="true" signature="waiterListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@37d4349f]" started-at="2025-06-06T23:50:53Z" name="waiterListViewSetUp" finished-at="2025-06-06T23:50:53Z" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewSetUp -->
        <test-method signature="waiterListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@37d4349f]" started-at="2025-06-06T23:50:53Z" name="waiterListViewNegativeTest" data-provider="getWaiterListViewNegativeData" finished-at="2025-06-06T23:50:53Z" duration-ms="49" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterlistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.WaiterListViewTestScript.waiterListViewNegativeTest(WaiterListViewTestScript.java:391)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewNegativeTest -->
        <test-method signature="waiterListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.WaiterListViewTestScript@37d4349f]" started-at="2025-06-06T23:50:53Z" name="waiterListViewTest" data-provider="getWaiterListViewData" finished-at="2025-06-06T23:50:53Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[waiterlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[waiterlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify waiter list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Successfully retrieved waiters",
    "data": [
        {
            "outlet_id": "1",
            "user_id": 10,
            "name": "waiter C",
            "mobile": "6146345585",
            "dob": null,
            "email": null
        },
        {
            "outlet_id": "1",
            "user_id": 9,
            "name": "waiter B",
            "mobile": "6146345005",
            "dob": null,
            "email": null
        },
        {
            "outlet_id": "1",
            "user_id": 8,
            "name": "waiter A",
            "mobile": "6146345004",
            "dob": "12 Jan 2023",
            "email": "h@gmaiom"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in waiter list view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in waiter list view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.WaiterListViewTestScript.waiterListViewTest(WaiterListViewTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waiterListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.WaiterListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.supplierViewTestScript">
        <test-method is-config="true" signature="supplierViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7db12bb6]" started-at="2025-06-06T23:51:53Z" name="supplierViewSetUp" finished-at="2025-06-06T23:51:54Z" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewSetUp -->
        <test-method signature="supplierViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7db12bb6]" started-at="2025-06-06T23:51:54Z" name="supplierViewNegativeTest" data-provider="getSupplierViewNegativeData" finished-at="2025-06-06T23:51:54Z" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API response when supplier_id is missing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", supplier_id:"" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Supplier ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewNegativeTest -->
        <test-method signature="supplierViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7db12bb6]" started-at="2025-06-06T23:51:54Z" name="supplierViewNegativeTest" data-provider="getSupplierViewNegativeData" finished-at="2025-06-06T23:51:54Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API response when outlet_id is a special character]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "supplier_id": "8", "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierViewNegativeTest -->
        <test-method signature="verifySupplierView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.supplierViewTestScript@7db12bb6]" started-at="2025-06-06T23:51:54Z" name="verifySupplierView" data-provider="getSupplierViewValidData" finished-at="2025-06-06T23:51:54Z" duration-ms="72" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[supplierview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[supplierview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify supplier view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "supplier_id":"4",
    "outlet_id": "1"
     
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "data": {
        "supplier_id": 1,
        "outlet_id": 1,
        "name": "Balaji",
        "supplier_status": true,
        "credit_rating": "good",
        "credit_limit": 50000,
        "location": "Mumbai",
        "owner_name": "Heena",
        "supplier_code": null,
        "website": "http://example.com",
        "mobile_number1": "7996543218",
        "mobile_number2": "7993456701",
        "address": "",
        "created_by": "Owner",
        "updated_by": "Owner",
        "created_on": "30 Apr 2025 01:21:21 PM",
        "updated_on": "30 Apr 2025 01:40:39 PM"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in supplier view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in supplier view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.supplierViewTestScript.verifySupplierView(supplierViewTestScript.java:222)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySupplierView -->
      </class> <!-- com.menumitratCommonAPITestScript.supplierViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.StaffCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:44Z" name="setup" finished-at="2025-06-06T23:51:45Z" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="createStaff" data-provider="getStaffCreateData" finished-at="2025-06-06T23:51:45Z" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid staff creation with all correct fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   "user_id":"2",
    "name":"Ravan", "mobile":"9797454589",
    "dob":"06 Dec 2014",
    "address":"Katraj Pune",
    "role":"cleaner",
    "aadhar_number": "523456789091",
    "outlet_id":"1",                                                                                                                                                                                                                                                                                                                                                                          "image": "C:\Users\hp\Downloads\menus\medu vada.jpg"
} ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "staff_id": 9
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method signature="verifyStaffCreateNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="verifyStaffCreateNegativeCases" data-provider="getStaffNegativeData" finished-at="2025-06-06T23:51:45Z" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Duplicate staff with same `user_id` and `mobile`]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   "user_id":"2",
    "name":"Ravan", "mobile":"9797454567",
    "dob":"06 Dec 2014",
    "address":"Katraj Pune",
    "role":"cleaner",
    "aadhar_number": "523456789091",
    "outlet_id":"1",                                                                                                                                                                                                                                                                                                                                                                          "image": "C:\Users\hp\Downloads\menus\medu vada.jpg"
} ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Mobile number already exists" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[409]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffCreateNegativeCases -->
        <test-method signature="verifyStaffCreateNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="verifyStaffCreateNegativeCases" data-provider="getStaffNegativeData" finished-at="2025-06-06T23:51:45Z" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Staff Incorrect user id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "562", "name": "DEF", "mobile": "9112233445", "dob": "01 Feb 1990", "address": "Pune", "role": "chef", "aadhar_number": "523456789091", "outlet_id": 103 }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "User ID does not exist." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffCreateNegativeCases -->
        <test-method signature="verifyStaffCreateNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="verifyStaffCreateNegativeCases" data-provider="getStaffNegativeData" finished-at="2025-06-06T23:51:45Z" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing `name`]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "mobile": "9833445566", "dob": "06 Dec 2014", "address": "Katraj Pune", "role": "cleaner", "aadhar_number": "523456789091", "outlet_id":"1"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please provide name" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffCreateNegativeCases -->
        <test-method signature="verifyStaffCreateNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="verifyStaffCreateNegativeCases" data-provider="getStaffNegativeData" finished-at="2025-06-06T23:51:45Z" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile number format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "name": "XYZ", "mobile": "9833", "dob": "06 Dec 2014", "address": "Katraj Pune", "role": "cleaner", "aadhar_number": "523456789091", "outlet_id": 1, }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Mobile must be 10 digits"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffCreateNegativeCases -->
        <test-method signature="verifyStaffCreateNegativeCases(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffCreateTestScript@506ae4d4]" started-at="2025-06-06T23:51:45Z" name="verifyStaffCreateNegativeCases" data-provider="getStaffNegativeData" finished-at="2025-06-06T23:51:45Z" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffcreate_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid `dob` format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "name": "XYZ", "mobile": "9527279878", "dob": "2014/12/06", "address": "Katraj Pune", "role": "cleaner", "aadhar_number": "523456789091", "outlet_id": 1,}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Invalid date format. Use DD MMM YYYY (e.g. 23 Jan 2000)"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffCreateNegativeCases -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript">
        <test-method is-config="true" signature="defaultUserSettingsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@3a44431a]" started-at="2025-06-06T23:50:55Z" name="defaultUserSettingsSetUp" finished-at="2025-06-06T23:50:55Z" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsSetUp -->
        <test-method signature="defaultUserSettingsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript@3a44431a]" started-at="2025-06-06T23:50:55Z" name="defaultUserSettingsTest" data-provider="getDefaultUserSettingsData" finished-at="2025-06-06T23:50:55Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultusersettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultusersettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Default User Settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":2
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultUserSettingsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultUserSettingsTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:42Z" name="setup" finished-at="2025-06-06T23:51:42Z" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:42Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:42Z" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with invalid outlet ID ("@")]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"@", "menu_cat_id":"3", "user_id":"11", "name":"Chicken tandoor", "food_type":"nonveg", "description":"this healthy food", "spicy_index":"2", "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}], "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"5.0", "cgst":"5", "sgst":"10" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:42Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:43Z" duration-ms="92" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with missing name field]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1","name":"", "menu_cat_id":"3", "user_id":"", "food_type":"nonveg", "description":"this healthy food", "spicy_index":"2", "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}], "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"5.0", "cgst":"5", "sgst":"10" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ { "detail": "Menu name is required" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.createMenuNegative(MenuCreateTestScript.java:473)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:43Z" duration-ms="96" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with invalid food type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_cat_id":"3", "user_id":"11", "name":"Chicken tandoor", "food_type":"meatlover", "description":"this healthy food", "spicy_index":"2", "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}], "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"5.0", "cgst":"5", "sgst":"10" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Please select a valid food type: veg, nonveg, vegan, or egg" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.createMenuNegative(MenuCreateTestScript.java:473)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:43Z" duration-ms="109" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with negative portion price]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_cat_id":"3", "user_id":"11", "name":"Chicken tandoor", "food_type":"nonveg", "description":"this healthy food", "spicy_index":"2", "portion_data":[{"portion_name":"Half","price":-50,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}], "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"5.0", "cgst":"5", "sgst":"10" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "Price must be greater than 0" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.createMenuNegative(MenuCreateTestScript.java:473)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:43Z" duration-ms="23" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with missing portion_data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_cat_id":"3", "user_id":"11", "name":"Chicken tandoor", "food_type":"nonveg", "description":"this healthy food", "spicy_index":"2", "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"5.0", "cgst":"5", "sgst":"10" },"portion_data":[]]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": {
        "portion_data": "Please provide portion_data"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: JSONObject["portion_data"] not found.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: JSONObject["portion_data"] not found.
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.createMenuNegative(MenuCreateTestScript.java:473)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="createMenuNegative" data-provider="getMenuCreateNegativeData" finished-at="2025-06-06T23:51:43Z" duration-ms="100" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with invalid rating type]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id":"1", "menu_cat_id":"3", "user_id":"11", "name":"Chicken tandoor", "food_type":"nonveg", "description":"this healthy food", "spicy_index":"2", "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"}], "images":"C:\\Users\\hp\\Downloads\\menus\\dal1.jpg", "ingredients":"dal,vegetables", "offer":"40 ", "rating":"five", "cgst":"5", "sgst":"10" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please select a valid Rating"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCreateTestScript.createMenuNegative(MenuCreateTestScript.java:473)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuNegative -->
        <test-method signature="createMenuUsigValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="createMenuUsigValidInputData" data-provider="getMenuCreateData" finished-at="2025-06-06T23:51:43Z" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menu_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Menu create with valid data]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id":"3",
    "user_id":"11",
    "name":"Chicken tandoor",
    "food_type":"nonveg",
    "description":"this healthy food",
    "spicy_index":"2",
    "portion_data":[{"portion_name":"Half","price":100,"unit":"250g"},{"portion_name":"Full","price":180,"unit":"500g"}],
    "images":"C:\Users\hp\Downloads\menus\dal1.jpg",
    "ingredients":"dal,vegetables",
    "offer":"40 ",
    "rating":"5.0",
    "cgst":"5",
    "sgst":"10"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Menu created successfully",
    
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMenuUsigValidInputData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCreateTestScript@48aca48b]" started-at="2025-06-06T23:51:43Z" name="tearDown" finished-at="2025-06-06T23:51:43Z" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.InventoryCategoryListView">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@593aaf41]" started-at="2025-06-06T23:50:51Z" name="setup" finished-at="2025-06-06T23:50:51Z" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getInventoryCategoryList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.InventoryCategoryListView@593aaf41]" started-at="2025-06-06T23:50:51Z" name="getInventoryCategoryList" data-provider="getInventoryCategoryListViewData" finished-at="2025-06-06T23:50:51Z" duration-ms="40" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[inventorycategorylistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inventorycategorylistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify inventory category list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "st": 1,
    "msg": "Success",
    "categories": [
        {
            "inventory_category_id": 1,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 2,
            "name": "Raw Material"
        },
        {
            "inventory_category_id": 3,
            "name": "water"
        },
        {
            "inventory_category_id": 4,
            "name": "Farm"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in inventory category list view test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in inventory category list view test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.InventoryCategoryListView.getInventoryCategoryList(InventoryCategoryListView.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInventoryCategoryList -->
      </class> <!-- com.menumitratCommonAPITestScript.InventoryCategoryListView -->
      <class name="com.menumitratCommonAPITestScript.StaffUpdateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@1ed6388a]" started-at="2025-06-06T23:52:03Z" name="setup" finished-at="2025-06-06T23:52:04Z" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="updateStaff(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffUpdateTestScript@1ed6388a]" started-at="2025-06-06T23:52:04Z" name="updateStaff" data-provider="getStaffUpdateData" finished-at="2025-06-06T23:52:04Z" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify update staff using valid input]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
         "user_id":2,
         "staff_id": 1,
        "outlet_id": 1,
        "name": "stafff one",
        "mobile":"7918232897",
        "address": "dfddd",
        "role": "receptionist",
        "dob": "2 Jul 2003",
        "aadhar_number": "321291198274",
        "photo": "C:\Users\hp\Downloads\menus\coca.jpg"
}             ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Staff updated successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStaff -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.SectionDeleteTestScript">
        <test-method is-config="true" signature="sectionDeleteSetup()[pri:0, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@17497425]" started-at="2025-06-06T23:50:57Z" name="sectionDeleteSetup" finished-at="2025-06-06T23:50:57Z" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionDeleteSetup -->
        <test-method signature="verifySectionDeleteUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.SectionDeleteTestScript@17497425]" started-at="2025-06-06T23:50:57Z" name="verifySectionDeleteUsingValidInputData" data-provider="getSectionDeletePositiveInputData" finished-at="2025-06-06T23:50:57Z" duration-ms="44" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectiondelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectiondelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid user_id, outlet_id, and section_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "2", "outlet_id": "1", "section_id": "15"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "message": "Outlet Section and associated tables deleted successfully"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error during section delete verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error during section delete verification
	at com.menumitratCommonAPITestScript.SectionDeleteTestScript.verifySectionDeleteUsingValidInputData(SectionDeleteTestScript.java:209)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionDeleteUsingValidInputData -->
      </class> <!-- com.menumitratCommonAPITestScript.SectionDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetFoodTypeList">
        <test-method is-config="true" signature="getFoodTypeListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@54e1c68b]" started-at="2025-06-06T23:51:52Z" name="getFoodTypeListSetUp" finished-at="2025-06-06T23:51:52Z" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFoodTypeListSetUp -->
        <test-method signature="verifyFoodTypeList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetFoodTypeList@54e1c68b]" started-at="2025-06-06T23:51:52Z" name="verifyFoodTypeList" data-provider="getFoodTypeListData" finished-at="2025-06-06T23:51:52Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getfoodtypelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getfoodtypelist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get food tyoe list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFoodTypeList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetFoodTypeList -->
      <class name="com.menumitratCommonAPITestScript.StaffRoleListTestScript">
        <test-method is-config="true" signature="staffRoleListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@2805d709]" started-at="2025-06-06T23:50:54Z" name="staffRoleListSetUp" finished-at="2025-06-06T23:50:54Z" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListSetUp -->
        <test-method signature="staffRoleListNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@2805d709]" started-at="2025-06-06T23:50:54Z" name="staffRoleListNegativeTest" data-provider="getStaffRoleListNegativeData" finished-at="2025-06-06T23:50:54Z" duration-ms="61" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffrolelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffrolelist_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Staff role list with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1909"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[	{ "detail": "Outlet not found" }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff role list negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff role list negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.StaffRoleListTestScript.staffRoleListNegativeTest(StaffRoleListTestScript.java:395)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListNegativeTest -->
        <test-method signature="staffRoleListTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.StaffRoleListTestScript@2805d709]" started-at="2025-06-06T23:50:54Z" name="staffRoleListTest" data-provider="getStaffRoleListData" finished-at="2025-06-06T23:50:54Z" duration-ms="55" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[staffrolelist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[staffrolelist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Staff role list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "role_list": [
        {
            "role_name": "cleaner",
            "staff_count": 0
        },
        {
            "role_name": "receptionist",
            "staff_count": 0
        },
        {
            "role_name": "all",
            "staff_count": 0
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in staff role list test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in staff role list test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.StaffRoleListTestScript.staffRoleListTest(StaffRoleListTestScript.java:227)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staffRoleListTest -->
      </class> <!-- com.menumitratCommonAPITestScript.StaffRoleListTestScript -->
      <class name="com.menumitratCommonAPITestScript.TableCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@5d0a1059]" started-at="2025-06-06T23:50:49Z" name="setup" finished-at="2025-06-06T23:50:49Z" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTableCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@5d0a1059]" started-at="2025-06-06T23:50:49Z" name="verifyTableCreate" data-provider="getTableCreateData" finished-at="2025-06-06T23:50:49Z" duration-ms="82" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablecreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablecreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify table create ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    
    "outlet_id": "1",
    "section_id": "17",
    "user_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet table created successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.TableCreateTestScript.verifyTableCreate(TableCreateTestScript.java:271)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableCreate -->
        <test-method signature="verifyTableCreateNegative(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TableCreateTestScript@5d0a1059]" started-at="2025-06-06T23:50:49Z" name="verifyTableCreateNegative" data-provider="getTableCreateNegativeData" finished-at="2025-06-06T23:50:49Z" duration-ms="48" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[tablecreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tablecreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid user id table create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1","section_id": "17", "user_id":"@"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"User ID must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in table create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in table create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.TableCreateTestScript.verifyTableCreateNegative(TableCreateTestScript.java:443)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableCreateNegative -->
      </class> <!-- com.menumitratCommonAPITestScript.TableCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.DefaultSettingTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@d5b810e]" started-at="2025-06-06T23:50:47Z" name="setup" finished-at="2025-06-06T23:50:47Z" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="defaultSetting(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@d5b810e]" started-at="2025-06-06T23:50:47Z" name="defaultSetting" data-provider="getDefaultSettingData" finished-at="2025-06-06T23:50:47Z" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultsettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultsettings001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Default Settings]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"2"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultSetting -->
        <test-method signature="defaultSettingsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@d5b810e]" started-at="2025-06-06T23:50:47Z" name="defaultSettingsNegativeTest" data-provider="getDefaultSettingsNegativeData" finished-at="2025-06-06T23:50:47Z" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultsettings]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[defaultsettings_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultSettingsNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.menumitratCommonAPITestScript.DefaultSettingTestScript@d5b810e]" started-at="2025-06-06T23:50:47Z" name="tearDown" finished-at="2025-06-06T23:50:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.menumitratCommonAPITestScript.DefaultSettingTestScript -->
      <class name="com.menumitratCommonAPITestScript.UpdateOutletTestScript">
        <test-method is-config="true" signature="updateOutletSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@3f6f6701]" started-at="2025-06-06T23:51:58Z" name="updateOutletSetUp" finished-at="2025-06-06T23:51:58Z" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletSetUp -->
        <test-method signature="updateOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@3f6f6701]" started-at="2025-06-06T23:51:58Z" name="updateOutletNegativeTest" data-provider="getUpdateOutletNegativeData" finished-at="2025-06-06T23:51:58Z" duration-ms="79" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid UPI_id, missing required fields]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "user_id": "2", "name": "jagdamb", "outlet_type": "", "fssainumber": "", "gstnumber": "", "mobile": "", "veg_nonveg": "", "service_charges": "", "gst": "", "address": "", "is_open": true, "upi_id": "", "website": "", "whatsapp": "", "facebook": "", "instagram": "", "google_business_link": "", "google_review": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"UPI ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update outlet negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.UpdateOutletTestScript.updateOutletNegativeTest(UpdateOutletTestScript.java:464)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletNegativeTest -->
        <test-method signature="updateOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@3f6f6701]" started-at="2025-06-06T23:51:58Z" name="updateOutletNegativeTest" data-provider="getUpdateOutletNegativeData" finished-at="2025-06-06T23:51:58Z" duration-ms="24" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing required field (outlet name)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1","name":"" "user_id": "2", "outlet_type": "mess", "fssainumber": "12345678901239", "gstnumber": "354545ddede1237", "mobile": "6767679760", "veg_nonveg": "veg", "service_charges": "1", "gst": "1", "address": "satara, maharashtra", "is_open": true, "upi_id": "dd@ok", "website": "http://website\", "whatsapp": "https://whatsapp\", "facebook": "https://facebook\", "instagram": "https://instagram\", "google_business_link": "https://business.com\", "google_review": "https://google-review\" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Name is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update outlet negative test: Expected a ',' or '}' at 30 [character 31 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update outlet negative test: Expected a ',' or '}' at 30 [character 31 line 1]
	at com.menumitratCommonAPITestScript.UpdateOutletTestScript.updateOutletNegativeTest(UpdateOutletTestScript.java:464)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletNegativeTest -->
        <test-method signature="updateOutletNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@3f6f6701]" started-at="2025-06-06T23:51:58Z" name="updateOutletNegativeTest" data-provider="getUpdateOutletNegativeData" finished-at="2025-06-06T23:51:58Z" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid mobile number format]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "user_id": "2", "name": "Khana Khazana", "outlet_type": "mess", "fssainumber": "12345678901239", "gstnumber": "354545ddede1237", "mobile": "abc123", "veg_nonveg": "veg", "service_charges": "1", "gst": "1", "address": "satara, maharashtra", "is_open": true, "upi_id": "dd@ok", "website": "http://website\", "whatsapp": "https://whatsapp\", "facebook": "https://facebook\", "instagram": "https://instagram/", "google_business_link": "https://business.com\", "google_review": "https://google-review\" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA["{ "detail": "Invalid mobile number format.", "data": {} }"]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update outlet negative test: Expected a ',' or '}' at 328 [character 329 line 1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update outlet negative test: Expected a ',' or '}' at 328 [character 329 line 1]
	at com.menumitratCommonAPITestScript.UpdateOutletTestScript.updateOutletNegativeTest(UpdateOutletTestScript.java:464)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOutletNegativeTest -->
        <test-method signature="verifyUpdateOutlet(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.UpdateOutletTestScript@3f6f6701]" started-at="2025-06-06T23:51:58Z" name="verifyUpdateOutlet" data-provider="getUpdateOutletData" finished-at="2025-06-06T23:51:58Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[updateoutlet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[updateoutlet_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify  update outlet]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "user_id":"2",         
    "name": "Bhavani Hotel",
    "outlet_type": "mess",
    "fssainumber": "12345678901239",
    "gstnumber": "354545ddede1237",
    "mobile": "6767679760",
    "veg_nonveg": "veg",
    "service_charges": "1",
    "gst": "1",
    "address": "satara, maharashtra",
    "is_open":true,
    "upi_id":"dd@ok",
    "website":"http://website",
    "whatsapp":"https://whatsapp",
    "facebook":"https://facebook",
    "instagram":"https://instagram",
    "google_business_link":"https://business.com",
    "google_review":"https://google-review"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Outlet information updated successfully",
    "data": {
        "outlet_id": 1,
        "name": "Khana Khazana"
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in update outlet test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in update outlet test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.UpdateOutletTestScript.verifyUpdateOutlet(UpdateOutletTestScript.java:276)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateOutlet -->
      </class> <!-- com.menumitratCommonAPITestScript.UpdateOutletTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainListViewTestScript">
        <test-method is-config="true" signature="captainListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@342c38f8]" started-at="2025-06-06T23:50:48Z" name="captainListViewSetUp" finished-at="2025-06-06T23:50:48Z" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewSetUp -->
        <test-method signature="captainListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@342c38f8]" started-at="2025-06-06T23:50:48Z" name="captainListViewNegativeTest" data-provider="getCaptainListViewNegativeData" finished-at="2025-06-06T23:50:48Z" duration-ms="55" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.CaptainListViewTestScript.captainListViewNegativeTest(CaptainListViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewNegativeTest -->
        <test-method signature="captainListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainListViewTestScript@342c38f8]" started-at="2025-06-06T23:50:48Z" name="captainListViewTest" data-provider="getCaptainListViewData" finished-at="2025-06-06T23:50:48Z" duration-ms="49" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captainlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captainlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain list view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in captain list view test: Status code mismatch - Expected: , Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in captain list view test: Status code mismatch - Expected: , Actual: 400
	at com.menumitratCommonAPITestScript.CaptainListViewTestScript.captainListViewTest(CaptainListViewTestScript.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefCreateTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:29Z" name="setup" finished-at="2025-06-06T23:51:29Z" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="chefCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:29Z" name="chefCreateNegativeTest" data-provider="getChefCreateNegativeData" finished-at="2025-06-06T23:51:29Z" duration-ms="82" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing mobile number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "1", "name": "chef four", "mobile": "", "address": "", "aadhar_number": "123456789018", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Mobile is required."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefCreateTestScript.chefCreateNegativeTest(ChefCreateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefCreateNegativeTest -->
        <test-method signature="chefCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:29Z" name="chefCreateNegativeTest" data-provider="getChefCreateNegativeData" finished-at="2025-06-06T23:51:29Z" duration-ms="79" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing name]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "1", "name": "", "mobile": "8600890098", "address": "", "aadhar_number": "123456789018", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "Name is required."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefCreateTestScript.chefCreateNegativeTest(ChefCreateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefCreateNegativeTest -->
        <test-method signature="chefCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:29Z" name="chefCreateNegativeTest" data-provider="getChefCreateNegativeData" finished-at="2025-06-06T23:51:29Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "", "name": "chef four", "mobile": "8600890098", "address": "", "aadhar_number": "123456789018", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefCreateNegativeTest -->
        <test-method signature="chefCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:29Z" name="chefCreateNegativeTest" data-provider="getChefCreateNegativeData" finished-at="2025-06-06T23:51:30Z" duration-ms="87" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing aadhar_number]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "1", "name": "chef four", "mobile": "8600890098", "address": "", "aadhar_number": "", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Aadhar number is required."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef create negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefCreateTestScript.chefCreateNegativeTest(ChefCreateTestScript.java:414)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefCreateNegativeTest -->
        <test-method signature="chefCreateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:30Z" name="chefCreateNegativeTest" data-provider="getChefCreateNegativeData" finished-at="2025-06-06T23:51:30Z" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[All fields empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "", "outlet_id": "", "name": "", "mobile": "", "address": "", "aadhar_number": "", "dob": "", "email": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefCreateNegativeTest -->
        <test-method signature="createChef(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefCreateTestScript@4310d43]" started-at="2025-06-06T23:51:30Z" name="createChef" data-provider="getChefCreateData" finished-at="2025-06-06T23:51:30Z" duration-ms="66" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefcreate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefcreate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef create]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   "update_user_id":"2",
    "outlet_id": "1",
    "name": "chef four ",
    "mobile":"8600890098",
    "address" : "",
    "aadhar_number": "123456789018",
    "dob":"",
    "email":""  }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Chef created successfully",
    "chef_id": 14
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ChefCreateTestScript.createChef(ChefCreateTestScript.java:226)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createChef -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefCreateTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefListViewTestScript">
        <test-method is-config="true" signature="chefListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@59505b48]" started-at="2025-06-06T23:51:40Z" name="chefListViewSetUp" finished-at="2025-06-06T23:51:40Z" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewSetUp -->
        <test-method signature="chefListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@59505b48]" started-at="2025-06-06T23:51:41Z" name="chefListViewNegativeTest" data-provider="getChefListViewNegativeData" finished-at="2025-06-06T23:51:41Z" duration-ms="258" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[cheflistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheflistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef list view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef list view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefListViewTestScript.chefListViewNegativeTest(ChefListViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewNegativeTest -->
        <test-method signature="chefListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefListViewTestScript@59505b48]" started-at="2025-06-06T23:51:41Z" name="chefListViewTest" data-provider="getChefListViewData" finished-at="2025-06-06T23:51:41Z" duration-ms="63" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[cheflistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cheflistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef listview]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id": "1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "chefs": [
        {
            "outlet_id": 1,
            "user_id": 14,
            "name": "chef bhau",
            "mobile": "8600000007",
            "dob": null,
            "email": ""
        },
        {
            "outlet_id": 1,
            "user_id": 13,
            "name": "chef ",
            "mobile": "8600000000",
            "dob": null,
            "email": "h@gmai"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef list view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef list view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ChefListViewTestScript.chefListViewTest(ChefListViewTestScript.java:220)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetStaffRole">
        <test-method is-config="true" signature="getStaffRoleSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@6fd83fc1]" started-at="2025-06-06T23:50:39Z" name="getStaffRoleSetUp" finished-at="2025-06-06T23:50:40Z" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStaffRoleSetUp -->
        <test-method signature="verifyStaffRole(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetStaffRole@6fd83fc1]" started-at="2025-06-06T23:50:40Z" name="verifyStaffRole" data-provider="getStaffRoleData" finished-at="2025-06-06T23:50:40Z" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getstaffrole]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getstaffrole_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Staff Role]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[get]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStaffRole -->
      </class> <!-- com.menumitratCommonAPITestScript.GetStaffRole -->
      <class name="com.menumitratCommonAPITestScript.GetSupplierListTestScript">
        <test-method is-config="true" signature="supplierListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@6bd61f98]" started-at="2025-06-06T23:51:41Z" name="supplierListSetUp" finished-at="2025-06-06T23:51:42Z" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierListSetUp -->
        <test-method signature="getSupplierList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@6bd61f98]" started-at="2025-06-06T23:51:42Z" name="getSupplierList" data-provider="getSupplierListData" finished-at="2025-06-06T23:51:42Z" duration-ms="59" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getsupplierlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getsupplierlist_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify get supplier list]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
   
    "outlet_id": "1"
  
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "Balaji": 1,
    "B Supplier": 2,
    "C Supplier": 4,
    "heena Supplier": 6
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in get supplier list test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in get supplier list test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.GetSupplierListTestScript.getSupplierList(GetSupplierListTestScript.java:250)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSupplierList -->
        <test-method signature="getSupplierListNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetSupplierListTestScript@6bd61f98]" started-at="2025-06-06T23:51:42Z" name="getSupplierListNegativeTest" data-provider="getSupplierListNegativeData" finished-at="2025-06-06T23:51:42Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getsupplierlist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getsupplierlist_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify API response when outlet_id is invalid]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSupplierListNegativeTest -->
      </class> <!-- com.menumitratCommonAPITestScript.GetSupplierListTestScript -->
      <class name="com.menumitratCommonAPITestScript.TicketListViewTestScript">
        <test-method is-config="true" signature="ticketListViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@51e69659]" started-at="2025-06-06T23:51:22Z" name="ticketListViewSetUp" finished-at="2025-06-06T23:51:22Z" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewSetUp -->
        <test-method signature="ticketListViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@51e69659]" started-at="2025-06-06T23:51:22Z" name="ticketListViewNegativeTest" data-provider="getTicketListViewNegativeData" finished-at="2025-06-06T23:51:22Z" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketlistview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify response when outlet_id is invalid (e.g., special character)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "@" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet ID must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewNegativeTest -->
        <test-method signature="ticketListViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.TicketListViewTestScript@51e69659]" started-at="2025-06-06T23:51:22Z" name="ticketListViewTest" data-provider="getTicketListViewData" finished-at="2025-06-06T23:51:27Z" duration-ms="4798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ticketlistview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ticketlistview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Ticket List View]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Ticket list of outlet 1",
    "tickets": [
        {
            "ticket_id": 2,
            "ticket_number": null,
            "title": "Issue with system",
            "status": "wip",
            "created_on": "02 May 2025 05:40 PM",
            "user_name": "Heena",
            "user_role": "owner"
        },
        {
            "ticket_id": 1,
            "ticket_number": null,
            "title": "Issue with system",
            "status": "open",
            "created_on": "02 May 2025 05:38 PM",
            "user_name": "Heena",
            "user_role": "owner"
        }
    ]
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketListViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.TicketListViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.PosDetailsTestScript">
        <test-method is-config="true" signature="posDetailsSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@47e2e487]" started-at="2025-06-06T23:51:27Z" name="posDetailsSetUp" finished-at="2025-06-06T23:51:27Z" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsSetUp -->
        <test-method signature="posDetailsNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@47e2e487]" started-at="2025-06-06T23:51:27Z" name="posDetailsNegativeTest" data-provider="getPosDetailsNegativeData" finished-at="2025-06-06T23:51:27Z" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verifyempty user id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":"101"
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsNegativeTest -->
        <test-method signature="posDetailsTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.PosDetailsTestScript@47e2e487]" started-at="2025-06-06T23:51:28Z" name="posDetailsTest" data-provider="getPosDetailsData" finished-at="2025-06-06T23:51:28Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[posdetails]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[posdetails_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify pos details]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{   
    
    "user_id":2
    
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in pos details test: Status code mismatch - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in pos details test: Status code mismatch - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.PosDetailsTestScript.posDetailsTest(PosDetailsTestScript.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posDetailsTest -->
      </class> <!-- com.menumitratCommonAPITestScript.PosDetailsTestScript -->
      <class name="com.menumitratCommonAPITestScript.ChefViewTestScript">
        <test-method is-config="true" signature="chefViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@74751b3]" started-at="2025-06-06T23:50:37Z" name="chefViewSetUp" finished-at="2025-06-06T23:50:37Z" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewSetUp -->
        <test-method signature="chefViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@74751b3]" started-at="2025-06-06T23:50:37Z" name="chefViewNegativeTest" data-provider="getChefViewNegativeData" finished-at="2025-06-06T23:50:37Z" duration-ms="75" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefview_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing required fields in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewNegativeTest(ChefViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewNegativeTest -->
        <test-method signature="chefViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@74751b3]" started-at="2025-06-06T23:50:37Z" name="chefViewNegativeTest" data-provider="getChefViewNegativeData" finished-at="2025-06-06T23:50:37Z" duration-ms="77" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefview_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing 'user_id' field in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "", "outlet_id": "1" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide User ID."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewNegativeTest(ChefViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewNegativeTest -->
        <test-method signature="chefViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@74751b3]" started-at="2025-06-06T23:50:37Z" name="chefViewNegativeTest" data-provider="getChefViewNegativeData" finished-at="2025-06-06T23:50:38Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Missing 'outlet_id' field in request]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": "17", "outlet_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Outlet ID is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewNegativeTest(ChefViewTestScript.java:392)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewNegativeTest -->
        <test-method signature="chefViewTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.ChefViewTestScript@74751b3]" started-at="2025-06-06T23:50:38Z" name="chefViewTest" data-provider="getChefViewData" finished-at="2025-06-06T23:50:38Z" duration-ms="66" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chefview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chefview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify chef view ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
     "outlet_id":"1",
    "user_id": "18"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "chef": {
        "outlet_id": 1,
        "user_id": 13,
        "name": "chef ",
        "mobile": "8600000000",
        "aadhar_number": "123456789018",
        "address": "lean",
        "dob": null,
        "email": "h@gmai",
        "is_active": true,
        "created_by": "owner",
        "created_on": "02 May 2025 05:16:54 PM",
        "updated_by": null,
        "updated_on": null
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in chef view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in chef view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.ChefViewTestScript.chefViewTest(ChefViewTestScript.java:221)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chefViewTest -->
      </class> <!-- com.menumitratCommonAPITestScript.ChefViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.CheckVersionTestScript">
        <test-method is-config="true" signature="checkVersionSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@6e0f5f7f]" started-at="2025-06-06T23:50:54Z" name="checkVersionSetUp" finished-at="2025-06-06T23:50:54Z" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionSetUp -->
        <test-method signature="checkVersionNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@6e0f5f7f]" started-at="2025-06-06T23:50:54Z" name="checkVersionNegativeTest" data-provider="getCheckVersionNegativeData" finished-at="2025-06-06T23:50:54Z" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkversion]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checkversion_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[app_type is an empty string]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "app_type": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "App type is required"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionNegativeTest -->
        <test-method signature="checkVersionNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@6e0f5f7f]" started-at="2025-06-06T23:50:54Z" name="checkVersionNegativeTest" data-provider="getCheckVersionNegativeData" finished-at="2025-06-06T23:50:54Z" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkversion]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checkversion_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[app_type has unsupported type (number)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "app_type": "123"}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail": "Incorrect app type, app_type must be one of: user_app, owner_app, waiter_app, captain_app, partner_app, kds, cds, pos, statistics_dashbaord"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionNegativeTest -->
        <test-method signature="checkVersionTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CheckVersionTestScript@6e0f5f7f]" started-at="2025-06-06T23:50:54Z" name="checkVersionTest" data-provider="getCheckVersionData" finished-at="2025-06-06T23:50:54Z" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[checkversion]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[checkversion_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify check version ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "app_type": "pos"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "success": true,
    "detail": "Version retrieved successfully",
    "version": "1.0.0"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVersionTest -->
      </class> <!-- com.menumitratCommonAPITestScript.CheckVersionTestScript -->
      <class name="com.menumitratCommonAPITestScript.sectionUpdateTestScript">
        <test-method is-config="true" signature="sectionUpdateSetup()[pri:0, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@43dac38f]" started-at="2025-06-06T23:50:47Z" name="sectionUpdateSetup" finished-at="2025-06-06T23:50:48Z" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionUpdateSetup -->
        <test-method signature="sectionUpdateNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@43dac38f]" started-at="2025-06-06T23:50:48Z" name="sectionUpdateNegativeTest" data-provider="getSectionUpdateNegativeData" finished-at="2025-06-06T23:50:48Z" duration-ms="53" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty section_name value]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "section_id": 17, "outlet_id": 1, "section_name": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide section_name"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in section update negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in section update negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.sectionUpdateTestScript.sectionUpdateNegativeTest(sectionUpdateTestScript.java:472)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sectionUpdateNegativeTest -->
        <test-method signature="verifySectionUpdateUsingValidInputData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@43dac38f]" started-at="2025-06-06T23:50:48Z" name="verifySectionUpdateUsingValidInputData" data-provider="getSectionUpdatePositiveInputData" finished-at="2025-06-06T23:50:48Z" duration-ms="55" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid section update]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{  
    "user_id":2,
    "section_id":17,
    "outlet_id": 1,
    "section_name": "Top"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Outlet Section updated successfully"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[An error occurred during section update verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: An error occurred during section update verification
	at com.menumitratCommonAPITestScript.sectionUpdateTestScript.verifySectionUpdateUsingValidInputData(sectionUpdateTestScript.java:262)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionUpdateUsingValidInputData -->
        <test-method signature="verifySectionCreateUsingInvalidData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.menumitratCommonAPITestScript.sectionUpdateTestScript@43dac38f]" started-at="2025-06-06T23:50:48Z" name="verifySectionCreateUsingInvalidData" data-provider="getSectionUpdateNegativeInputData" finished-at="2025-06-06T23:50:48Z" duration-ms="52" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sectionupdate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sectionupdate_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Empty section_name value]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[patch]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "user_id": 2, "section_id": 17, "outlet_id": 1, "section_name": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "Please provide section_name"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in negative test case sectionupdate_002: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in negative test case sectionupdate_002: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.sectionUpdateTestScript.verifySectionCreateUsingInvalidData(sectionUpdateTestScript.java:322)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySectionCreateUsingInvalidData -->
      </class> <!-- com.menumitratCommonAPITestScript.sectionUpdateTestScript -->
      <class name="com.menumitratCommonAPITestScript.CaptainDeleteTestScript">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@c88a337]" started-at="2025-06-06T23:50:48Z" name="setup" finished-at="2025-06-06T23:50:49Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="captainDeleteNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@c88a337]" started-at="2025-06-06T23:50:49Z" name="captainDeleteNegativeTest" data-provider="getCaptainDeleteNegativeData" finished-at="2025-06-06T23:50:49Z" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaindelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaindelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify captain delete with null user_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "update_user_id": "2", "outlet_id": "1", "user_id": ""}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail": "Please provide user_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captainDeleteNegativeTest -->
        <test-method signature="deleteCaptain(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.CaptainDeleteTestScript@c88a337]" started-at="2025-06-06T23:50:49Z" name="deleteCaptain" data-provider="getCaptainDeleteData" finished-at="2025-06-06T23:50:49Z" duration-ms="54" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[captaindelete]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[captaindelete_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify captain delete]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[delete]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "update_user_id":"2",
 "user_id":"17",
 "outlet_id":"1"

}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "detail": "(pymysql.err.IntegrityError) (1048, \"Column 'user_id' cannot be null\")\n[SQL: UPDATE user_settings SET user_id=%(user_id)s WHERE user_settings.user_settings_id = %(user_settings_user_settings_id)s]\n[parameters: {'user_id': None, 'user_settings_user_settings_id': 5}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Test execution failed: Status code validation failed - Expected: 200, Actual: 404]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Test execution failed: Status code validation failed - Expected: 200, Actual: 404
	at com.menumitratCommonAPITestScript.CaptainDeleteTestScript.deleteCaptain(CaptainDeleteTestScript.java:234)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCaptain -->
      </class> <!-- com.menumitratCommonAPITestScript.CaptainDeleteTestScript -->
      <class name="com.menumitratCommonAPITestScript.MenuCategoryViewTestScript">
        <test-method is-config="true" signature="menuCategoryViewSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:50Z" name="menuCategoryViewSetUp" finished-at="2025-06-06T23:50:51Z" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewSetUp -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:51Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-06T23:50:51Z" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "abc", "menu_cat_id": "5" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"outlet_id must be a number"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:51Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-06T23:50:51Z" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[menu_cat_id is non-numeric]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "xyz" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ {"detail":"Menu category ID must be a number."}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.menuCategoryViewNegativeTest(MenuCategoryViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:51Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-06T23:50:51Z" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[outlet_id is empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "", "menu_cat_id": "5" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide outlet_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="menuCategoryViewNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:51Z" name="menuCategoryViewNegativeTest" data-provider="getMenuCategoryViewNegativeData" finished-at="2025-06-06T23:50:51Z" duration-ms="60" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[menu_cat_id is empty]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "1", "menu_cat_id": "" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{"detail":"Please provide menu_cat_id"}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view negative test: Error validating response: Error processing success response: Actual response does not match expected response
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.menuCategoryViewNegativeTest(MenuCategoryViewTestScript.java:388)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuCategoryViewNegativeTest -->
        <test-method signature="verifyMenuCategoryView(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.MenuCategoryViewTestScript@54bff557]" started-at="2025-06-06T23:50:51Z" name="verifyMenuCategoryView" data-provider="getMenuCategoryViewData" finished-at="2025-06-06T23:50:51Z" duration-ms="46" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[menucategoryview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[menucategoryview_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify menu category view]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
    "outlet_id":"1",
    "menu_cat_id": "5"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu category view test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu category view test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.MenuCategoryViewTestScript.verifyMenuCategoryView(MenuCategoryViewTestScript.java:261)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuCategoryView -->
      </class> <!-- com.menumitratCommonAPITestScript.MenuCategoryViewTestScript -->
      <class name="com.menumitratCommonAPITestScript.GetMenuList">
        <test-method is-config="true" signature="menuListSetUp()[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@4659191b]" started-at="2025-06-06T23:51:35Z" name="menuListSetUp" finished-at="2025-06-06T23:51:35Z" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- menuListSetUp -->
        <test-method signature="getMenuListNegativeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@4659191b]" started-at="2025-06-06T23:51:36Z" name="getMenuListNegativeTest" data-provider="getMenuListNegativeData" finished-at="2025-06-06T23:51:36Z" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[getmenulist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getmenu_list_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[negative]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Verify Get Menu List with invalid outlet_id]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{ "outlet_id": "999" }]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{ "detail": "outlet_id does not exist." }]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMenuListNegativeTest -->
        <test-method signature="verifyMenuList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.menumitratCommonAPITestScript.GetMenuList@4659191b]" started-at="2025-06-06T23:51:36Z" name="verifyMenuList" data-provider="getMenuListData" finished-at="2025-06-06T23:51:36Z" duration-ms="168" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[getmenulist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[getmenu_list_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[positive]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[verify Get Menu List]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[post]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{
 "outlet_id":"1"
}]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{
    "menu_list": {
        "Chicken biryani": 17,
        "Chicken Biryani": 9,
        "Chicken Biryani@434": 10,
        "Veg Biryani": 11,
        "Fried Rice": 12,
        "Jeera Rice": 13,
        "Lemon Ricee": 14,
        "Anda Biryani": 18
    }
}]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <exception class="com.menumitra.utilityclass.customException">
            <message>
              <![CDATA[Error in menu list test: Status code mismatch - Expected: 200, Actual: 400]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.menumitra.utilityclass.customException: Error in menu list test: Status code mismatch - Expected: 200, Actual: 400
	at com.menumitratCommonAPITestScript.GetMenuList.verifyMenuList(GetMenuList.java:260)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- com.menumitra.utilityclass.customException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuList -->
      </class> <!-- com.menumitratCommonAPITestScript.GetMenuList -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
